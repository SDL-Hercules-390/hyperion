#
# OS-specific checks and flags
#

# Enable IPv6 by default, overrule for individual OS
set (ENABLE_IPV6 1)
set (HAVE_DECL_IFNAMSIZ 1)

# Apple-specific fixes
if (APPLE)
  set(PTHREAD_SET_NAME_ONLY 1)
  set(CMAKE_MACOSX_RPATH 1)
  set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
endif()

# Windows-based defines
if (WIN32)
  set(IS_WINDOWS 1)
  set(OPTION_FTHREADS 1)
  set(NO_SIGABEND_HANDLER 1)

  set(HAVE_SOCKLEN_T 1)
  set(HAVE_DECL_IFNAMSIZ 0)

  message (STATUS "MSVC Toolset version: ${MSVC_TOOLSET_VERSION}")
endif()

# fix for AIX
set(CMAKE_PLATFORM_REQUIRED_RUNTIME_PATH /usr/lib /lib "${CMAKE_INSTALL_PREFIX}/lib")

# disable intel assembly optimalisations on powerpc:
if ("${CMAKE_HOST_SYSTEM_PROCESSOR}" STREQUAL "powerpc")
  set (NO_ASM_BYTESWAP 1)
  message( STATUS "Disabling assembly optimalisations.")
else()
  message( STATUS "Not disabling assembly optimalisations for '${CMAKE_HOST_SYSTEM_PROCESSOR}'.")
endif()


# Check if building for OS/400
# (note: you'd have to do cmake -DOS400 on your AIX build host for this to work)
if (OS400)
  # use fthreads implementation for OS400 because it contains an incomplete implementation of pthreads
  set(OPTION_FTHREADS 1)

  # set IS_OS400 so that a compile-time define of OS400 exists.
  set(IS_OS400 1)
  message (STATUS "Cross-compiling for OS/400")
else()
  message(STATUS "Not building for OS/400")
endif()

# Check if required to link with libm
check_include_file(libm/math.h HAVE_LIBM_MATH_H)
check_library_exists(m log "/lib;/usr/lib;/usr/local/lib" HAVE_M_LIB)
if (HAVE_M_LIB)
    set(LIBM_REQUIRED 1)
    message( STATUS "Linking with libm IS required" )
else (HAVE_M_LIB)
    message( STATUS "Linking with libm IS NOT required")
endif (HAVE_M_LIB)

# Store host's architecture
set(HOST_ARCH "${CMAKE_HOST_SYSTEM_PROCESSOR}")
