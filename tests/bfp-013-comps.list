ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page     1

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                     2 ***********************************************************************
                                                     3 *
                                                     4 *Testcase IEEE Compare and Compare And Signal.
                                                     5 *  Exhaustively test results from the Compare and Compare And Signal
                                                     6 *  instructions.  The Condition Code and FPC flags are saved for each
                                                     7 *  test value pair.  If an IEEE trap occurs, the DXC code is saved
                                                     8 *  instead of the Condition Code.
                                                     9 *
                                                    10 *
                                                    11 *                      ********************
                                                    12 *                      **   IMPORTANT!   **
                                                    13 *                      ********************
                                                    14 *
                                                    15 *        This test uses the Hercules Diagnose X'008' interface
                                                    16 *        to display messages and thus your .tst runtest script
                                                    17 *        MUST contain a "DIAG8CMD ENABLE" statement within it!
                                                    18 *
                                                    19 *
                                                    20 ***********************************************************************


                                                    22 ***********************************************************************
                                                    23 *
                                                    24 *                        bfp-013-comps.asm
                                                    25 *
                                                    26 *        This assembly-language source file is part of the
                                                    27 *        Hercules Binary Floating Point Validation Package
                                                    28 *                        by Stephen R. Orso
                                                    29 *
                                                    30 * Copyright 2016 by Stephen R Orso.
                                                    31 * Runtest *Compare dependency removed by Fish on 2022-08-16
                                                    32 * PADCSECT macro/usage removed by Fish on 2022-08-16
                                                    33 *
                                                    34 * Redistribution and use in source and binary forms, with or without
                                                    35 * modification, are permitted provided that the following conditions
                                                    36 * are met:
                                                    37 *
                                                    38 * 1. Redistributions of source code must retain the above copyright
                                                    39 *    notice, this list of conditions and the following disclaimer.
                                                    40 *
                                                    41 * 2. Redistributions in binary form must reproduce the above copyright
                                                    42 *    notice, this list of conditions and the following disclaimer in
                                                    43 *    the documentation and/or other materials provided  with the
                                                    44 *    distribution.
                                                    45 *
                                                    46 * 3. The name of the author may not be used to endorse or promote
                                                    47 *    products derived from this software without specific prior written
                                                    48 *    permission.
                                                    49 *
                                                    50 * DISCLAMER: THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER "AS IS"
                                                    51 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
                                                    52 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
                                                    53 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
                                                    54 * HOLDER BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
                                                    55 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
                                                    56 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page     2

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                    57 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
                                                    58 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
                                                    59 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
                                                    60 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                                                    61 *
                                                    62 ***********************************************************************


                                                    64 ***********************************************************************
                                                    65 *
                                                    66 *  Each possible comparison class is tested, for a total of 64 test
                                                    67 *  value pairs for each of the five instruction precisions and formats.
                                                    68 *  Each instruction precision and format is tested twice, once with
                                                    69 *  exceptions non-trappable and once with exceptions trappable.
                                                    70 *
                                                    71 *  One list of input values is provided.  Each value is tested against
                                                    72 *  every other value in the same list.
                                                    73 *
                                                    74 *  Each result is two bytes, one for the CC and one for FPC flags.  If
                                                    75 *  a trap occurs, the DXC code replaces the CC.
                                                    76 *
                                                    77 * Tests 5 COMPARE, 5 COMPARE AND SIGNAL
                                                    78 *   COMPARE (BFP short, RRE) CEBR
                                                    79 *   COMPARE (BFP short, RXE) CEB
                                                    80 *   COMPARE (BFP long, RRE) CDBR
                                                    81 *   COMPARE (BFP long, RXE) CDB
                                                    82 *   COMPARE (BFP extended, RRE) CXBR
                                                    83 *   COMPARE AND SIGNAL (BFP short, RRE) KEBR
                                                    84 *   COMPARE AND SIGNAL (BFP short, RXE) KEB
                                                    85 *   COMPARE AND SIGNAL (BFP long, RRE) KDBR
                                                    86 *   COMPARE AND SIGNAL (BFP long, RXE) KDB
                                                    87 *   COMPARE AND SIGNAL (BFP extended, RRE) KXBR
                                                    88 *
                                                    89 * Also tests the following floating point support instructions
                                                    90 *   EXTRACT FPC
                                                    91 *   LOAD  (Short)
                                                    92 *   LOAD  (Long)
                                                    93 *   LOAD ZERO (Long)
                                                    94 *   STORE (Short)
                                                    95 *   STORE (Long)
                                                    96 *   SET FPC
                                                    97 *
                                                    98 ***********************************************************************
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page     3

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   100 *
                                                   101 *  Note: for compatibility with the z/CMS test rig, do not change
                                                   102 *  or use R11, R14, or R15.  Everything else is fair game.
                                                   103 *
                              00000000  0000A383   104 BFPCOMPS START 0
                              00000000  00000001   105 STRTLABL EQU   *
                              00000000  00000001   106 R0       EQU   0                   Work register for cc extraction
                              00000001  00000001   107 R1       EQU   1                   Current Test Data Class mask
                              00000002  00000001   108 R2       EQU   2                   Holds count of test input values
                              00000003  00000001   109 R3       EQU   3                   Points to next test input value(s)
                              00000004  00000001   110 R4       EQU   4                   Available
                              00000005  00000001   111 R5       EQU   5                   Available
                              00000006  00000001   112 R6       EQU   6                   Available
                              00000007  00000001   113 R7       EQU   7                   Ptr to next Compare result
                              00000008  00000001   114 R8       EQU   8                   Ptr to next Compare and Signal reslt
                              00000009  00000001   115 R9       EQU   9                   Available
                              0000000A  00000001   116 R10      EQU   10                  Pointer to test address list
                              0000000B  00000001   117 R11      EQU   11                  **Reserved for z/CMS test rig
                              0000000C  00000001   118 R12      EQU   12                  Test value top of loop
                              0000000D  00000001   119 R13      EQU   13                  Mainline return address
                              0000000E  00000001   120 R14      EQU   14                  **Return address for z/CMS test rig
                              0000000F  00000001   121 R15      EQU   15                  **Base register on z/CMS or Hyperion
                                                   122 *
                                                   123 * Floating Point Register equates to keep the cross reference clean
                                                   124 *
                              00000000  00000001   125 FPR0     EQU   0
                              00000001  00000001   126 FPR1     EQU   1
                              00000002  00000001   127 FPR2     EQU   2
                              00000003  00000001   128 FPR3     EQU   3
                              00000004  00000001   129 FPR4     EQU   4
                              00000005  00000001   130 FPR5     EQU   5
                              00000006  00000001   131 FPR6     EQU   6
                              00000007  00000001   132 FPR7     EQU   7
                              00000008  00000001   133 FPR8     EQU   8
                              00000009  00000001   134 FPR9     EQU   9
                              0000000A  00000001   135 FPR10    EQU   10
                              0000000B  00000001   136 FPR11    EQU   11
                              0000000C  00000001   137 FPR12    EQU   12
                              0000000D  00000001   138 FPR13    EQU   13
                              0000000E  00000001   139 FPR14    EQU   14
                              0000000F  00000001   140 FPR15    EQU   15
                                                   141 *
00000000                      00000000             142          USING *,R15
00000000                      0000A000             143          USING HELPERS,R12
                                                   144 *
                                                   145 * Above works on real iron (R15=0 after sysclear)
                                                   146 * and in z/CMS (R15 points to start of load module)
                                                   147 *


                                                   149 ***********************************************************************
                                                   150 *
                                                   151 * Low core definitions, Restart PSW, and Program Check Routine.
                                                   152 *
                                                   153 ***********************************************************************
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page     4

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000000                      00000000  0000008E   155          ORG   STRTLABL+X'8E'      Program check interrution code
0000008E  0000                                     156 PCINTCD  DS    H
                                                   157 *
                              00000150  00000001   158 PCOLDPSW EQU   STRTLABL+X'150'     z/Arch Program check old PSW
                                                   159 *
00000090                      00000090  000001A0   160          ORG   STRTLABL+X'1A0'     z/Arch Restart PSW
000001A0  00000001 80000000                        161          DC    X'0000000180000000',AD(START)
                                                   162 *
000001B0                      000001B0  000001D0   163          ORG   STRTLABL+X'1D0'     z/Arch Program check NEW PSW
000001D0  00000000 00000000                        164          DC    X'0000000000000000',AD(PROGCHK)
                                                   165 *
                                                   166 * Program check routine.  If Data Exception, continue execution at
                                                   167 * the instruction following the program check.  Otherwise, hard wait.
                                                   168 * No need to collect data.  All interesting DXC stuff is captured
                                                   169 * in the FPCR.
                                                   170 *
000001E0                      000001E0  00000200   171          ORG   STRTLABL+X'200'
00000200                                           172 PROGCHK  DS    0H             Program check occured...
00000200  9507 F08F                     0000008F   173          CLI   PCINTCD+1,X'07'  Data Exception?
00000204  A774 0004                     0000020C   174          JNE   PCNOTDTA       ..no, hardwait (not sure if R15 is ok)
00000208  B2B2 F150                     00000150   175          LPSWE PCOLDPSW       ..yes, resume program execution

0000020C  900F F23C                     0000023C   177 PCNOTDTA STM   R0,R15,SAVEREGS  Save registers
00000210  58C0 F27C                     0000027C   178          L     R12,AHELPERS     Get address of helper subroutines
00000214  4DD0 C000                     0000A000   179          BAS   R13,PGMCK        Report this unexpected program check
00000218  980F F23C                     0000023C   180          LM    R0,R15,SAVEREGS  Restore registers

0000021C  12EE                                     182          LTR   R14,R14        Return address provided?
0000021E  077E                                     183          BNZR  R14            Yes, return to z/CMS test rig.
00000220  B2B2 F228                     00000228   184          LPSWE PROGPSW        Not data exception, enter disabled wait
00000228  00020000 00000000                        185 PROGPSW  DC    0D'0',X'0002000000000000',XL6'00',X'DEAD' Abnormal end
00000238  B2B2 F2C8                     000002C8   186 FAIL     LPSWE FAILPSW        Not data exception, enter disabled wait
0000023C  00000000 00000000                        187 SAVEREGS DC    16F'0'         Registers save area
0000027C  0000A000                                 188 AHELPERS DC    A(HELPERS)     Address of helper subroutines
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page     5

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   190 ***********************************************************************
                                                   191 *
                                                   192 *  Main program.  Enable Advanced Floating Point, process test cases.
                                                   193 *
                                                   194 ***********************************************************************


00000280                                           196 START    DS    0H
00000280  B600 F2D8                     000002D8   197          STCTL R0,R0,CTLR0    Store CR0 to enable AFP
00000284  9604 F2D9                     000002D9   198          OI    CTLR0+1,X'04'  Turn on AFP bit
00000288  B700 F2D8                     000002D8   199          LCTL  R0,R0,CTLR0    Reload updated CR0
                                                   200 *
0000028C  41A0 F300                     00000300   201          LA    R10,SHORTC    Point to short BFP parameters
00000290  4DD0 F330                     00000330   202          BAS   R13,SBFPCOMP  Perform short BFP Compare
                                                   203 *
00000294  41A0 F310                     00000310   204          LA    R10,LONGC    Point to long BFP parameters
00000298  4DD0 F43C                     0000043C   205          BAS   R13,LBFPCOMP  Perform long BFP Compare
                                                   206 *
0000029C  41A0 F320                     00000320   207          LA    R10,XTNDC     Point to extended BFP parameters
000002A0  4DD0 F548                     00000548   208          BAS   R13,XBFPCOMP  Perform extended BFP Compare
                                                   209 *
                                                   210 ***********************************************************************
                                                   211 *                   Verify test results...
                                                   212 ***********************************************************************
                                                   213 *
000002A4  58C0 F27C                     0000027C   214          L     R12,AHELPERS     Get address of helper subroutines
000002A8  4DD0 C0A0                     0000A0A0   215          BAS   R13,VERISUB      Go verify results
000002AC  12EE                                     216          LTR   R14,R14          Was return address provided?
000002AE  077E                                     217          BNZR  R14              Yes, return to z/CMS test rig.
000002B0  B2B2 F2B8                     000002B8   218          LPSWE GOODPSW          Load SUCCESS PSW
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page     6

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000002B8                                           220          DS    0D            Ensure correct alignment for PSW
000002B8  00020000 00000000                        221 GOODPSW  DC    X'0002000000000000',AD(0)  Normal end - disabled wait
000002C8  00020000 00000000                        222 FAILPSW  DC    X'0002000000000000',XL6'00',X'0BAD' Abnormal end
                                                   223 *
000002D8  00000000                                 224 CTLR0    DS    F
000002DC  00000000                                 225 FPCREGNT DC    X'00000000'  FPCR, trap all IEEE exceptions, zero flags
000002E0  F8000000                                 226 FPCREGTR DC    X'F8000000'  FPCR, trap no IEEE exceptions, zero flags
                                                   227 *
                                                   228 * Input values parameter list, four fullwords for each test data set
                                                   229 *      1) Count,
                                                   230 *      2) Address of inputs,
                                                   231 *      3) Address to place results, and
                                                   232 *      4) Address to place DXC/Flags/cc values.
                                                   233 *
000002E4                      000002E4  00000300   234          ORG   STRTLABL+X'300'  Enable run-time replacement
00000300                                           235 SHORTC   DS    0F            Inputs for short BFP Compare
00000300  00000008                                 236          DC    A(SBFPCT)
00000304  000005EC                                 237          DC    A(SBFPIN)
00000308  00001000                                 238          DC    A(SBFPCCC)
0000030C  00001400                                 239          DC    A(SBFPCSCC)
                                                   240 *
00000310                                           241 LONGC    DS    0F            Inputs for long BFP Compare
00000310  00000008                                 242          DC    A(LBFPCT)
00000314  00000610                                 243          DC    A(LBFPIN)
00000318  00002000                                 244          DC    A(LBFPCCC)
0000031C  00002400                                 245          DC    A(LBFPCSCC)
                                                   246 *
00000320                                           247 XTNDC    DS    0F            Inputs for extended BFP Compare
00000320  00000008                                 248          DC    A(XBFPCT)
00000324  00000650                                 249          DC    A(XBFPIN)
00000328  00003000                                 250          DC    A(XBFPCCC)
0000032C  00003400                                 251          DC    A(XBFPCSCC)
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page     7

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   253 ***********************************************************************
                                                   254 *
                                                   255 * Compare short BFP inputs to each possible class of short BFP.  Eight
                                                   256 * pairs of results are generated for each input: one with all
                                                   257 * exceptions non-trappable, and the second with all exceptions
                                                   258 * trappable.   The CC and FPC flags are stored for each result that
                                                   259 * does not cause a trap.  The DXC code and  FPC flags are stored for
                                                   260 * each result that traps.
                                                   261 *
                                                   262 ***********************************************************************


00000330                                           264 SBFPCOMP DS    0H            Compare short BFP inputs
00000330  9823 A000                     00000000   265          LM    R2,R3,0(R10)  Get count and address of test input values
00000334  9878 A008                     00000008   266          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000338  1222                                     267          LTR   R2,R2         Any test cases?
0000033A  078D                                     268          BZR   R13           ..No, return to caller
0000033C  0DC0                                     269          BASR  R12,0         Set top of loop
                                                   270 *
0000033E  7880 3000                     00000000   271          LE    FPR8,0(,R3)   Get short BFP left-hand test value
00000342  9845 A000                     00000000   272          LM    R4,R5,0(R10)  Get count and start of right-hand side
00000346  1799                                     273          XR    R9,R9         Reference zero value for Set Program Mask
00000348  0D60                                     274          BASR  R6,0          Set top of inner loop
                                                   275 *
                                                   276 * top of loop to test left-hand value against each input
                                                   277 *
0000034A  7810 5000                     00000000   278          LE    FPR1,0(,R5)   Get right-hand side of compare
                                                   279 *
0000034E  B29D F2DC                     000002DC   280          LFPC  FPCREGNT      Set exceptions non-trappable
00000352  0490                                     281          SPM   R9            Clear condition code
00000354  B309 0081                                282          CEBR  FPR8,FPR1     Compare And Signal floating point nrs RRE
00000358  B29C 7000                     00000000   283          STFPC 0(R7)         Store FPC
0000035C  B222 0000                                284          IPM   R0            Get condition code and program mask
00000360  8800 001C                     0000001C   285          SRL   R0,28         Isolate CC in low order byte
00000364  4200 7003                     00000003   286          STC   R0,3(,R7)     Save condition code in results table
                                                   287 *
00000368  B29D F2E0                     000002E0   288          LFPC  FPCREGTR      Set exceptions trappable
0000036C  0490                                     289          SPM   R9            Clear condition code
0000036E  B309 0081                                290          CEBR  FPR8,FPR1     Compare And Signal floating point nrs RRE
00000372  B29C 7004                     00000004   291          STFPC 4(R7)         Store FPC
00000376  B222 0000                                292          IPM   R0            Get condition code and program mask
0000037A  8800 001C                     0000001C   293          SRL   R0,28         Isolate CC in low order byte
0000037E  4200 7007                     00000007   294          STC   R0,7(,R7)     Save condition code in results table
                                                   295 *
00000382  B29D F2DC                     000002DC   296          LFPC  FPCREGNT      Set exceptions non-trappable
00000386  0490                                     297          SPM   R9            Clear condition code
00000388  ED80 5000 0009                00000000   298          CEB   FPR8,0(,R5)   Compare And Signal floating point nrs RXE
0000038E  B29C 7008                     00000008   299          STFPC 8(R7)         Store FPC
00000392  B222 0000                                300          IPM   R0            Get condition code and program mask
00000396  8800 001C                     0000001C   301          SRL   R0,28         Isolate CC in low order byte
0000039A  4200 700B                     0000000B   302          STC   R0,11(,R7)    Save condition code in results table
                                                   303 *
0000039E  B29D F2E0                     000002E0   304          LFPC  FPCREGTR      Set exceptions trappable
000003A2  0490                                     305          SPM   R9            Clear condition code
000003A4  ED80 5000 0009                00000000   306          CEB   FPR8,0(,R5)   Compare And Signal floating point nrs RXE
000003AA  B29C 700C                     0000000C   307          STFPC 12(R7)        Store FPC
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page     8

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000003AE  B222 0000                                308          IPM   R0            Get condition code and program mask
000003B2  8800 001C                     0000001C   309          SRL   R0,28         Isolate CC in low order byte
000003B6  4200 700F                     0000000F   310          STC   R0,15(,R7)    Save condition code in results table
                                                   311 *
000003BA  B29D F2DC                     000002DC   312          LFPC  FPCREGNT      Set exceptions non-trappable
000003BE  0490                                     313          SPM   R9            Clear condition code
000003C0  B308 0081                                314          KEBR  FPR8,FPR1     Compare And Signal floating point nrs RRE
000003C4  B29C 8000                     00000000   315          STFPC 0(R8)         Store FPC
000003C8  B222 0000                                316          IPM   R0            Get condition code and program mask
000003CC  8800 001C                     0000001C   317          SRL   R0,28         Isolate CC in low order byte
000003D0  4200 8003                     00000003   318          STC   R0,3(,R8)     Save condition code in results table
                                                   319 *
000003D4  B29D F2E0                     000002E0   320          LFPC  FPCREGTR      Set exceptions trappable
000003D8  0490                                     321          SPM   R9            Clear condition code
000003DA  B308 0081                                322          KEBR  FPR8,FPR1     Compare And Signal floating point nrs RRE
000003DE  B29C 8004                     00000004   323          STFPC 4(R8)         Store FPC
000003E2  B222 0000                                324          IPM   R0            Get condition code and program mask
000003E6  8800 001C                     0000001C   325          SRL   R0,28         Isolate CC in low order byte
000003EA  4200 8007                     00000007   326          STC   R0,7(,R8)     Save condition code in results table
                                                   327 *
000003EE  B29D F2DC                     000002DC   328          LFPC  FPCREGNT      Set exceptions non-trappable
000003F2  0490                                     329          SPM   R9            Clear condition code
000003F4  ED80 5000 0008                00000000   330          KEB   FPR8,0(,R5)   Compare And Signal floating point nrs RXE
000003FA  B29C 8008                     00000008   331          STFPC 8(R8)         Store FPC
000003FE  B222 0000                                332          IPM   R0            Get condition code and program mask
00000402  8800 001C                     0000001C   333          SRL   R0,28         Isolate CC in low order byte
00000406  4200 800B                     0000000B   334          STC   R0,11(,R8)    Save condition code in results table
                                                   335 *
0000040A  B29D F2E0                     000002E0   336          LFPC  FPCREGTR      Set exceptions trappable
0000040E  0490                                     337          SPM   R9            Clear condition code
00000410  ED80 5000 0008                00000000   338          KEB   FPR8,0(,R5)   Compare And Signal floating point nrs RXE
00000416  B29C 800C                     0000000C   339          STFPC 12(R8)        Store FPC
0000041A  B222 0000                                340          IPM   R0            Get condition code and program mask
0000041E  8800 001C                     0000001C   341          SRL   R0,28         Isolate CC in low order byte
00000422  4200 800F                     0000000F   342          STC   R0,15(,R8)    Save condition code in results table
                                                   343 *
00000426  4150 5004                     00000004   344          LA    R5,4(,R5)     Point to next right-hand value
0000042A  4170 7010                     00000010   345          LA    R7,16(,R7)    Point to next CC/DXC/FPR CEB result area
0000042E  4180 8010                     00000010   346          LA    R8,16(,R8)    Point to next CC/DXC/FPR KEB result area
00000432  0646                                     347          BCTR  R4,R6         Loop through right-hand values
                                                   348 *
00000434  4130 3004                     00000004   349          LA    R3,4(,R3)     Point to next left-hand value
00000438  062C                                     350          BCTR  R2,R12        Loop through left-hand values
                                                   351 *
0000043A  07FD                                     352          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page     9

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   354 ***********************************************************************
                                                   355 *
                                                   356 * Compare long BFP inputs to each possible class of long BFP.  Eight
                                                   357 * pairs of results are generated for each input: one with all
                                                   358 * exceptions non-trappable, and the second with all exceptions
                                                   359 * trappable.   The CC and FPC flags are stored for each result that
                                                   360 * does not cause a trap.  The DXC code and  FPC flags are stored for
                                                   361 * each result that traps.
                                                   362 *
                                                   363 ***********************************************************************


0000043C                                           365 LBFPCOMP DS    0H            Compare long BFP inputs
0000043C  9823 A000                     00000000   366          LM    R2,R3,0(R10)  Get count and address of test input values
00000440  9878 A008                     00000008   367          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000444  1222                                     368          LTR   R2,R2         Any test cases?
00000446  078D                                     369          BZR   R13           ..No, return to caller
00000448  0DC0                                     370          BASR  R12,0         Set top of loop
                                                   371 *
0000044A  6880 3000                     00000000   372          LD    FPR8,0(,R3)   Get long BFP left-hand test value
0000044E  9845 A000                     00000000   373          LM    R4,R5,0(R10)  Get count and start of right-hand side
00000452  1799                                     374          XR    R9,R9         Reference zero value for Set Program Mask
00000454  0D60                                     375          BASR  R6,0          Set top of inner loop
                                                   376 *
                                                   377 * top of loop to test left-hand value against each input
                                                   378 *
00000456  6810 5000                     00000000   379          LD    FPR1,0(,R5)   Get right-hand side of compare
                                                   380 *
0000045A  B29D F2DC                     000002DC   381          LFPC  FPCREGNT      Set exceptions non-trappable
0000045E  0490                                     382          SPM   R9            Clear condition code
00000460  B319 0081                                383          CDBR  FPR8,FPR1     Compare And Signal floating point nrs RRE
00000464  B29C 7000                     00000000   384          STFPC 0(R7)         Store FPC
00000468  B222 0000                                385          IPM   R0            Get condition code and program mask
0000046C  8800 001C                     0000001C   386          SRL   R0,28         Isolate CC in low order byte
00000470  4200 7003                     00000003   387          STC   R0,3(,R7)     Save condition code in results table
                                                   388 *
00000474  B29D F2E0                     000002E0   389          LFPC  FPCREGTR      Set exceptions trappable
00000478  0490                                     390          SPM   R9            Clear condition code
0000047A  B319 0081                                391          CDBR  FPR8,FPR1     Compare And Signal floating point nrs RRE
0000047E  B29C 7004                     00000004   392          STFPC 4(R7)         Store FPC
00000482  B222 0000                                393          IPM   R0            Get condition code and program mask
00000486  8800 001C                     0000001C   394          SRL   R0,28         Isolate CC in low order byte
0000048A  4200 7007                     00000007   395          STC   R0,7(,R7)     Save condition code in results table
                                                   396 *
0000048E  B29D F2DC                     000002DC   397          LFPC  FPCREGNT      Set exceptions non-trappable
00000492  0490                                     398          SPM   R9            Clear condition code
00000494  ED80 5000 0019                00000000   399          CDB   FPR8,0(,R5)   Compare And Signal floating point nrs RXE
0000049A  B29C 7008                     00000008   400          STFPC 8(R7)         Store FPC
0000049E  B222 0000                                401          IPM   R0            Get condition code and program mask
000004A2  8800 001C                     0000001C   402          SRL   R0,28         Isolate CC in low order byte
000004A6  4200 700B                     0000000B   403          STC   R0,11(,R7)    Save condition code in results table
                                                   404 *
000004AA  B29D F2E0                     000002E0   405          LFPC  FPCREGTR      Set exceptions trappable
000004AE  0490                                     406          SPM   R9            Clear condition code
000004B0  ED80 5000 0019                00000000   407          CDB   FPR8,0(,R5)   Compare And Signal floating point nrs RXE
000004B6  B29C 700C                     0000000C   408          STFPC 12(R7)        Store FPC
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    10

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000004BA  B222 0000                                409          IPM   R0            Get condition code and program mask
000004BE  8800 001C                     0000001C   410          SRL   R0,28         Isolate CC in low order byte
000004C2  4200 700F                     0000000F   411          STC   R0,15(,R7)    Save condition code in results table
                                                   412 *
000004C6  B29D F2DC                     000002DC   413          LFPC  FPCREGNT      Set exceptions non-trappable
000004CA  0490                                     414          SPM   R9            Clear condition code
000004CC  B318 0081                                415          KDBR  FPR8,FPR1     Compare And Signal floating point nrs RRE
000004D0  B29C 8000                     00000000   416          STFPC 0(R8)         Store FPC
000004D4  B222 0000                                417          IPM   R0            Get condition code and program mask
000004D8  8800 001C                     0000001C   418          SRL   R0,28         Isolate CC in low order byte
000004DC  4200 8003                     00000003   419          STC   R0,3(,R8)     Save condition code in results table
                                                   420 *
000004E0  B29D F2E0                     000002E0   421          LFPC  FPCREGTR      Set exceptions trappable
000004E4  0490                                     422          SPM   R9            Clear condition code
000004E6  B318 0081                                423          KDBR  FPR8,FPR1     Compare And Signal floating point nrs RRE
000004EA  B29C 8004                     00000004   424          STFPC 4(R8)         Store FPC
000004EE  B222 0000                                425          IPM   R0            Get condition code and program mask
000004F2  8800 001C                     0000001C   426          SRL   R0,28         Isolate CC in low order byte
000004F6  4200 8007                     00000007   427          STC   R0,7(,R8)     Save condition code in results table
                                                   428 *
000004FA  B29D F2DC                     000002DC   429          LFPC  FPCREGNT      Set exceptions non-trappable
000004FE  0490                                     430          SPM   R9            Clear condition code
00000500  ED80 5000 0018                00000000   431          KDB   FPR8,0(,R5)   Compare And Signal floating point nrs RXE
00000506  B29C 8008                     00000008   432          STFPC 8(R8)         Store FPC
0000050A  B222 0000                                433          IPM   R0            Get condition code and program mask
0000050E  8800 001C                     0000001C   434          SRL   R0,28         Isolate CC in low order byte
00000512  4200 800B                     0000000B   435          STC   R0,11(,R8)    Save condition code in results table
                                                   436 *
00000516  B29D F2E0                     000002E0   437          LFPC  FPCREGTR      Set exceptions trappable
0000051A  0490                                     438          SPM   R9            Clear condition code
0000051C  ED80 5000 0018                00000000   439          KDB   FPR8,0(,R5)   Compare And Signal floating point nrs RXE
00000522  B29C 800C                     0000000C   440          STFPC 12(R8)        Store FPC
00000526  B222 0000                                441          IPM   R0            Get condition code and program mask
0000052A  8800 001C                     0000001C   442          SRL   R0,28         Isolate CC in low order byte
0000052E  4200 800F                     0000000F   443          STC   R0,15(,R8)    Save condition code in results table
                                                   444 *
00000532  4150 5008                     00000008   445          LA    R5,8(,R5)     Point to next right-hand value
00000536  4170 7010                     00000010   446          LA    R7,16(,R7)    Point to next CC/DXC/FPR CDB result area
0000053A  4180 8010                     00000010   447          LA    R8,16(,R8)    Point to next CC/DXC/FPR KDB result area
0000053E  0646                                     448          BCTR  R4,R6         Loop through right-hand values
                                                   449 *
00000540  4130 3008                     00000008   450          LA    R3,8(,R3)     Point to next left-hand value
00000544  062C                                     451          BCTR  R2,R12        Loop through left-hand values
                                                   452 *
00000546  07FD                                     453          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    11

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   455 ***********************************************************************
                                                   456 *
                                                   457 * Compare long BFP inputs to each possible class of long BFP.  Eight
                                                   458 * pairs of results are generated for each input: one with all
                                                   459 * exceptions non-trappable, and the second with all exceptions
                                                   460 * trappable.   The CC and FPC flags are stored for each result that
                                                   461 * does not cause a trap.  The DXC code and  FPC flags are stored for
                                                   462 * each result that traps.
                                                   463 *
                                                   464 ***********************************************************************


00000548                                           466 XBFPCOMP DS    0H            Compare long BFP inputs
00000548  9823 A000                     00000000   467          LM    R2,R3,0(R10)  Get count and address of test input values
0000054C  9878 A008                     00000008   468          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000550  1222                                     469          LTR   R2,R2         Any test cases?
00000552  078D                                     470          BZR   R13           ..No, return to caller
00000554  0DC0                                     471          BASR  R12,0         Set top of loop
                                                   472 *
00000556  6880 3000                     00000000   473          LD    FPR8,0(,R3)   Get long BFP left-hand test value part 1
0000055A  68A0 3008                     00000008   474          LD    FPR10,8(,R3)  Get long BFP left-hand test value part 2
0000055E  9845 A000                     00000000   475          LM    R4,R5,0(R10)  Get count and start of right-hand side
00000562  1799                                     476          XR    R9,R9         Reference zero value for Set Program Mask
00000564  0D60                                     477          BASR  R6,0          Set top of inner loop
                                                   478 *
                                                   479 * top of loop to test left-hand value against each input
                                                   480 *
00000566  6810 5000                     00000000   481          LD    FPR1,0(,R5)   Get right-hand side of compare part 1
0000056A  6830 5008                     00000008   482          LD    FPR3,8(,R5)   Get right-hand side of compare part 2
                                                   483 *
0000056E  B29D F2DC                     000002DC   484          LFPC  FPCREGNT      Set exceptions non-trappable
00000572  0490                                     485          SPM   R9            Clear condition code
00000574  B349 0081                                486          CXBR  FPR8,FPR1     Compare And Signal floating point nrs RRE
00000578  B29C 7000                     00000000   487          STFPC 0(R7)         Store FPC
0000057C  B222 0000                                488          IPM   R0            Get condition code and program mask
00000580  8800 001C                     0000001C   489          SRL   R0,28         Isolate CC in low order byte
00000584  4200 7003                     00000003   490          STC   R0,3(,R7)     Save condition code in results table
                                                   491 *
00000588  B29D F2E0                     000002E0   492          LFPC  FPCREGTR      Set exceptions trappable
0000058C  0490                                     493          SPM   R9            Clear condition code
0000058E  B349 0081                                494          CXBR  FPR8,FPR1     Compare And Signal floating point nrs RRE
00000592  B29C 7004                     00000004   495          STFPC 4(R7)         Store FPC
00000596  B222 0000                                496          IPM   R0            Get condition code and program mask
0000059A  8800 001C                     0000001C   497          SRL   R0,28         Isolate CC in low order byte
0000059E  4200 7007                     00000007   498          STC   R0,7(,R7)     Save condition code in results table
                                                   499 *
000005A2  B29D F2DC                     000002DC   500          LFPC  FPCREGNT      Set exceptions non-trappable
000005A6  0490                                     501          SPM   R9            Clear condition code
000005A8  B348 0081                                502          KXBR  FPR8,FPR1     Compare And Signal floating point nrs RRE
000005AC  B29C 8000                     00000000   503          STFPC 0(R8)         Store FPC
000005B0  B222 0000                                504          IPM   R0            Get condition code and program mask
000005B4  8800 001C                     0000001C   505          SRL   R0,28         Isolate CC in low order byte
000005B8  4200 8003                     00000003   506          STC   R0,3(,R8)     Save condition code in results table
                                                   507 *
000005BC  B29D F2E0                     000002E0   508          LFPC  FPCREGTR      Set exceptions trappable
000005C0  0490                                     509          SPM   R9            Clear condition code
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    12

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000005C2  B348 0081                                510          KXBR  FPR8,FPR1     Compare And Signal floating point nrs RRE
000005C6  B29C 8004                     00000004   511          STFPC 4(R8)         Store FPC
000005CA  B222 0000                                512          IPM   R0            Get condition code and program mask
000005CE  8800 001C                     0000001C   513          SRL   R0,28         Isolate CC in low order byte
000005D2  4200 8007                     00000007   514          STC   R0,7(,R8)     Save condition code in results table
                                                   515 *
000005D6  4150 5010                     00000010   516          LA    R5,16(,R5)    Point to next right-hand value
000005DA  4170 7010                     00000010   517          LA    R7,16(,R7)    Point to next CC/DXC/FPR CDB result area
000005DE  4180 8010                     00000010   518          LA    R8,16(,R8)    Point to next CC/DXC/FPR KDB result area
000005E2  0646                                     519          BCTR  R4,R6         Loop through right-hand values
                                                   520 *
000005E4  4130 3010                     00000010   521          LA    R3,16(,R3)    Point to next left-hand value
000005E8  062C                                     522          BCTR  R2,R12        Loop through left-hand values
                                                   523 *
000005EA  07FD                                     524          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    13

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   526 ***********************************************************************
                                                   527 *
                                                   528 * Input test values.  Each input is tested against every input in the
                                                   529 * list, which means the eight values result in 64 tests.
                                                   530 *
                                                   531 ***********************************************************************


                                                   533 *
                                                   534 *  Short BFP Input values
                                                   535 *
000005EC                                           536 SBFPIN   DS    0F            Ensure fullword alignment for input table
000005EC  FF800000                                 537          DC    X'FF800000'      -infinity
000005F0  BF800000                                 538          DC    X'BF800000'      -1
000005F4  80000000                                 539          DC    X'80000000'      -0
000005F8  00000000                                 540          DC    X'00000000'      +0
000005FC  3F800000                                 541          DC    X'3F800000'      +1
00000600  7F800000                                 542          DC    X'7F800000'      +infinity
00000604  FFC00000                                 543          DC    X'FFC00000'      -QNaN
00000608  7F810000                                 544          DC    X'7F810000'      +SNaN
                              00000008  00000001   545 SBFPCT   EQU   (*-SBFPIN)/4  Count of input values
                                                   546 *
                                                   547 *  Long BFP Input values
                                                   548 *
00000610                                           549 LBFPIN   DS    0D            Ensure doubleword alignment for inputs
00000610  FFF00000 00000000                        550          DC    X'FFF0000000000000'      -infinity
00000618  BFF00000 00000000                        551          DC    X'BFF0000000000000'      -1
00000620  80000000 00000000                        552          DC    X'8000000000000000'      -0
00000628  00000000 00000000                        553          DC    X'0000000000000000'      +0
00000630  3FF00000 00000000                        554          DC    X'3FF0000000000000'      +1
00000638  7FF00000 00000000                        555          DC    X'7FF0000000000000'      +infinity
00000640  7FF80000 00000000                        556          DC    X'7FF8000000000000'      -QNaN
00000648  7FF01000 00000000                        557          DC    X'7FF0100000000000'      +SNaN
                              00000008  00000001   558 LBFPCT   EQU   (*-LBFPIN)/8  Count of input values
                                                   559 *
                                                   560 *  Long BFP Input values
                                                   561 *
00000650                                           562 XBFPIN   DS    0D            Ensure doubleword alignment for inputs
00000650  FFFF0000 00000000                        563          DC    X'FFFF0000000000000000000000000000'      -infinity
00000660  BFFF0000 00000000                        564          DC    X'BFFF0000000000000000000000000000'      -1
00000670  80000000 00000000                        565          DC    X'80000000000000000000000000000000'      -0
00000680  00000000 00000000                        566          DC    X'00000000000000000000000000000000'      +0
00000690  3FFF0000 00000000                        567          DC    X'3FFF0000000000000000000000000000'      +1
000006A0  7FFF0000 00000000                        568          DC    X'7FFF0000000000000000000000000000'      +infinity
000006B0  FFFF8000 00000000                        569          DC    X'FFFF8000000000000000000000000000'      -QNaN
000006C0  7FFF0100 00000000                        570          DC    X'7FFF0100000000000000000000000000'      +SNaN
                              00000008  00000001   571 XBFPCT   EQU   (*-XBFPIN)/16  Count of input values
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    14

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   573 ***********************************************************************
                                                   574 *                 ACTUAL results saved here
                                                   575 ***********************************************************************
                                                   576 *
                                                   577 *               Locations for ACTUAL results
                                                   578 *
                                                   579 *
                                                   580 * For each test result, four bytes are generated as follows
                                                   581 *  1 - non-trap CC
                                                   582 *  2 - non-trap FPC flags
                                                   583 *  3 - trappable CC
                                                   584 *  4 - trappable FPC flags
                                                   585 *
                                                   586 * Only for Compare involving SNaN and Compare And Signal involving any
                                                   587 * NaN will the trappable and non-trap results be different.
                                                   588 *
                                                   589 * For short and long instruction precisions, the RRE format is tested
                                                   590 * first, followed by the RXE format.  Extended precision only exists in
                                                   591 * RRE format.
                                                   592 *
                              00001000  00000001   593 SBFPCCC  EQU   STRTLABL+X'1000'    Integer short Compare results
                                                   594 *                                  ..room for 64 tests, all used
                                                   595 *
                              00001400  00000001   596 SBFPCSCC EQU   STRTLABL+X'1400'    Integer short Compare & Sig. results
                                                   597 *                                  ..room for 64 tests, all used
                                                   598 *
                              00002000  00000001   599 LBFPCCC  EQU   STRTLABL+X'2000'    Integer long Compare results
                                                   600 *                                  ..room for 64 tests, all used
                                                   601 *
                              00002400  00000001   602 LBFPCSCC EQU   STRTLABL+X'2400'    Integer lon Compare & Sig. results
                                                   603 *                                  ..room for 64 tests, all used
                                                   604 *
                              00003000  00000001   605 XBFPCCC  EQU   STRTLABL+X'3000'    Integer extended Compare results
                                                   606 *                                  ..room for 64 tests, all used
                                                   607 *
                              00003400  00000001   608 XBFPCSCC EQU   STRTLABL+X'3400'    Integer ext'd Compare & Sig. results
                                                   609 *                                  ..room for 64 tests, all used
                                                   610 *
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    15

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   612 ***********************************************************************
                                                   613 *                    EXPECTED results
                                                   614 ***********************************************************************
                                                   615 *
000006D0                      000006D0  00004000   616          ORG   STRTLABL+X'4000'   (past end of actual results)
                                                   617 *
                              00004000  00000001   618 SBFPCCC_GOOD EQU *
00004000  C3C5C2D9 61C3C5C2                        619  DC CL48'CEBR/CEB -infinity / -infinity'
00004030  00000000 F8000000                        620  DC XL16'00000000F800000000000000F8000000'
00004040  C3C5C2D9 61C3C5C2                        621  DC CL48'CEBR/CEB -infinity / -1'
00004070  00000001 F8000001                        622  DC XL16'00000001F800000100000001F8000001'
00004080  C3C5C2D9 61C3C5C2                        623  DC CL48'CEBR/CEB -infinity / -0'
000040B0  00000001 F8000001                        624  DC XL16'00000001F800000100000001F8000001'
000040C0  C3C5C2D9 61C3C5C2                        625  DC CL48'CEBR/CEB -infinity / +0'
000040F0  00000001 F8000001                        626  DC XL16'00000001F800000100000001F8000001'
00004100  C3C5C2D9 61C3C5C2                        627  DC CL48'CEBR/CEB -infinity / +1'
00004130  00000001 F8000001                        628  DC XL16'00000001F800000100000001F8000001'
00004140  C3C5C2D9 61C3C5C2                        629  DC CL48'CEBR/CEB -infinity / +infinity'
00004170  00000001 F8000001                        630  DC XL16'00000001F800000100000001F8000001'
00004180  C3C5C2D9 61C3C5C2                        631  DC CL48'CEBR/CEB -infinity / -QNaN'
000041B0  00000003 F8000003                        632  DC XL16'00000003F800000300000003F8000003'
000041C0  C3C5C2D9 61C3C5C2                        633  DC CL48'CEBR/CEB -infinity / +SNaN'
000041F0  00800003 F8008000                        634  DC XL16'00800003F800800000800003F8008000'
00004200  C3C5C2D9 61C3C5C2                        635  DC CL48'CEBR/CEB -1 / -infinity'
00004230  00000002 F8000002                        636  DC XL16'00000002F800000200000002F8000002'
00004240  C3C5C2D9 61C3C5C2                        637  DC CL48'CEBR/CEB -1 / -1'
00004270  00000000 F8000000                        638  DC XL16'00000000F800000000000000F8000000'
00004280  C3C5C2D9 61C3C5C2                        639  DC CL48'CEBR/CEB -1 / -0'
000042B0  00000001 F8000001                        640  DC XL16'00000001F800000100000001F8000001'
000042C0  C3C5C2D9 61C3C5C2                        641  DC CL48'CEBR/CEB -1 / +0'
000042F0  00000001 F8000001                        642  DC XL16'00000001F800000100000001F8000001'
00004300  C3C5C2D9 61C3C5C2                        643  DC CL48'CEBR/CEB -1 / +1'
00004330  00000001 F8000001                        644  DC XL16'00000001F800000100000001F8000001'
00004340  C3C5C2D9 61C3C5C2                        645  DC CL48'CEBR/CEB -1 / +infinity'
00004370  00000001 F8000001                        646  DC XL16'00000001F800000100000001F8000001'
00004380  C3C5C2D9 61C3C5C2                        647  DC CL48'CEBR/CEB -1 / -QNaN'
000043B0  00000003 F8000003                        648  DC XL16'00000003F800000300000003F8000003'
000043C0  C3C5C2D9 61C3C5C2                        649  DC CL48'CEBR/CEB -1 / +SNaN'
000043F0  00800003 F8008000                        650  DC XL16'00800003F800800000800003F8008000'
00004400  C3C5C2D9 61C3C5C2                        651  DC CL48'CEBR/CEB -0 / -infinity'
00004430  00000002 F8000002                        652  DC XL16'00000002F800000200000002F8000002'
00004440  C3C5C2D9 61C3C5C2                        653  DC CL48'CEBR/CEB -0 / -1'
00004470  00000002 F8000002                        654  DC XL16'00000002F800000200000002F8000002'
00004480  C3C5C2D9 61C3C5C2                        655  DC CL48'CEBR/CEB -0 / -0'
000044B0  00000000 F8000000                        656  DC XL16'00000000F800000000000000F8000000'
000044C0  C3C5C2D9 61C3C5C2                        657  DC CL48'CEBR/CEB -0 / +0'
000044F0  00000000 F8000000                        658  DC XL16'00000000F800000000000000F8000000'
00004500  C3C5C2D9 61C3C5C2                        659  DC CL48'CEBR/CEB -0 / +1'
00004530  00000001 F8000001                        660  DC XL16'00000001F800000100000001F8000001'
00004540  C3C5C2D9 61C3C5C2                        661  DC CL48'CEBR/CEB -0 / +infinity'
00004570  00000001 F8000001                        662  DC XL16'00000001F800000100000001F8000001'
00004580  C3C5C2D9 61C3C5C2                        663  DC CL48'CEBR/CEB -0 / -QNaN'
000045B0  00000003 F8000003                        664  DC XL16'00000003F800000300000003F8000003'
000045C0  C3C5C2D9 61C3C5C2                        665  DC CL48'CEBR/CEB -0 / +SNaN'
000045F0  00800003 F8008000                        666  DC XL16'00800003F800800000800003F8008000'
00004600  C3C5C2D9 61C3C5C2                        667  DC CL48'CEBR/CEB +0 / -infinity'
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    16

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00004630  00000002 F8000002                        668  DC XL16'00000002F800000200000002F8000002'
00004640  C3C5C2D9 61C3C5C2                        669  DC CL48'CEBR/CEB +0 / -1'
00004670  00000002 F8000002                        670  DC XL16'00000002F800000200000002F8000002'
00004680  C3C5C2D9 61C3C5C2                        671  DC CL48'CEBR/CEB +0 / -0'
000046B0  00000000 F8000000                        672  DC XL16'00000000F800000000000000F8000000'
000046C0  C3C5C2D9 61C3C5C2                        673  DC CL48'CEBR/CEB +0 / +0'
000046F0  00000000 F8000000                        674  DC XL16'00000000F800000000000000F8000000'
00004700  C3C5C2D9 61C3C5C2                        675  DC CL48'CEBR/CEB +0 / +1'
00004730  00000001 F8000001                        676  DC XL16'00000001F800000100000001F8000001'
00004740  C3C5C2D9 61C3C5C2                        677  DC CL48'CEBR/CEB +0 / +infinity'
00004770  00000001 F8000001                        678  DC XL16'00000001F800000100000001F8000001'
00004780  C3C5C2D9 61C3C5C2                        679  DC CL48'CEBR/CEB +0 / -QNaN'
000047B0  00000003 F8000003                        680  DC XL16'00000003F800000300000003F8000003'
000047C0  C3C5C2D9 61C3C5C2                        681  DC CL48'CEBR/CEB +0 / +SNaN'
000047F0  00800003 F8008000                        682  DC XL16'00800003F800800000800003F8008000'
00004800  C3C5C2D9 61C3C5C2                        683  DC CL48'CEBR/CEB +1 / -infinity'
00004830  00000002 F8000002                        684  DC XL16'00000002F800000200000002F8000002'
00004840  C3C5C2D9 61C3C5C2                        685  DC CL48'CEBR/CEB +1 / -1'
00004870  00000002 F8000002                        686  DC XL16'00000002F800000200000002F8000002'
00004880  C3C5C2D9 61C3C5C2                        687  DC CL48'CEBR/CEB +1 / -0'
000048B0  00000002 F8000002                        688  DC XL16'00000002F800000200000002F8000002'
000048C0  C3C5C2D9 61C3C5C2                        689  DC CL48'CEBR/CEB +1 / +0'
000048F0  00000002 F8000002                        690  DC XL16'00000002F800000200000002F8000002'
00004900  C3C5C2D9 61C3C5C2                        691  DC CL48'CEBR/CEB +1 / +1'
00004930  00000000 F8000000                        692  DC XL16'00000000F800000000000000F8000000'
00004940  C3C5C2D9 61C3C5C2                        693  DC CL48'CEBR/CEB +1 / +infinity'
00004970  00000001 F8000001                        694  DC XL16'00000001F800000100000001F8000001'
00004980  C3C5C2D9 61C3C5C2                        695  DC CL48'CEBR/CEB +1 / -QNaN'
000049B0  00000003 F8000003                        696  DC XL16'00000003F800000300000003F8000003'
000049C0  C3C5C2D9 61C3C5C2                        697  DC CL48'CEBR/CEB +1 / +SNaN'
000049F0  00800003 F8008000                        698  DC XL16'00800003F800800000800003F8008000'
00004A00  C3C5C2D9 61C3C5C2                        699  DC CL48'CEBR/CEB +infinity / -infinity'
00004A30  00000002 F8000002                        700  DC XL16'00000002F800000200000002F8000002'
00004A40  C3C5C2D9 61C3C5C2                        701  DC CL48'CEBR/CEB +infinity / -1'
00004A70  00000002 F8000002                        702  DC XL16'00000002F800000200000002F8000002'
00004A80  C3C5C2D9 61C3C5C2                        703  DC CL48'CEBR/CEB +infinity / -0'
00004AB0  00000002 F8000002                        704  DC XL16'00000002F800000200000002F8000002'
00004AC0  C3C5C2D9 61C3C5C2                        705  DC CL48'CEBR/CEB +infinity / +0'
00004AF0  00000002 F8000002                        706  DC XL16'00000002F800000200000002F8000002'
00004B00  C3C5C2D9 61C3C5C2                        707  DC CL48'CEBR/CEB +infinity / +1'
00004B30  00000002 F8000002                        708  DC XL16'00000002F800000200000002F8000002'
00004B40  C3C5C2D9 61C3C5C2                        709  DC CL48'CEBR/CEB +infinity / +infinity'
00004B70  00000000 F8000000                        710  DC XL16'00000000F800000000000000F8000000'
00004B80  C3C5C2D9 61C3C5C2                        711  DC CL48'CEBR/CEB +infinity / -QNaN'
00004BB0  00000003 F8000003                        712  DC XL16'00000003F800000300000003F8000003'
00004BC0  C3C5C2D9 61C3C5C2                        713  DC CL48'CEBR/CEB +infinity / +SNaN'
00004BF0  00800003 F8008000                        714  DC XL16'00800003F800800000800003F8008000'
00004C00  C3C5C2D9 61C3C5C2                        715  DC CL48'CEBR/CEB -QNaN / -infinity'
00004C30  00000003 F8000003                        716  DC XL16'00000003F800000300000003F8000003'
00004C40  C3C5C2D9 61C3C5C2                        717  DC CL48'CEBR/CEB -QNaN / -1'
00004C70  00000003 F8000003                        718  DC XL16'00000003F800000300000003F8000003'
00004C80  C3C5C2D9 61C3C5C2                        719  DC CL48'CEBR/CEB -QNaN / -0'
00004CB0  00000003 F8000003                        720  DC XL16'00000003F800000300000003F8000003'
00004CC0  C3C5C2D9 61C3C5C2                        721  DC CL48'CEBR/CEB -QNaN / +0'
00004CF0  00000003 F8000003                        722  DC XL16'00000003F800000300000003F8000003'
00004D00  C3C5C2D9 61C3C5C2                        723  DC CL48'CEBR/CEB -QNaN / +1'
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    17

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00004D30  00000003 F8000003                        724  DC XL16'00000003F800000300000003F8000003'
00004D40  C3C5C2D9 61C3C5C2                        725  DC CL48'CEBR/CEB -QNaN / +infinity'
00004D70  00000003 F8000003                        726  DC XL16'00000003F800000300000003F8000003'
00004D80  C3C5C2D9 61C3C5C2                        727  DC CL48'CEBR/CEB -QNaN / -QNaN'
00004DB0  00000003 F8000003                        728  DC XL16'00000003F800000300000003F8000003'
00004DC0  C3C5C2D9 61C3C5C2                        729  DC CL48'CEBR/CEB -QNaN / +SNaN'
00004DF0  00800003 F8008000                        730  DC XL16'00800003F800800000800003F8008000'
00004E00  C3C5C2D9 61C3C5C2                        731  DC CL48'CEBR/CEB +SNaN / -infinity'
00004E30  00800003 F8008000                        732  DC XL16'00800003F800800000800003F8008000'
00004E40  C3C5C2D9 61C3C5C2                        733  DC CL48'CEBR/CEB +SNaN / -1'
00004E70  00800003 F8008000                        734  DC XL16'00800003F800800000800003F8008000'
00004E80  C3C5C2D9 61C3C5C2                        735  DC CL48'CEBR/CEB +SNaN / -0'
00004EB0  00800003 F8008000                        736  DC XL16'00800003F800800000800003F8008000'
00004EC0  C3C5C2D9 61C3C5C2                        737  DC CL48'CEBR/CEB +SNaN / +0'
00004EF0  00800003 F8008000                        738  DC XL16'00800003F800800000800003F8008000'
00004F00  C3C5C2D9 61C3C5C2                        739  DC CL48'CEBR/CEB +SNaN / +1'
00004F30  00800003 F8008000                        740  DC XL16'00800003F800800000800003F8008000'
00004F40  C3C5C2D9 61C3C5C2                        741  DC CL48'CEBR/CEB +SNaN / +infinity'
00004F70  00800003 F8008000                        742  DC XL16'00800003F800800000800003F8008000'
00004F80  C3C5C2D9 61C3C5C2                        743  DC CL48'CEBR/CEB +SNaN / -QNaN'
00004FB0  00800003 F8008000                        744  DC XL16'00800003F800800000800003F8008000'
00004FC0  C3C5C2D9 61C3C5C2                        745  DC CL48'CEBR/CEB +SNaN / +SNaN'
00004FF0  00800003 F8008000                        746  DC XL16'00800003F800800000800003F8008000'
                              00000040  00000001   747 SBFPCCC_NUM EQU (*-SBFPCCC_GOOD)/64
                                                   748 *
                                                   749 *
                              00005000  00000001   750 SBFPCSCC_GOOD EQU *
00005000  D2C5C2D9 61D2C5C2                        751  DC CL48'KEBR/KEB -infinity / -infinity'
00005030  00000000 F8000000                        752  DC XL16'00000000F800000000000000F8000000'
00005040  D2C5C2D9 61D2C5C2                        753  DC CL48'KEBR/KEB -infinity / -1'
00005070  00000001 F8000001                        754  DC XL16'00000001F800000100000001F8000001'
00005080  D2C5C2D9 61D2C5C2                        755  DC CL48'KEBR/KEB -infinity / -0'
000050B0  00000001 F8000001                        756  DC XL16'00000001F800000100000001F8000001'
000050C0  D2C5C2D9 61D2C5C2                        757  DC CL48'KEBR/KEB -infinity / +0'
000050F0  00000001 F8000001                        758  DC XL16'00000001F800000100000001F8000001'
00005100  D2C5C2D9 61D2C5C2                        759  DC CL48'KEBR/KEB -infinity / +1'
00005130  00000001 F8000001                        760  DC XL16'00000001F800000100000001F8000001'
00005140  D2C5C2D9 61D2C5C2                        761  DC CL48'KEBR/KEB -infinity / +infinity'
00005170  00000001 F8000001                        762  DC XL16'00000001F800000100000001F8000001'
00005180  D2C5C2D9 61D2C5C2                        763  DC CL48'KEBR/KEB -infinity / -QNaN'
000051B0  00800003 F8008000                        764  DC XL16'00800003F800800000800003F8008000'
000051C0  D2C5C2D9 61D2C5C2                        765  DC CL48'KEBR/KEB -infinity / +SNaN'
000051F0  00800003 F8008000                        766  DC XL16'00800003F800800000800003F8008000'
00005200  D2C5C2D9 61D2C5C2                        767  DC CL48'KEBR/KEB -1 / -infinity'
00005230  00000002 F8000002                        768  DC XL16'00000002F800000200000002F8000002'
00005240  D2C5C2D9 61D2C5C2                        769  DC CL48'KEBR/KEB -1 / -1'
00005270  00000000 F8000000                        770  DC XL16'00000000F800000000000000F8000000'
00005280  D2C5C2D9 61D2C5C2                        771  DC CL48'KEBR/KEB -1 / -0'
000052B0  00000001 F8000001                        772  DC XL16'00000001F800000100000001F8000001'
000052C0  D2C5C2D9 61D2C5C2                        773  DC CL48'KEBR/KEB -1 / +0'
000052F0  00000001 F8000001                        774  DC XL16'00000001F800000100000001F8000001'
00005300  D2C5C2D9 61D2C5C2                        775  DC CL48'KEBR/KEB -1 / +1'
00005330  00000001 F8000001                        776  DC XL16'00000001F800000100000001F8000001'
00005340  D2C5C2D9 61D2C5C2                        777  DC CL48'KEBR/KEB -1 / +infinity'
00005370  00000001 F8000001                        778  DC XL16'00000001F800000100000001F8000001'
00005380  D2C5C2D9 61D2C5C2                        779  DC CL48'KEBR/KEB -1 / -QNaN'
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    18

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000053B0  00800003 F8008000                        780  DC XL16'00800003F800800000800003F8008000'
000053C0  D2C5C2D9 61D2C5C2                        781  DC CL48'KEBR/KEB -1 / +SNaN'
000053F0  00800003 F8008000                        782  DC XL16'00800003F800800000800003F8008000'
00005400  D2C5C2D9 61D2C5C2                        783  DC CL48'KEBR/KEB -0 / -infinity'
00005430  00000002 F8000002                        784  DC XL16'00000002F800000200000002F8000002'
00005440  D2C5C2D9 61D2C5C2                        785  DC CL48'KEBR/KEB -0 / -1'
00005470  00000002 F8000002                        786  DC XL16'00000002F800000200000002F8000002'
00005480  D2C5C2D9 61D2C5C2                        787  DC CL48'KEBR/KEB -0 / -0'
000054B0  00000000 F8000000                        788  DC XL16'00000000F800000000000000F8000000'
000054C0  D2C5C2D9 61D2C5C2                        789  DC CL48'KEBR/KEB -0 / +0'
000054F0  00000000 F8000000                        790  DC XL16'00000000F800000000000000F8000000'
00005500  D2C5C2D9 61D2C5C2                        791  DC CL48'KEBR/KEB -0 / +1'
00005530  00000001 F8000001                        792  DC XL16'00000001F800000100000001F8000001'
00005540  D2C5C2D9 61D2C5C2                        793  DC CL48'KEBR/KEB -0 / +infinity'
00005570  00000001 F8000001                        794  DC XL16'00000001F800000100000001F8000001'
00005580  D2C5C2D9 61D2C5C2                        795  DC CL48'KEBR/KEB -0 / -QNaN'
000055B0  00800003 F8008000                        796  DC XL16'00800003F800800000800003F8008000'
000055C0  D2C5C2D9 61D2C5C2                        797  DC CL48'KEBR/KEB -0 / +SNaN'
000055F0  00800003 F8008000                        798  DC XL16'00800003F800800000800003F8008000'
00005600  D2C5C2D9 61D2C5C2                        799  DC CL48'KEBR/KEB +0 / -infinity'
00005630  00000002 F8000002                        800  DC XL16'00000002F800000200000002F8000002'
00005640  D2C5C2D9 61D2C5C2                        801  DC CL48'KEBR/KEB +0 / -1'
00005670  00000002 F8000002                        802  DC XL16'00000002F800000200000002F8000002'
00005680  D2C5C2D9 61D2C5C2                        803  DC CL48'KEBR/KEB +0 / -0'
000056B0  00000000 F8000000                        804  DC XL16'00000000F800000000000000F8000000'
000056C0  D2C5C2D9 61D2C5C2                        805  DC CL48'KEBR/KEB +0 / +0'
000056F0  00000000 F8000000                        806  DC XL16'00000000F800000000000000F8000000'
00005700  D2C5C2D9 61D2C5C2                        807  DC CL48'KEBR/KEB +0 / +1'
00005730  00000001 F8000001                        808  DC XL16'00000001F800000100000001F8000001'
00005740  D2C5C2D9 61D2C5C2                        809  DC CL48'KEBR/KEB +0 / +infinity'
00005770  00000001 F8000001                        810  DC XL16'00000001F800000100000001F8000001'
00005780  D2C5C2D9 61D2C5C2                        811  DC CL48'KEBR/KEB +0 / -QNaN'
000057B0  00800003 F8008000                        812  DC XL16'00800003F800800000800003F8008000'
000057C0  D2C5C2D9 61D2C5C2                        813  DC CL48'KEBR/KEB +0 / +SNaN'
000057F0  00800003 F8008000                        814  DC XL16'00800003F800800000800003F8008000'
00005800  D2C5C2D9 61D2C5C2                        815  DC CL48'KEBR/KEB +1 / -infinity'
00005830  00000002 F8000002                        816  DC XL16'00000002F800000200000002F8000002'
00005840  D2C5C2D9 61D2C5C2                        817  DC CL48'KEBR/KEB +1 / -1'
00005870  00000002 F8000002                        818  DC XL16'00000002F800000200000002F8000002'
00005880  D2C5C2D9 61D2C5C2                        819  DC CL48'KEBR/KEB +1 / -0'
000058B0  00000002 F8000002                        820  DC XL16'00000002F800000200000002F8000002'
000058C0  D2C5C2D9 61D2C5C2                        821  DC CL48'KEBR/KEB +1 / +0'
000058F0  00000002 F8000002                        822  DC XL16'00000002F800000200000002F8000002'
00005900  D2C5C2D9 61D2C5C2                        823  DC CL48'KEBR/KEB +1 / +1'
00005930  00000000 F8000000                        824  DC XL16'00000000F800000000000000F8000000'
00005940  D2C5C2D9 61D2C5C2                        825  DC CL48'KEBR/KEB +1 / +infinity'
00005970  00000001 F8000001                        826  DC XL16'00000001F800000100000001F8000001'
00005980  D2C5C2D9 61D2C5C2                        827  DC CL48'KEBR/KEB +1 / -QNaN'
000059B0  00800003 F8008000                        828  DC XL16'00800003F800800000800003F8008000'
000059C0  D2C5C2D9 61D2C5C2                        829  DC CL48'KEBR/KEB +1 / +SNaN'
000059F0  00800003 F8008000                        830  DC XL16'00800003F800800000800003F8008000'
00005A00  D2C5C2D9 61D2C5C2                        831  DC CL48'KEBR/KEB +infinity / -infinity'
00005A30  00000002 F8000002                        832  DC XL16'00000002F800000200000002F8000002'
00005A40  D2C5C2D9 61D2C5C2                        833  DC CL48'KEBR/KEB +infinity / -1'
00005A70  00000002 F8000002                        834  DC XL16'00000002F800000200000002F8000002'
00005A80  D2C5C2D9 61D2C5C2                        835  DC CL48'KEBR/KEB +infinity / -0'
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    19

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00005AB0  00000002 F8000002                        836  DC XL16'00000002F800000200000002F8000002'
00005AC0  D2C5C2D9 61D2C5C2                        837  DC CL48'KEBR/KEB +infinity / +0'
00005AF0  00000002 F8000002                        838  DC XL16'00000002F800000200000002F8000002'
00005B00  D2C5C2D9 61D2C5C2                        839  DC CL48'KEBR/KEB +infinity / +1'
00005B30  00000002 F8000002                        840  DC XL16'00000002F800000200000002F8000002'
00005B40  D2C5C2D9 61D2C5C2                        841  DC CL48'KEBR/KEB +infinity / +infinity'
00005B70  00000000 F8000000                        842  DC XL16'00000000F800000000000000F8000000'
00005B80  D2C5C2D9 61D2C5C2                        843  DC CL48'KEBR/KEB +infinity / -QNaN'
00005BB0  00800003 F8008000                        844  DC XL16'00800003F800800000800003F8008000'
00005BC0  D2C5C2D9 61D2C5C2                        845  DC CL48'KEBR/KEB +infinity / +SNaN'
00005BF0  00800003 F8008000                        846  DC XL16'00800003F800800000800003F8008000'
00005C00  D2C5C2D9 61D2C5C2                        847  DC CL48'KEBR/KEB -QNaN / -infinity'
00005C30  00800003 F8008000                        848  DC XL16'00800003F800800000800003F8008000'
00005C40  D2C5C2D9 61D2C5C2                        849  DC CL48'KEBR/KEB -QNaN / -1'
00005C70  00800003 F8008000                        850  DC XL16'00800003F800800000800003F8008000'
00005C80  D2C5C2D9 61D2C5C2                        851  DC CL48'KEBR/KEB -QNaN / -0'
00005CB0  00800003 F8008000                        852  DC XL16'00800003F800800000800003F8008000'
00005CC0  D2C5C2D9 61D2C5C2                        853  DC CL48'KEBR/KEB -QNaN / +0'
00005CF0  00800003 F8008000                        854  DC XL16'00800003F800800000800003F8008000'
00005D00  D2C5C2D9 61D2C5C2                        855  DC CL48'KEBR/KEB -QNaN / +1'
00005D30  00800003 F8008000                        856  DC XL16'00800003F800800000800003F8008000'
00005D40  D2C5C2D9 61D2C5C2                        857  DC CL48'KEBR/KEB -QNaN / +infinity'
00005D70  00800003 F8008000                        858  DC XL16'00800003F800800000800003F8008000'
00005D80  D2C5C2D9 61D2C5C2                        859  DC CL48'KEBR/KEB -QNaN / -QNaN'
00005DB0  00800003 F8008000                        860  DC XL16'00800003F800800000800003F8008000'
00005DC0  D2C5C2D9 61D2C5C2                        861  DC CL48'KEBR/KEB -QNaN / +SNaN'
00005DF0  00800003 F8008000                        862  DC XL16'00800003F800800000800003F8008000'
00005E00  D2C5C2D9 61D2C5C2                        863  DC CL48'KEBR/KEB +SNaN / -infinity'
00005E30  00800003 F8008000                        864  DC XL16'00800003F800800000800003F8008000'
00005E40  D2C5C2D9 61D2C5C2                        865  DC CL48'KEBR/KEB +SNaN / -1'
00005E70  00800003 F8008000                        866  DC XL16'00800003F800800000800003F8008000'
00005E80  D2C5C2D9 61D2C5C2                        867  DC CL48'KEBR/KEB +SNaN / -0'
00005EB0  00800003 F8008000                        868  DC XL16'00800003F800800000800003F8008000'
00005EC0  D2C5C2D9 61D2C5C2                        869  DC CL48'KEBR/KEB +SNaN / +0'
00005EF0  00800003 F8008000                        870  DC XL16'00800003F800800000800003F8008000'
00005F00  D2C5C2D9 61D2C5C2                        871  DC CL48'KEBR/KEB +SNaN / +1'
00005F30  00800003 F8008000                        872  DC XL16'00800003F800800000800003F8008000'
00005F40  D2C5C2D9 61D2C5C2                        873  DC CL48'KEBR/KEB +SNaN / +infinity'
00005F70  00800003 F8008000                        874  DC XL16'00800003F800800000800003F8008000'
00005F80  D2C5C2D9 61D2C5C2                        875  DC CL48'KEBR/KEB +SNaN / -QNaN'
00005FB0  00800003 F8008000                        876  DC XL16'00800003F800800000800003F8008000'
00005FC0  D2C5C2D9 61D2C5C2                        877  DC CL48'KEBR/KEB +SNaN / +SNaN'
00005FF0  00800003 F8008000                        878  DC XL16'00800003F800800000800003F8008000'
                              00000040  00000001   879 SBFPCSCC_NUM EQU (*-SBFPCSCC_GOOD)/64
                                                   880 *
                                                   881 *
                              00006000  00000001   882 LBFPCCC_GOOD EQU *
00006000  C3C4C2D9 61C3C4C2                        883  DC CL48'CDBR/CDB -infinity / -infinity'
00006030  00000000 F8000000                        884  DC XL16'00000000F800000000000000F8000000'
00006040  C3C4C2D9 61C3C4C2                        885  DC CL48'CDBR/CDB -infinity / -1'
00006070  00000001 F8000001                        886  DC XL16'00000001F800000100000001F8000001'
00006080  C3C4C2D9 61C3C4C2                        887  DC CL48'CDBR/CDB -infinity / -0'
000060B0  00000001 F8000001                        888  DC XL16'00000001F800000100000001F8000001'
000060C0  C3C4C2D9 61C3C4C2                        889  DC CL48'CDBR/CDB -infinity / +0'
000060F0  00000001 F8000001                        890  DC XL16'00000001F800000100000001F8000001'
00006100  C3C4C2D9 61C3C4C2                        891  DC CL48'CDBR/CDB -infinity / +1'
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    20

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00006130  00000001 F8000001                        892  DC XL16'00000001F800000100000001F8000001'
00006140  C3C4C2D9 61C3C4C2                        893  DC CL48'CDBR/CDB -infinity / +infinity'
00006170  00000001 F8000001                        894  DC XL16'00000001F800000100000001F8000001'
00006180  C3C4C2D9 61C3C4C2                        895  DC CL48'CDBR/CDB -infinity / -QNaN'
000061B0  00000003 F8000003                        896  DC XL16'00000003F800000300000003F8000003'
000061C0  C3C4C2D9 61C3C4C2                        897  DC CL48'CDBR/CDB -infinity / +SNaN'
000061F0  00800003 F8008000                        898  DC XL16'00800003F800800000800003F8008000'
00006200  C3C4C2D9 61C3C4C2                        899  DC CL48'CDBR/CDB -1 / -infinity'
00006230  00000002 F8000002                        900  DC XL16'00000002F800000200000002F8000002'
00006240  C3C4C2D9 61C3C4C2                        901  DC CL48'CDBR/CDB -1 / -1'
00006270  00000000 F8000000                        902  DC XL16'00000000F800000000000000F8000000'
00006280  C3C4C2D9 61C3C4C2                        903  DC CL48'CDBR/CDB -1 / -0'
000062B0  00000001 F8000001                        904  DC XL16'00000001F800000100000001F8000001'
000062C0  C3C4C2D9 61C3C4C2                        905  DC CL48'CDBR/CDB -1 / +0'
000062F0  00000001 F8000001                        906  DC XL16'00000001F800000100000001F8000001'
00006300  C3C4C2D9 61C3C4C2                        907  DC CL48'CDBR/CDB -1 / +1'
00006330  00000001 F8000001                        908  DC XL16'00000001F800000100000001F8000001'
00006340  C3C4C2D9 61C3C4C2                        909  DC CL48'CDBR/CDB -1 / +infinity'
00006370  00000001 F8000001                        910  DC XL16'00000001F800000100000001F8000001'
00006380  C3C4C2D9 61C3C4C2                        911  DC CL48'CDBR/CDB -1 / -QNaN'
000063B0  00000003 F8000003                        912  DC XL16'00000003F800000300000003F8000003'
000063C0  C3C4C2D9 61C3C4C2                        913  DC CL48'CDBR/CDB -1 / +SNaN'
000063F0  00800003 F8008000                        914  DC XL16'00800003F800800000800003F8008000'
00006400  C3C4C2D9 61C3C4C2                        915  DC CL48'CDBR/CDB -0 / -infinity'
00006430  00000002 F8000002                        916  DC XL16'00000002F800000200000002F8000002'
00006440  C3C4C2D9 61C3C4C2                        917  DC CL48'CDBR/CDB -0 / -1'
00006470  00000002 F8000002                        918  DC XL16'00000002F800000200000002F8000002'
00006480  C3C4C2D9 61C3C4C2                        919  DC CL48'CDBR/CDB -0 / -0'
000064B0  00000000 F8000000                        920  DC XL16'00000000F800000000000000F8000000'
000064C0  C3C4C2D9 61C3C4C2                        921  DC CL48'CDBR/CDB -0 / +0'
000064F0  00000000 F8000000                        922  DC XL16'00000000F800000000000000F8000000'
00006500  C3C4C2D9 61C3C4C2                        923  DC CL48'CDBR/CDB -0 / +1'
00006530  00000001 F8000001                        924  DC XL16'00000001F800000100000001F8000001'
00006540  C3C4C2D9 61C3C4C2                        925  DC CL48'CDBR/CDB -0 / +infinity'
00006570  00000001 F8000001                        926  DC XL16'00000001F800000100000001F8000001'
00006580  C3C4C2D9 61C3C4C2                        927  DC CL48'CDBR/CDB -0 / -QNaN'
000065B0  00000003 F8000003                        928  DC XL16'00000003F800000300000003F8000003'
000065C0  C3C4C2D9 61C3C4C2                        929  DC CL48'CDBR/CDB -0 / +SNaN'
000065F0  00800003 F8008000                        930  DC XL16'00800003F800800000800003F8008000'
00006600  C3C4C2D9 61C3C4C2                        931  DC CL48'CDBR/CDB +0 / -infinity'
00006630  00000002 F8000002                        932  DC XL16'00000002F800000200000002F8000002'
00006640  C3C4C2D9 61C3C4C2                        933  DC CL48'CDBR/CDB +0 / -1'
00006670  00000002 F8000002                        934  DC XL16'00000002F800000200000002F8000002'
00006680  C3C4C2D9 61C3C4C2                        935  DC CL48'CDBR/CDB +0 / -0'
000066B0  00000000 F8000000                        936  DC XL16'00000000F800000000000000F8000000'
000066C0  C3C4C2D9 61C3C4C2                        937  DC CL48'CDBR/CDB +0 / +0'
000066F0  00000000 F8000000                        938  DC XL16'00000000F800000000000000F8000000'
00006700  C3C4C2D9 61C3C4C2                        939  DC CL48'CDBR/CDB +0 / +1'
00006730  00000001 F8000001                        940  DC XL16'00000001F800000100000001F8000001'
00006740  C3C4C2D9 61C3C4C2                        941  DC CL48'CDBR/CDB +0 / +infinity'
00006770  00000001 F8000001                        942  DC XL16'00000001F800000100000001F8000001'
00006780  C3C4C2D9 61C3C4C2                        943  DC CL48'CDBR/CDB +0 / -QNaN'
000067B0  00000003 F8000003                        944  DC XL16'00000003F800000300000003F8000003'
000067C0  C3C4C2D9 61C3C4C2                        945  DC CL48'CDBR/CDB +0 / +SNaN'
000067F0  00800003 F8008000                        946  DC XL16'00800003F800800000800003F8008000'
00006800  C3C4C2D9 61C3C4C2                        947  DC CL48'CDBR/CDB +1 / -infinity'
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    21

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00006830  00000002 F8000002                        948  DC XL16'00000002F800000200000002F8000002'
00006840  C3C4C2D9 61C3C4C2                        949  DC CL48'CDBR/CDB +1 / -1'
00006870  00000002 F8000002                        950  DC XL16'00000002F800000200000002F8000002'
00006880  C3C4C2D9 61C3C4C2                        951  DC CL48'CDBR/CDB +1 / -0'
000068B0  00000002 F8000002                        952  DC XL16'00000002F800000200000002F8000002'
000068C0  C3C4C2D9 61C3C4C2                        953  DC CL48'CDBR/CDB +1 / +0'
000068F0  00000002 F8000002                        954  DC XL16'00000002F800000200000002F8000002'
00006900  C3C4C2D9 61C3C4C2                        955  DC CL48'CDBR/CDB +1 / +1'
00006930  00000000 F8000000                        956  DC XL16'00000000F800000000000000F8000000'
00006940  C3C4C2D9 61C3C4C2                        957  DC CL48'CDBR/CDB +1 / +infinity'
00006970  00000001 F8000001                        958  DC XL16'00000001F800000100000001F8000001'
00006980  C3C4C2D9 61C3C4C2                        959  DC CL48'CDBR/CDB +1 / -QNaN'
000069B0  00000003 F8000003                        960  DC XL16'00000003F800000300000003F8000003'
000069C0  C3C4C2D9 61C3C4C2                        961  DC CL48'CDBR/CDB +1 / +SNaN'
000069F0  00800003 F8008000                        962  DC XL16'00800003F800800000800003F8008000'
00006A00  C3C4C2D9 61C3C4C2                        963  DC CL48'CDBR/CDB +infinity / -infinity'
00006A30  00000002 F8000002                        964  DC XL16'00000002F800000200000002F8000002'
00006A40  C3C4C2D9 61C3C4C2                        965  DC CL48'CDBR/CDB +infinity / -1'
00006A70  00000002 F8000002                        966  DC XL16'00000002F800000200000002F8000002'
00006A80  C3C4C2D9 61C3C4C2                        967  DC CL48'CDBR/CDB +infinity / -0'
00006AB0  00000002 F8000002                        968  DC XL16'00000002F800000200000002F8000002'
00006AC0  C3C4C2D9 61C3C4C2                        969  DC CL48'CDBR/CDB +infinity / +0'
00006AF0  00000002 F8000002                        970  DC XL16'00000002F800000200000002F8000002'
00006B00  C3C4C2D9 61C3C4C2                        971  DC CL48'CDBR/CDB +infinity / +1'
00006B30  00000002 F8000002                        972  DC XL16'00000002F800000200000002F8000002'
00006B40  C3C4C2D9 61C3C4C2                        973  DC CL48'CDBR/CDB +infinity / +infinity'
00006B70  00000000 F8000000                        974  DC XL16'00000000F800000000000000F8000000'
00006B80  C3C4C2D9 61C3C4C2                        975  DC CL48'CDBR/CDB +infinity / -QNaN'
00006BB0  00000003 F8000003                        976  DC XL16'00000003F800000300000003F8000003'
00006BC0  C3C4C2D9 61C3C4C2                        977  DC CL48'CDBR/CDB +infinity / +SNaN'
00006BF0  00800003 F8008000                        978  DC XL16'00800003F800800000800003F8008000'
00006C00  C3C4C2D9 61C3C4C2                        979  DC CL48'CDBR/CDB -QNaN / -infinity'
00006C30  00000003 F8000003                        980  DC XL16'00000003F800000300000003F8000003'
00006C40  C3C4C2D9 61C3C4C2                        981  DC CL48'CDBR/CDB -QNaN / -1'
00006C70  00000003 F8000003                        982  DC XL16'00000003F800000300000003F8000003'
00006C80  C3C4C2D9 61C3C4C2                        983  DC CL48'CDBR/CDB -QNaN / -0'
00006CB0  00000003 F8000003                        984  DC XL16'00000003F800000300000003F8000003'
00006CC0  C3C4C2D9 61C3C4C2                        985  DC CL48'CDBR/CDB -QNaN / +0'
00006CF0  00000003 F8000003                        986  DC XL16'00000003F800000300000003F8000003'
00006D00  C3C4C2D9 61C3C4C2                        987  DC CL48'CDBR/CDB -QNaN / +1'
00006D30  00000003 F8000003                        988  DC XL16'00000003F800000300000003F8000003'
00006D40  C3C4C2D9 61C3C4C2                        989  DC CL48'CDBR/CDB -QNaN / +infinity'
00006D70  00000003 F8000003                        990  DC XL16'00000003F800000300000003F8000003'
00006D80  C3C4C2D9 61C3C4C2                        991  DC CL48'CDBR/CDB -QNaN / -QNaN'
00006DB0  00000003 F8000003                        992  DC XL16'00000003F800000300000003F8000003'
00006DC0  C3C4C2D9 61C3C4C2                        993  DC CL48'CDBR/CDB -QNaN / +SNaN'
00006DF0  00800003 F8008000                        994  DC XL16'00800003F800800000800003F8008000'
00006E00  C3C4C2D9 61C3C4C2                        995  DC CL48'CDBR/CDB +SNaN / -infinity'
00006E30  00800003 F8008000                        996  DC XL16'00800003F800800000800003F8008000'
00006E40  C3C4C2D9 61C3C4C2                        997  DC CL48'CDBR/CDB +SNaN / -1'
00006E70  00800003 F8008000                        998  DC XL16'00800003F800800000800003F8008000'
00006E80  C3C4C2D9 61C3C4C2                        999  DC CL48'CDBR/CDB +SNaN / -0'
00006EB0  00800003 F8008000                       1000  DC XL16'00800003F800800000800003F8008000'
00006EC0  C3C4C2D9 61C3C4C2                       1001  DC CL48'CDBR/CDB +SNaN / +0'
00006EF0  00800003 F8008000                       1002  DC XL16'00800003F800800000800003F8008000'
00006F00  C3C4C2D9 61C3C4C2                       1003  DC CL48'CDBR/CDB +SNaN / +1'
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    22

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00006F30  00800003 F8008000                       1004  DC XL16'00800003F800800000800003F8008000'
00006F40  C3C4C2D9 61C3C4C2                       1005  DC CL48'CDBR/CDB +SNaN / +infinity'
00006F70  00800003 F8008000                       1006  DC XL16'00800003F800800000800003F8008000'
00006F80  C3C4C2D9 61C3C4C2                       1007  DC CL48'CDBR/CDB +SNaN / -QNaN'
00006FB0  00800003 F8008000                       1008  DC XL16'00800003F800800000800003F8008000'
00006FC0  C3C4C2D9 61C3C4C2                       1009  DC CL48'CDBR/CDB +SNaN / +SNaN'
00006FF0  00800003 F8008000                       1010  DC XL16'00800003F800800000800003F8008000'
                              00000040  00000001  1011 LBFPCCC_NUM EQU (*-LBFPCCC_GOOD)/64
                                                  1012 *
                                                  1013 *
                              00007000  00000001  1014 LBFPCSCC_GOOD EQU *
00007000  D2C4C2D9 61D2C4C2                       1015  DC CL48'KDBR/KDB -infinity / -infinity'
00007030  00000000 F8000000                       1016  DC XL16'00000000F800000000000000F8000000'
00007040  D2C4C2D9 61D2C4C2                       1017  DC CL48'KDBR/KDB -infinity / -1'
00007070  00000001 F8000001                       1018  DC XL16'00000001F800000100000001F8000001'
00007080  D2C4C2D9 61D2C4C2                       1019  DC CL48'KDBR/KDB -infinity / -0'
000070B0  00000001 F8000001                       1020  DC XL16'00000001F800000100000001F8000001'
000070C0  D2C4C2D9 61D2C4C2                       1021  DC CL48'KDBR/KDB -infinity / +0'
000070F0  00000001 F8000001                       1022  DC XL16'00000001F800000100000001F8000001'
00007100  D2C4C2D9 61D2C4C2                       1023  DC CL48'KDBR/KDB -infinity / +1'
00007130  00000001 F8000001                       1024  DC XL16'00000001F800000100000001F8000001'
00007140  D2C4C2D9 61D2C4C2                       1025  DC CL48'KDBR/KDB -infinity / +infinity'
00007170  00000001 F8000001                       1026  DC XL16'00000001F800000100000001F8000001'
00007180  D2C4C2D9 61D2C4C2                       1027  DC CL48'KDBR/KDB -infinity / -QNaN'
000071B0  00800003 F8008000                       1028  DC XL16'00800003F800800000800003F8008000'
000071C0  D2C4C2D9 61D2C4C2                       1029  DC CL48'KDBR/KDB -infinity / +SNaN'
000071F0  00800003 F8008000                       1030  DC XL16'00800003F800800000800003F8008000'
00007200  D2C4C2D9 61D2C4C2                       1031  DC CL48'KDBR/KDB -1 / -infinity'
00007230  00000002 F8000002                       1032  DC XL16'00000002F800000200000002F8000002'
00007240  D2C4C2D9 61D2C4C2                       1033  DC CL48'KDBR/KDB -1 / -1'
00007270  00000000 F8000000                       1034  DC XL16'00000000F800000000000000F8000000'
00007280  D2C4C2D9 61D2C4C2                       1035  DC CL48'KDBR/KDB -1 / -0'
000072B0  00000001 F8000001                       1036  DC XL16'00000001F800000100000001F8000001'
000072C0  D2C4C2D9 61D2C4C2                       1037  DC CL48'KDBR/KDB -1 / +0'
000072F0  00000001 F8000001                       1038  DC XL16'00000001F800000100000001F8000001'
00007300  D2C4C2D9 61D2C4C2                       1039  DC CL48'KDBR/KDB -1 / +1'
00007330  00000001 F8000001                       1040  DC XL16'00000001F800000100000001F8000001'
00007340  D2C4C2D9 61D2C4C2                       1041  DC CL48'KDBR/KDB -1 / +infinity'
00007370  00000001 F8000001                       1042  DC XL16'00000001F800000100000001F8000001'
00007380  D2C4C2D9 61D2C4C2                       1043  DC CL48'KDBR/KDB -1 / -QNaN'
000073B0  00800003 F8008000                       1044  DC XL16'00800003F800800000800003F8008000'
000073C0  D2C4C2D9 61D2C4C2                       1045  DC CL48'KDBR/KDB -1 / +SNaN'
000073F0  00800003 F8008000                       1046  DC XL16'00800003F800800000800003F8008000'
00007400  D2C4C2D9 61D2C4C2                       1047  DC CL48'KDBR/KDB -0 / -infinity'
00007430  00000002 F8000002                       1048  DC XL16'00000002F800000200000002F8000002'
00007440  D2C4C2D9 61D2C4C2                       1049  DC CL48'KDBR/KDB -0 / -1'
00007470  00000002 F8000002                       1050  DC XL16'00000002F800000200000002F8000002'
00007480  D2C4C2D9 61D2C4C2                       1051  DC CL48'KDBR/KDB -0 / -0'
000074B0  00000000 F8000000                       1052  DC XL16'00000000F800000000000000F8000000'
000074C0  D2C4C2D9 61D2C4C2                       1053  DC CL48'KDBR/KDB -0 / +0'
000074F0  00000000 F8000000                       1054  DC XL16'00000000F800000000000000F8000000'
00007500  D2C4C2D9 61D2C4C2                       1055  DC CL48'KDBR/KDB -0 / +1'
00007530  00000001 F8000001                       1056  DC XL16'00000001F800000100000001F8000001'
00007540  D2C4C2D9 61D2C4C2                       1057  DC CL48'KDBR/KDB -0 / +infinity'
00007570  00000001 F8000001                       1058  DC XL16'00000001F800000100000001F8000001'
00007580  D2C4C2D9 61D2C4C2                       1059  DC CL48'KDBR/KDB -0 / -QNaN'
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    23

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000075B0  00800003 F8008000                       1060  DC XL16'00800003F800800000800003F8008000'
000075C0  D2C4C2D9 61D2C4C2                       1061  DC CL48'KDBR/KDB -0 / +SNaN'
000075F0  00800003 F8008000                       1062  DC XL16'00800003F800800000800003F8008000'
00007600  D2C4C2D9 61D2C4C2                       1063  DC CL48'KDBR/KDB +0 / -infinity'
00007630  00000002 F8000002                       1064  DC XL16'00000002F800000200000002F8000002'
00007640  D2C4C2D9 61D2C4C2                       1065  DC CL48'KDBR/KDB +0 / -1'
00007670  00000002 F8000002                       1066  DC XL16'00000002F800000200000002F8000002'
00007680  D2C4C2D9 61D2C4C2                       1067  DC CL48'KDBR/KDB +0 / -0'
000076B0  00000000 F8000000                       1068  DC XL16'00000000F800000000000000F8000000'
000076C0  D2C4C2D9 61D2C4C2                       1069  DC CL48'KDBR/KDB +0 / +0'
000076F0  00000000 F8000000                       1070  DC XL16'00000000F800000000000000F8000000'
00007700  D2C4C2D9 61D2C4C2                       1071  DC CL48'KDBR/KDB +0 / +1'
00007730  00000001 F8000001                       1072  DC XL16'00000001F800000100000001F8000001'
00007740  D2C4C2D9 61D2C4C2                       1073  DC CL48'KDBR/KDB +0 / +infinity'
00007770  00000001 F8000001                       1074  DC XL16'00000001F800000100000001F8000001'
00007780  D2C4C2D9 61D2C4C2                       1075  DC CL48'KDBR/KDB +0 / -QNaN'
000077B0  00800003 F8008000                       1076  DC XL16'00800003F800800000800003F8008000'
000077C0  D2C4C2D9 61D2C4C2                       1077  DC CL48'KDBR/KDB +0 / +SNaN'
000077F0  00800003 F8008000                       1078  DC XL16'00800003F800800000800003F8008000'
00007800  D2C4C2D9 61D2C4C2                       1079  DC CL48'KDBR/KDB +1 / -infinity'
00007830  00000002 F8000002                       1080  DC XL16'00000002F800000200000002F8000002'
00007840  D2C4C2D9 61D2C4C2                       1081  DC CL48'KDBR/KDB +1 / -1'
00007870  00000002 F8000002                       1082  DC XL16'00000002F800000200000002F8000002'
00007880  D2C4C2D9 61D2C4C2                       1083  DC CL48'KDBR/KDB +1 / -0'
000078B0  00000002 F8000002                       1084  DC XL16'00000002F800000200000002F8000002'
000078C0  D2C4C2D9 61D2C4C2                       1085  DC CL48'KDBR/KDB +1 / +0'
000078F0  00000002 F8000002                       1086  DC XL16'00000002F800000200000002F8000002'
00007900  D2C4C2D9 61D2C4C2                       1087  DC CL48'KDBR/KDB +1 / +1'
00007930  00000000 F8000000                       1088  DC XL16'00000000F800000000000000F8000000'
00007940  D2C4C2D9 61D2C4C2                       1089  DC CL48'KDBR/KDB +1 / +infinity'
00007970  00000001 F8000001                       1090  DC XL16'00000001F800000100000001F8000001'
00007980  D2C4C2D9 61D2C4C2                       1091  DC CL48'KDBR/KDB +1 / -QNaN'
000079B0  00800003 F8008000                       1092  DC XL16'00800003F800800000800003F8008000'
000079C0  D2C4C2D9 61D2C4C2                       1093  DC CL48'KDBR/KDB +1 / +SNaN'
000079F0  00800003 F8008000                       1094  DC XL16'00800003F800800000800003F8008000'
00007A00  D2C4C2D9 61D2C4C2                       1095  DC CL48'KDBR/KDB +infinity / -infinity'
00007A30  00000002 F8000002                       1096  DC XL16'00000002F800000200000002F8000002'
00007A40  D2C4C2D9 61D2C4C2                       1097  DC CL48'KDBR/KDB +infinity / -1'
00007A70  00000002 F8000002                       1098  DC XL16'00000002F800000200000002F8000002'
00007A80  D2C4C2D9 61D2C4C2                       1099  DC CL48'KDBR/KDB +infinity / -0'
00007AB0  00000002 F8000002                       1100  DC XL16'00000002F800000200000002F8000002'
00007AC0  D2C4C2D9 61D2C4C2                       1101  DC CL48'KDBR/KDB +infinity / +0'
00007AF0  00000002 F8000002                       1102  DC XL16'00000002F800000200000002F8000002'
00007B00  D2C4C2D9 61D2C4C2                       1103  DC CL48'KDBR/KDB +infinity / +1'
00007B30  00000002 F8000002                       1104  DC XL16'00000002F800000200000002F8000002'
00007B40  D2C4C2D9 61D2C4C2                       1105  DC CL48'KDBR/KDB +infinity / +infinity'
00007B70  00000000 F8000000                       1106  DC XL16'00000000F800000000000000F8000000'
00007B80  D2C4C2D9 61D2C4C2                       1107  DC CL48'KDBR/KDB +infinity / -QNaN'
00007BB0  00800003 F8008000                       1108  DC XL16'00800003F800800000800003F8008000'
00007BC0  D2C4C2D9 61D2C4C2                       1109  DC CL48'KDBR/KDB +infinity / +SNaN'
00007BF0  00800003 F8008000                       1110  DC XL16'00800003F800800000800003F8008000'
00007C00  D2C4C2D9 61D2C4C2                       1111  DC CL48'KDBR/KDB -QNaN / -infinity'
00007C30  00800003 F8008000                       1112  DC XL16'00800003F800800000800003F8008000'
00007C40  D2C4C2D9 61D2C4C2                       1113  DC CL48'KDBR/KDB -QNaN / -1'
00007C70  00800003 F8008000                       1114  DC XL16'00800003F800800000800003F8008000'
00007C80  D2C4C2D9 61D2C4C2                       1115  DC CL48'KDBR/KDB -QNaN / -0'
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    24

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00007CB0  00800003 F8008000                       1116  DC XL16'00800003F800800000800003F8008000'
00007CC0  D2C4C2D9 61D2C4C2                       1117  DC CL48'KDBR/KDB -QNaN / +0'
00007CF0  00800003 F8008000                       1118  DC XL16'00800003F800800000800003F8008000'
00007D00  D2C4C2D9 61D2C4C2                       1119  DC CL48'KDBR/KDB -QNaN / +1'
00007D30  00800003 F8008000                       1120  DC XL16'00800003F800800000800003F8008000'
00007D40  D2C4C2D9 61D2C4C2                       1121  DC CL48'KDBR/KDB -QNaN / +infinity'
00007D70  00800003 F8008000                       1122  DC XL16'00800003F800800000800003F8008000'
00007D80  D2C4C2D9 61D2C4C2                       1123  DC CL48'KDBR/KDB -QNaN / -QNaN'
00007DB0  00800003 F8008000                       1124  DC XL16'00800003F800800000800003F8008000'
00007DC0  D2C4C2D9 61D2C4C2                       1125  DC CL48'KDBR/KDB -QNaN / +SNaN'
00007DF0  00800003 F8008000                       1126  DC XL16'00800003F800800000800003F8008000'
00007E00  D2C4C2D9 61D2C4C2                       1127  DC CL48'KDBR/KDB +SNaN / -infinity'
00007E30  00800003 F8008000                       1128  DC XL16'00800003F800800000800003F8008000'
00007E40  D2C4C2D9 61D2C4C2                       1129  DC CL48'KDBR/KDB +SNaN / -1'
00007E70  00800003 F8008000                       1130  DC XL16'00800003F800800000800003F8008000'
00007E80  D2C4C2D9 61D2C4C2                       1131  DC CL48'KDBR/KDB +SNaN / -0'
00007EB0  00800003 F8008000                       1132  DC XL16'00800003F800800000800003F8008000'
00007EC0  D2C4C2D9 61D2C4C2                       1133  DC CL48'KDBR/KDB +SNaN / +0'
00007EF0  00800003 F8008000                       1134  DC XL16'00800003F800800000800003F8008000'
00007F00  D2C4C2D9 61D2C4C2                       1135  DC CL48'KDBR/KDB +SNaN / +1'
00007F30  00800003 F8008000                       1136  DC XL16'00800003F800800000800003F8008000'
00007F40  D2C4C2D9 61D2C4C2                       1137  DC CL48'KDBR/KDB +SNaN / +infinity'
00007F70  00800003 F8008000                       1138  DC XL16'00800003F800800000800003F8008000'
00007F80  D2C4C2D9 61D2C4C2                       1139  DC CL48'KDBR/KDB +SNaN / -QNaN'
00007FB0  00800003 F8008000                       1140  DC XL16'00800003F800800000800003F8008000'
00007FC0  D2C4C2D9 61D2C4C2                       1141  DC CL48'KDBR/KDB +SNaN / +SNaN'
00007FF0  00800003 F8008000                       1142  DC XL16'00800003F800800000800003F8008000'
                              00000040  00000001  1143 LBFPCSCC_NUM EQU (*-LBFPCSCC_GOOD)/64
                                                  1144 *
                                                  1145 *
                              00008000  00000001  1146 XBFPCCC_GOOD EQU *
00008000  C3E7C2D9 40608995                       1147  DC CL48'CXBR -infinity / -infinity'
00008030  00000000 F8000000                       1148  DC XL16'00000000F80000000000000000000000'
00008040  C3E7C2D9 40608995                       1149  DC CL48'CXBR -infinity / -1'
00008070  00000001 F8000001                       1150  DC XL16'00000001F80000010000000000000000'
00008080  C3E7C2D9 40608995                       1151  DC CL48'CXBR -infinity / -0'
000080B0  00000001 F8000001                       1152  DC XL16'00000001F80000010000000000000000'
000080C0  C3E7C2D9 40608995                       1153  DC CL48'CXBR -infinity / +0'
000080F0  00000001 F8000001                       1154  DC XL16'00000001F80000010000000000000000'
00008100  C3E7C2D9 40608995                       1155  DC CL48'CXBR -infinity / +1'
00008130  00000001 F8000001                       1156  DC XL16'00000001F80000010000000000000000'
00008140  C3E7C2D9 40608995                       1157  DC CL48'CXBR -infinity / +infinity'
00008170  00000001 F8000001                       1158  DC XL16'00000001F80000010000000000000000'
00008180  C3E7C2D9 40608995                       1159  DC CL48'CXBR -infinity / -QNaN'
000081B0  00000003 F8000003                       1160  DC XL16'00000003F80000030000000000000000'
000081C0  C3E7C2D9 40608995                       1161  DC CL48'CXBR -infinity / +SNaN'
000081F0  00800003 F8008000                       1162  DC XL16'00800003F80080000000000000000000'
00008200  C3E7C2D9 4060F140                       1163  DC CL48'CXBR -1 / -infinity'
00008230  00000002 F8000002                       1164  DC XL16'00000002F80000020000000000000000'
00008240  C3E7C2D9 4060F140                       1165  DC CL48'CXBR -1 / -1'
00008270  00000000 F8000000                       1166  DC XL16'00000000F80000000000000000000000'
00008280  C3E7C2D9 4060F140                       1167  DC CL48'CXBR -1 / -0'
000082B0  00000001 F8000001                       1168  DC XL16'00000001F80000010000000000000000'
000082C0  C3E7C2D9 4060F140                       1169  DC CL48'CXBR -1 / +0'
000082F0  00000001 F8000001                       1170  DC XL16'00000001F80000010000000000000000'
00008300  C3E7C2D9 4060F140                       1171  DC CL48'CXBR -1 / +1'
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    25

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00008330  00000001 F8000001                       1172  DC XL16'00000001F80000010000000000000000'
00008340  C3E7C2D9 4060F140                       1173  DC CL48'CXBR -1 / +infinity'
00008370  00000001 F8000001                       1174  DC XL16'00000001F80000010000000000000000'
00008380  C3E7C2D9 4060F140                       1175  DC CL48'CXBR -1 / -QNaN'
000083B0  00000003 F8000003                       1176  DC XL16'00000003F80000030000000000000000'
000083C0  C3E7C2D9 4060F140                       1177  DC CL48'CXBR -1 / +SNaN'
000083F0  00800003 F8008000                       1178  DC XL16'00800003F80080000000000000000000'
00008400  C3E7C2D9 4060F040                       1179  DC CL48'CXBR -0 / -infinity'
00008430  00000002 F8000002                       1180  DC XL16'00000002F80000020000000000000000'
00008440  C3E7C2D9 4060F040                       1181  DC CL48'CXBR -0 / -1'
00008470  00000002 F8000002                       1182  DC XL16'00000002F80000020000000000000000'
00008480  C3E7C2D9 4060F040                       1183  DC CL48'CXBR -0 / -0'
000084B0  00000000 F8000000                       1184  DC XL16'00000000F80000000000000000000000'
000084C0  C3E7C2D9 4060F040                       1185  DC CL48'CXBR -0 / +0'
000084F0  00000000 F8000000                       1186  DC XL16'00000000F80000000000000000000000'
00008500  C3E7C2D9 4060F040                       1187  DC CL48'CXBR -0 / +1'
00008530  00000001 F8000001                       1188  DC XL16'00000001F80000010000000000000000'
00008540  C3E7C2D9 4060F040                       1189  DC CL48'CXBR -0 / +infinity'
00008570  00000001 F8000001                       1190  DC XL16'00000001F80000010000000000000000'
00008580  C3E7C2D9 4060F040                       1191  DC CL48'CXBR -0 / -QNaN'
000085B0  00000003 F8000003                       1192  DC XL16'00000003F80000030000000000000000'
000085C0  C3E7C2D9 4060F040                       1193  DC CL48'CXBR -0 / +SNaN'
000085F0  00800003 F8008000                       1194  DC XL16'00800003F80080000000000000000000'
00008600  C3E7C2D9 404EF040                       1195  DC CL48'CXBR +0 / -infinity'
00008630  00000002 F8000002                       1196  DC XL16'00000002F80000020000000000000000'
00008640  C3E7C2D9 404EF040                       1197  DC CL48'CXBR +0 / -1'
00008670  00000002 F8000002                       1198  DC XL16'00000002F80000020000000000000000'
00008680  C3E7C2D9 404EF040                       1199  DC CL48'CXBR +0 / -0'
000086B0  00000000 F8000000                       1200  DC XL16'00000000F80000000000000000000000'
000086C0  C3E7C2D9 404EF040                       1201  DC CL48'CXBR +0 / +0'
000086F0  00000000 F8000000                       1202  DC XL16'00000000F80000000000000000000000'
00008700  C3E7C2D9 404EF040                       1203  DC CL48'CXBR +0 / +1'
00008730  00000001 F8000001                       1204  DC XL16'00000001F80000010000000000000000'
00008740  C3E7C2D9 404EF040                       1205  DC CL48'CXBR +0 / +infinity'
00008770  00000001 F8000001                       1206  DC XL16'00000001F80000010000000000000000'
00008780  C3E7C2D9 404EF040                       1207  DC CL48'CXBR +0 / -QNaN'
000087B0  00000003 F8000003                       1208  DC XL16'00000003F80000030000000000000000'
000087C0  C3E7C2D9 404EF040                       1209  DC CL48'CXBR +0 / +SNaN'
000087F0  00800003 F8008000                       1210  DC XL16'00800003F80080000000000000000000'
00008800  C3E7C2D9 404EF140                       1211  DC CL48'CXBR +1 / -infinity'
00008830  00000002 F8000002                       1212  DC XL16'00000002F80000020000000000000000'
00008840  C3E7C2D9 404EF140                       1213  DC CL48'CXBR +1 / -1'
00008870  00000002 F8000002                       1214  DC XL16'00000002F80000020000000000000000'
00008880  C3E7C2D9 404EF140                       1215  DC CL48'CXBR +1 / -0'
000088B0  00000002 F8000002                       1216  DC XL16'00000002F80000020000000000000000'
000088C0  C3E7C2D9 404EF140                       1217  DC CL48'CXBR +1 / +0'
000088F0  00000002 F8000002                       1218  DC XL16'00000002F80000020000000000000000'
00008900  C3E7C2D9 404EF140                       1219  DC CL48'CXBR +1 / +1'
00008930  00000000 F8000000                       1220  DC XL16'00000000F80000000000000000000000'
00008940  C3E7C2D9 404EF140                       1221  DC CL48'CXBR +1 / +infinity'
00008970  00000001 F8000001                       1222  DC XL16'00000001F80000010000000000000000'
00008980  C3E7C2D9 404EF140                       1223  DC CL48'CXBR +1 / -QNaN'
000089B0  00000003 F8000003                       1224  DC XL16'00000003F80000030000000000000000'
000089C0  C3E7C2D9 404EF140                       1225  DC CL48'CXBR +1 / +SNaN'
000089F0  00800003 F8008000                       1226  DC XL16'00800003F80080000000000000000000'
00008A00  C3E7C2D9 404E8995                       1227  DC CL48'CXBR +infinity / -infinity'
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    26

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00008A30  00000002 F8000002                       1228  DC XL16'00000002F80000020000000000000000'
00008A40  C3E7C2D9 404E8995                       1229  DC CL48'CXBR +infinity / -1'
00008A70  00000002 F8000002                       1230  DC XL16'00000002F80000020000000000000000'
00008A80  C3E7C2D9 404E8995                       1231  DC CL48'CXBR +infinity / -0'
00008AB0  00000002 F8000002                       1232  DC XL16'00000002F80000020000000000000000'
00008AC0  C3E7C2D9 404E8995                       1233  DC CL48'CXBR +infinity / +0'
00008AF0  00000002 F8000002                       1234  DC XL16'00000002F80000020000000000000000'
00008B00  C3E7C2D9 404E8995                       1235  DC CL48'CXBR +infinity / +1'
00008B30  00000002 F8000002                       1236  DC XL16'00000002F80000020000000000000000'
00008B40  C3E7C2D9 404E8995                       1237  DC CL48'CXBR +infinity / +infinity'
00008B70  00000000 F8000000                       1238  DC XL16'00000000F80000000000000000000000'
00008B80  C3E7C2D9 404E8995                       1239  DC CL48'CXBR +infinity / -QNaN'
00008BB0  00000003 F8000003                       1240  DC XL16'00000003F80000030000000000000000'
00008BC0  C3E7C2D9 404E8995                       1241  DC CL48'CXBR +infinity / +SNaN'
00008BF0  00800003 F8008000                       1242  DC XL16'00800003F80080000000000000000000'
00008C00  C3E7C2D9 4060D8D5                       1243  DC CL48'CXBR -QNaN / -infinity'
00008C30  00000003 F8000003                       1244  DC XL16'00000003F80000030000000000000000'
00008C40  C3E7C2D9 4060D8D5                       1245  DC CL48'CXBR -QNaN / -1'
00008C70  00000003 F8000003                       1246  DC XL16'00000003F80000030000000000000000'
00008C80  C3E7C2D9 4060D8D5                       1247  DC CL48'CXBR -QNaN / -0'
00008CB0  00000003 F8000003                       1248  DC XL16'00000003F80000030000000000000000'
00008CC0  C3E7C2D9 4060D8D5                       1249  DC CL48'CXBR -QNaN / +0'
00008CF0  00000003 F8000003                       1250  DC XL16'00000003F80000030000000000000000'
00008D00  C3E7C2D9 4060D8D5                       1251  DC CL48'CXBR -QNaN / +1'
00008D30  00000003 F8000003                       1252  DC XL16'00000003F80000030000000000000000'
00008D40  C3E7C2D9 4060D8D5                       1253  DC CL48'CXBR -QNaN / +infinity'
00008D70  00000003 F8000003                       1254  DC XL16'00000003F80000030000000000000000'
00008D80  C3E7C2D9 4060D8D5                       1255  DC CL48'CXBR -QNaN / -QNaN'
00008DB0  00000003 F8000003                       1256  DC XL16'00000003F80000030000000000000000'
00008DC0  C3E7C2D9 4060D8D5                       1257  DC CL48'CXBR -QNaN / +SNaN'
00008DF0  00800003 F8008000                       1258  DC XL16'00800003F80080000000000000000000'
00008E00  C3E7C2D9 404EE2D5                       1259  DC CL48'CXBR +SNaN / -infinity'
00008E30  00800003 F8008000                       1260  DC XL16'00800003F80080000000000000000000'
00008E40  C3E7C2D9 404EE2D5                       1261  DC CL48'CXBR +SNaN / -1'
00008E70  00800003 F8008000                       1262  DC XL16'00800003F80080000000000000000000'
00008E80  C3E7C2D9 404EE2D5                       1263  DC CL48'CXBR +SNaN / -0'
00008EB0  00800003 F8008000                       1264  DC XL16'00800003F80080000000000000000000'
00008EC0  C3E7C2D9 404EE2D5                       1265  DC CL48'CXBR +SNaN / +0'
00008EF0  00800003 F8008000                       1266  DC XL16'00800003F80080000000000000000000'
00008F00  C3E7C2D9 404EE2D5                       1267  DC CL48'CXBR +SNaN / +1'
00008F30  00800003 F8008000                       1268  DC XL16'00800003F80080000000000000000000'
00008F40  C3E7C2D9 404EE2D5                       1269  DC CL48'CXBR +SNaN / +infinity'
00008F70  00800003 F8008000                       1270  DC XL16'00800003F80080000000000000000000'
00008F80  C3E7C2D9 404EE2D5                       1271  DC CL48'CXBR +SNaN / -QNaN'
00008FB0  00800003 F8008000                       1272  DC XL16'00800003F80080000000000000000000'
00008FC0  C3E7C2D9 404EE2D5                       1273  DC CL48'CXBR +SNaN / +SNaN'
00008FF0  00800003 F8008000                       1274  DC XL16'00800003F80080000000000000000000'
                              00000040  00000001  1275 XBFPCCC_NUM EQU (*-XBFPCCC_GOOD)/64
                                                  1276 *
                                                  1277 *
                              00009000  00000001  1278 XBFPCSCC_GOOD EQU *
00009000  D2E7C2D9 40608995                       1279  DC CL48'KXBR -infinity / -infinity'
00009030  00000000 F8000000                       1280  DC XL16'00000000F80000000000000000000000'
00009040  D2E7C2D9 40608995                       1281  DC CL48'KXBR -infinity / -1'
00009070  00000001 F8000001                       1282  DC XL16'00000001F80000010000000000000000'
00009080  D2E7C2D9 40608995                       1283  DC CL48'KXBR -infinity / -0'
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    27

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000090B0  00000001 F8000001                       1284  DC XL16'00000001F80000010000000000000000'
000090C0  D2E7C2D9 40608995                       1285  DC CL48'KXBR -infinity / +0'
000090F0  00000001 F8000001                       1286  DC XL16'00000001F80000010000000000000000'
00009100  D2E7C2D9 40608995                       1287  DC CL48'KXBR -infinity / +1'
00009130  00000001 F8000001                       1288  DC XL16'00000001F80000010000000000000000'
00009140  D2E7C2D9 40608995                       1289  DC CL48'KXBR -infinity / +infinity'
00009170  00000001 F8000001                       1290  DC XL16'00000001F80000010000000000000000'
00009180  D2E7C2D9 40608995                       1291  DC CL48'KXBR -infinity / -QNaN'
000091B0  00800003 F8008000                       1292  DC XL16'00800003F80080000000000000000000'
000091C0  D2E7C2D9 40608995                       1293  DC CL48'KXBR -infinity / +SNaN'
000091F0  00800003 F8008000                       1294  DC XL16'00800003F80080000000000000000000'
00009200  D2E7C2D9 4060F140                       1295  DC CL48'KXBR -1 / -infinity'
00009230  00000002 F8000002                       1296  DC XL16'00000002F80000020000000000000000'
00009240  D2E7C2D9 4060F140                       1297  DC CL48'KXBR -1 / -1'
00009270  00000000 F8000000                       1298  DC XL16'00000000F80000000000000000000000'
00009280  D2E7C2D9 4060F140                       1299  DC CL48'KXBR -1 / -0'
000092B0  00000001 F8000001                       1300  DC XL16'00000001F80000010000000000000000'
000092C0  D2E7C2D9 4060F140                       1301  DC CL48'KXBR -1 / +0'
000092F0  00000001 F8000001                       1302  DC XL16'00000001F80000010000000000000000'
00009300  D2E7C2D9 4060F140                       1303  DC CL48'KXBR -1 / +1'
00009330  00000001 F8000001                       1304  DC XL16'00000001F80000010000000000000000'
00009340  D2E7C2D9 4060F140                       1305  DC CL48'KXBR -1 / +infinity'
00009370  00000001 F8000001                       1306  DC XL16'00000001F80000010000000000000000'
00009380  D2E7C2D9 4060F140                       1307  DC CL48'KXBR -1 / -QNaN'
000093B0  00800003 F8008000                       1308  DC XL16'00800003F80080000000000000000000'
000093C0  D2E7C2D9 4060F140                       1309  DC CL48'KXBR -1 / +SNaN'
000093F0  00800003 F8008000                       1310  DC XL16'00800003F80080000000000000000000'
00009400  D2E7C2D9 4060F040                       1311  DC CL48'KXBR -0 / -infinity'
00009430  00000002 F8000002                       1312  DC XL16'00000002F80000020000000000000000'
00009440  D2E7C2D9 4060F040                       1313  DC CL48'KXBR -0 / -1'
00009470  00000002 F8000002                       1314  DC XL16'00000002F80000020000000000000000'
00009480  D2E7C2D9 4060F040                       1315  DC CL48'KXBR -0 / -0'
000094B0  00000000 F8000000                       1316  DC XL16'00000000F80000000000000000000000'
000094C0  D2E7C2D9 4060F040                       1317  DC CL48'KXBR -0 / +0'
000094F0  00000000 F8000000                       1318  DC XL16'00000000F80000000000000000000000'
00009500  D2E7C2D9 4060F040                       1319  DC CL48'KXBR -0 / +1'
00009530  00000001 F8000001                       1320  DC XL16'00000001F80000010000000000000000'
00009540  D2E7C2D9 4060F040                       1321  DC CL48'KXBR -0 / +infinity'
00009570  00000001 F8000001                       1322  DC XL16'00000001F80000010000000000000000'
00009580  D2E7C2D9 4060F040                       1323  DC CL48'KXBR -0 / -QNaN'
000095B0  00800003 F8008000                       1324  DC XL16'00800003F80080000000000000000000'
000095C0  D2E7C2D9 4060F040                       1325  DC CL48'KXBR -0 / +SNaN'
000095F0  00800003 F8008000                       1326  DC XL16'00800003F80080000000000000000000'
00009600  D2E7C2D9 404EF040                       1327  DC CL48'KXBR +0 / -infinity'
00009630  00000002 F8000002                       1328  DC XL16'00000002F80000020000000000000000'
00009640  D2E7C2D9 404EF040                       1329  DC CL48'KXBR +0 / -1'
00009670  00000002 F8000002                       1330  DC XL16'00000002F80000020000000000000000'
00009680  D2E7C2D9 404EF040                       1331  DC CL48'KXBR +0 / -0'
000096B0  00000000 F8000000                       1332  DC XL16'00000000F80000000000000000000000'
000096C0  D2E7C2D9 404EF040                       1333  DC CL48'KXBR +0 / +0'
000096F0  00000000 F8000000                       1334  DC XL16'00000000F80000000000000000000000'
00009700  D2E7C2D9 404EF040                       1335  DC CL48'KXBR +0 / +1'
00009730  00000001 F8000001                       1336  DC XL16'00000001F80000010000000000000000'
00009740  D2E7C2D9 404EF040                       1337  DC CL48'KXBR +0 / +infinity'
00009770  00000001 F8000001                       1338  DC XL16'00000001F80000010000000000000000'
00009780  D2E7C2D9 404EF040                       1339  DC CL48'KXBR +0 / -QNaN'
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    28

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000097B0  00800003 F8008000                       1340  DC XL16'00800003F80080000000000000000000'
000097C0  D2E7C2D9 404EF040                       1341  DC CL48'KXBR +0 / +SNaN'
000097F0  00800003 F8008000                       1342  DC XL16'00800003F80080000000000000000000'
00009800  D2E7C2D9 404EF140                       1343  DC CL48'KXBR +1 / -infinity'
00009830  00000002 F8000002                       1344  DC XL16'00000002F80000020000000000000000'
00009840  D2E7C2D9 404EF140                       1345  DC CL48'KXBR +1 / -1'
00009870  00000002 F8000002                       1346  DC XL16'00000002F80000020000000000000000'
00009880  D2E7C2D9 404EF140                       1347  DC CL48'KXBR +1 / -0'
000098B0  00000002 F8000002                       1348  DC XL16'00000002F80000020000000000000000'
000098C0  D2E7C2D9 404EF140                       1349  DC CL48'KXBR +1 / +0'
000098F0  00000002 F8000002                       1350  DC XL16'00000002F80000020000000000000000'
00009900  D2E7C2D9 404EF140                       1351  DC CL48'KXBR +1 / +1'
00009930  00000000 F8000000                       1352  DC XL16'00000000F80000000000000000000000'
00009940  D2E7C2D9 404EF140                       1353  DC CL48'KXBR +1 / +infinity'
00009970  00000001 F8000001                       1354  DC XL16'00000001F80000010000000000000000'
00009980  D2E7C2D9 404EF140                       1355  DC CL48'KXBR +1 / -QNaN'
000099B0  00800003 F8008000                       1356  DC XL16'00800003F80080000000000000000000'
000099C0  D2E7C2D9 404EF140                       1357  DC CL48'KXBR +1 / +SNaN'
000099F0  00800003 F8008000                       1358  DC XL16'00800003F80080000000000000000000'
00009A00  D2E7C2D9 404E8995                       1359  DC CL48'KXBR +infinity / -infinity'
00009A30  00000002 F8000002                       1360  DC XL16'00000002F80000020000000000000000'
00009A40  D2E7C2D9 404E8995                       1361  DC CL48'KXBR +infinity / -1'
00009A70  00000002 F8000002                       1362  DC XL16'00000002F80000020000000000000000'
00009A80  D2E7C2D9 404E8995                       1363  DC CL48'KXBR +infinity / -0'
00009AB0  00000002 F8000002                       1364  DC XL16'00000002F80000020000000000000000'
00009AC0  D2E7C2D9 404E8995                       1365  DC CL48'KXBR +infinity / +0'
00009AF0  00000002 F8000002                       1366  DC XL16'00000002F80000020000000000000000'
00009B00  D2E7C2D9 404E8995                       1367  DC CL48'KXBR +infinity / +1'
00009B30  00000002 F8000002                       1368  DC XL16'00000002F80000020000000000000000'
00009B40  D2E7C2D9 404E8995                       1369  DC CL48'KXBR +infinity / +infinity'
00009B70  00000000 F8000000                       1370  DC XL16'00000000F80000000000000000000000'
00009B80  D2E7C2D9 404E8995                       1371  DC CL48'KXBR +infinity / -QNaN'
00009BB0  00800003 F8008000                       1372  DC XL16'00800003F80080000000000000000000'
00009BC0  D2E7C2D9 404E8995                       1373  DC CL48'KXBR +infinity / +SNaN'
00009BF0  00800003 F8008000                       1374  DC XL16'00800003F80080000000000000000000'
00009C00  D2E7C2D9 4060D8D5                       1375  DC CL48'KXBR -QNaN / -infinity'
00009C30  00800003 F8008000                       1376  DC XL16'00800003F80080000000000000000000'
00009C40  D2E7C2D9 4060D8D5                       1377  DC CL48'KXBR -QNaN / -1'
00009C70  00800003 F8008000                       1378  DC XL16'00800003F80080000000000000000000'
00009C80  D2E7C2D9 4060D8D5                       1379  DC CL48'KXBR -QNaN / -0'
00009CB0  00800003 F8008000                       1380  DC XL16'00800003F80080000000000000000000'
00009CC0  D2E7C2D9 4060D8D5                       1381  DC CL48'KXBR -QNaN / +0'
00009CF0  00800003 F8008000                       1382  DC XL16'00800003F80080000000000000000000'
00009D00  D2E7C2D9 4060D8D5                       1383  DC CL48'KXBR -QNaN / +1'
00009D30  00800003 F8008000                       1384  DC XL16'00800003F80080000000000000000000'
00009D40  D2E7C2D9 4060D8D5                       1385  DC CL48'KXBR -QNaN / +infinity'
00009D70  00800003 F8008000                       1386  DC XL16'00800003F80080000000000000000000'
00009D80  D2E7C2D9 4060D8D5                       1387  DC CL48'KXBR -QNaN / -QNaN'
00009DB0  00800003 F8008000                       1388  DC XL16'00800003F80080000000000000000000'
00009DC0  D2E7C2D9 4060D8D5                       1389  DC CL48'KXBR -QNaN / +SNaN'
00009DF0  00800003 F8008000                       1390  DC XL16'00800003F80080000000000000000000'
00009E00  D2E7C2D9 404EE2D5                       1391  DC CL48'KXBR +SNaN / -infinity'
00009E30  00800003 F8008000                       1392  DC XL16'00800003F80080000000000000000000'
00009E40  D2E7C2D9 404EE2D5                       1393  DC CL48'KXBR +SNaN / -1'
00009E70  00800003 F8008000                       1394  DC XL16'00800003F80080000000000000000000'
00009E80  D2E7C2D9 404EE2D5                       1395  DC CL48'KXBR +SNaN / -0'
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    29

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00009EB0  00800003 F8008000                       1396  DC XL16'00800003F80080000000000000000000'
00009EC0  D2E7C2D9 404EE2D5                       1397  DC CL48'KXBR +SNaN / +0'
00009EF0  00800003 F8008000                       1398  DC XL16'00800003F80080000000000000000000'
00009F00  D2E7C2D9 404EE2D5                       1399  DC CL48'KXBR +SNaN / +1'
00009F30  00800003 F8008000                       1400  DC XL16'00800003F80080000000000000000000'
00009F40  D2E7C2D9 404EE2D5                       1401  DC CL48'KXBR +SNaN / +infinity'
00009F70  00800003 F8008000                       1402  DC XL16'00800003F80080000000000000000000'
00009F80  D2E7C2D9 404EE2D5                       1403  DC CL48'KXBR +SNaN / -QNaN'
00009FB0  00800003 F8008000                       1404  DC XL16'00800003F80080000000000000000000'
00009FC0  D2E7C2D9 404EE2D5                       1405  DC CL48'KXBR +SNaN / +SNaN'
00009FF0  00800003 F8008000                       1406  DC XL16'00800003F80080000000000000000000'
                              00000040  00000001  1407 XBFPCSCC_NUM EQU (*-XBFPCSCC_GOOD)/64
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    30

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000A000                                          1409 HELPERS  DS    0H       (R12 base of helper subroutines)

                                                  1411 ***********************************************************************
                                                  1412 *               REPORT UNEXPECTED PROGRAM CHECK
                                                  1413 ***********************************************************************

0000A000                                          1415 PGMCK    DS    0H
0000A000  F342 C072 F08E      0000A072  0000008E  1416          UNPK  PROGCODE(L'PROGCODE+1),PCINTCD(L'PCINTCD+1)
0000A006  926B C076                     0000A076  1417          MVI   PGMCOMMA,C','
0000A00A  DC03 C072 C178      0000A072  0000A178  1418          TR    PROGCODE,HEXTRTAB

0000A010  F384 C07C F150      0000A07C  00000150  1420          UNPK  PGMPSW+(0*9)(9),PCOLDPSW+(0*4)(5)
0000A016  9240 C084                     0000A084  1421          MVI   PGMPSW+(0*9)+8,C' '
0000A01A  DC07 C07C C178      0000A07C  0000A178  1422          TR    PGMPSW+(0*9)(8),HEXTRTAB

0000A020  F384 C085 F154      0000A085  00000154  1424          UNPK  PGMPSW+(1*9)(9),PCOLDPSW+(1*4)(5)
0000A026  9240 C08D                     0000A08D  1425          MVI   PGMPSW+(1*9)+8,C' '
0000A02A  DC07 C085 C178      0000A085  0000A178  1426          TR    PGMPSW+(1*9)(8),HEXTRTAB

0000A030  F384 C08E F158      0000A08E  00000158  1428          UNPK  PGMPSW+(2*9)(9),PCOLDPSW+(2*4)(5)
0000A036  9240 C096                     0000A096  1429          MVI   PGMPSW+(2*9)+8,C' '
0000A03A  DC07 C08E C178      0000A08E  0000A178  1430          TR    PGMPSW+(2*9)(8),HEXTRTAB

0000A040  F384 C097 F15C      0000A097  0000015C  1432          UNPK  PGMPSW+(3*9)(9),PCOLDPSW+(3*4)(5)
0000A046  9240 C09F                     0000A09F  1433          MVI   PGMPSW+(3*9)+8,C' '
0000A04A  DC07 C097 C178      0000A097  0000A178  1434          TR    PGMPSW+(3*9)(8),HEXTRTAB

0000A050  4100 0042                     00000042  1436          LA    R0,L'PROGMSG     R0 <== length of message
0000A054  4110 C05E                     0000A05E  1437          LA    R1,PROGMSG       R1 --> the message text itself
0000A058  4520 C27A                     0000A27A  1438          BAL   R2,MSG           Go display this message
                                                  1439
0000A05C  07FD                                    1440          BR    R13              Return to caller




0000A05E                                          1442 PROGMSG  DS   0CL66
0000A05E  D7D9D6C7 D9C1D440                       1443          DC    CL20'PROGRAM CHECK! CODE '
0000A072  88888888                                1444 PROGCODE DC    CL4'hhhh'
0000A076  6B                                      1445 PGMCOMMA DC    CL1','
0000A077  40D7E2E6 40                             1446          DC    CL5' PSW '
0000A07C  88888888 88888888                       1447 PGMPSW   DC    CL36'hhhhhhhh hhhhhhhh hhhhhhhh hhhhhhhh '
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    31

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1449 ***********************************************************************
                                                  1450 *                    VERIFICATION ROUTINE
                                                  1451 ***********************************************************************

0000A0A0                                          1453 VERISUB  DS    0H
                                                  1454 *
                                                  1455 **       Loop through the VERIFY TABLE...
                                                  1456 *

0000A0A0  4110 C32C                     0000A32C  1458          LA    R1,VERIFTAB      R1 --> Verify table
0000A0A4  4120 0006                     00000006  1459          LA    R2,VERIFLEN      R2 <== Number of entries
0000A0A8  0D30                                    1460          BASR  R3,0             Set top of loop

0000A0AA  9846 1000                     00000000  1462          LM    R4,R6,0(R1)      Load verify table values
0000A0AE  4D70 C0C2                     0000A0C2  1463          BAS   R7,VERIFY        Verify results
0000A0B2  4110 100C                     0000000C  1464          LA    R1,12(,R1)       Next verify table entry
0000A0B6  0623                                    1465          BCTR  R2,R3            Loop through verify table

0000A0B8  9500 C278                     0000A278  1467          CLI   FAILFLAG,X'00'   Did all tests verify okay?
0000A0BC  078D                                    1468          BER   R13              Yes, return to caller
0000A0BE  47F0 F238                     00000238  1469          B     FAIL             No, load FAILURE disabled wait PSW






                                                  1471 *
                                                  1472 **       Loop through the ACTUAL / EXPECTED results...
                                                  1473 *

0000A0C2  0D80                                    1475 VERIFY   BASR  R8,0             Set top of loop

0000A0C4  D50F 4000 5030      00000000  00000030  1477          CLC   0(16,R4),48(R5)  Actual results == Expected results?
0000A0CA  4770 C0DA                     0000A0DA  1478          BNE   VERIFAIL         No, show failure
0000A0CE  4140 4010                     00000010  1479 VERINEXT LA    R4,16(,R4)       Next actual result
0000A0D2  4150 5040                     00000040  1480          LA    R5,64(,R5)       Next expected result
0000A0D6  0668                                    1481          BCTR  R6,R8            Loop through results

0000A0D8  07F7                                    1483          BR    R7               Return to caller
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    32

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1485 ***********************************************************************
                                                  1486 *                    Report the failure...
                                                  1487 ***********************************************************************

0000A0DA  9005 C250                     0000A250  1489 VERIFAIL STM   R0,R5,SAVER0R5   Save registers
0000A0DE  92FF C278                     0000A278  1490          MVI   FAILFLAG,X'FF'   Remember verification failure
                                                  1491 *
                                                  1492 **       First, show them the description...
                                                  1493 *
0000A0E2  D22F C1E0 5000      0000A1E0  00000000  1494          MVC   FAILDESC,0(R5)   Save results/test description
0000A0E8  4100 0044                     00000044  1495          LA    R0,L'FAILMSG1    R0 <== length of message
0000A0EC  4110 C1CC                     0000A1CC  1496          LA    R1,FAILMSG1      R1 --> the message text itself
0000A0F0  4520 C27A                     0000A27A  1497          BAL   R2,MSG           Go display this message
                                                  1498 *
                                                  1499 **       Save address of actual and expected results
                                                  1500 *
0000A0F4  5040 C24C                     0000A24C  1501          ST    R4,AACTUAL       Save A(actual results)
0000A0F8  4150 5030                     00000030  1502          LA    R5,48(,R5)       R5 ==> expected results
0000A0FC  5050 C248                     0000A248  1503          ST    R5,AEXPECT       Save A(expected results)
                                                  1504 *
                                                  1505 **       Format and show them the EXPECTED ("Want") results...
                                                  1506 *
0000A100  D205 C210 C378      0000A210  0000A378  1507          MVC   WANTGOT,=CL6'Want: '
0000A106  F384 C216 C248      0000A216  0000A248  1508          UNPK  FAILADR(L'FAILADR+1),AEXPECT(L'AEXPECT+1)
0000A10C  9240 C21E                     0000A21E  1509          MVI   BLANKEQ,C' '
0000A110  DC07 C216 C178      0000A216  0000A178  1510          TR    FAILADR,HEXTRTAB

0000A116  F384 C221 5000      0000A221  00000000  1512          UNPK  FAILVALS+(0*9)(9),(0*4)(5,R5)
0000A11C  9240 C229                     0000A229  1513          MVI   FAILVALS+(0*9)+8,C' '
0000A120  DC07 C221 C178      0000A221  0000A178  1514          TR    FAILVALS+(0*9)(8),HEXTRTAB

0000A126  F384 C22A 5004      0000A22A  00000004  1516          UNPK  FAILVALS+(1*9)(9),(1*4)(5,R5)
0000A12C  9240 C232                     0000A232  1517          MVI   FAILVALS+(1*9)+8,C' '
0000A130  DC07 C22A C178      0000A22A  0000A178  1518          TR    FAILVALS+(1*9)(8),HEXTRTAB

0000A136  F384 C233 5008      0000A233  00000008  1520          UNPK  FAILVALS+(2*9)(9),(2*4)(5,R5)
0000A13C  9240 C23B                     0000A23B  1521          MVI   FAILVALS+(2*9)+8,C' '
0000A140  DC07 C233 C178      0000A233  0000A178  1522          TR    FAILVALS+(2*9)(8),HEXTRTAB

0000A146  F384 C23C 500C      0000A23C  0000000C  1524          UNPK  FAILVALS+(3*9)(9),(3*4)(5,R5)
0000A14C  9240 C244                     0000A244  1525          MVI   FAILVALS+(3*9)+8,C' '
0000A150  DC07 C23C C178      0000A23C  0000A178  1526          TR    FAILVALS+(3*9)(8),HEXTRTAB

0000A156  4100 0035                     00000035  1528          LA    R0,L'FAILMSG2    R0 <== length of message
0000A15A  4110 C210                     0000A210  1529          LA    R1,FAILMSG2      R1 --> the message text itself
0000A15E  4520 C27A                     0000A27A  1530          BAL   R2,MSG           Go display this message
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    33

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1532 *
                                                  1533 **       Format and show them the ACTUAL ("Got") results...
                                                  1534 *
0000A162  D205 C210 C37E      0000A210  0000A37E  1535          MVC   WANTGOT,=CL6'Got:  '
0000A168  F384 C216 C24C      0000A216  0000A24C  1536          UNPK  FAILADR(L'FAILADR+1),AACTUAL(L'AACTUAL+1)
0000A16E  9240 C21E                     0000A21E  1537          MVI   BLANKEQ,C' '
0000A172  DC07 C216 C178      0000A216  0000A178  1538          TR    FAILADR,HEXTRTAB

0000A178  F384 C221 4000      0000A221  00000000  1540          UNPK  FAILVALS+(0*9)(9),(0*4)(5,R4)
0000A17E  9240 C229                     0000A229  1541          MVI   FAILVALS+(0*9)+8,C' '
0000A182  DC07 C221 C178      0000A221  0000A178  1542          TR    FAILVALS+(0*9)(8),HEXTRTAB

0000A188  F384 C22A 4004      0000A22A  00000004  1544          UNPK  FAILVALS+(1*9)(9),(1*4)(5,R4)
0000A18E  9240 C232                     0000A232  1545          MVI   FAILVALS+(1*9)+8,C' '
0000A192  DC07 C22A C178      0000A22A  0000A178  1546          TR    FAILVALS+(1*9)(8),HEXTRTAB

0000A198  F384 C233 4008      0000A233  00000008  1548          UNPK  FAILVALS+(2*9)(9),(2*4)(5,R4)
0000A19E  9240 C23B                     0000A23B  1549          MVI   FAILVALS+(2*9)+8,C' '
0000A1A2  DC07 C233 C178      0000A233  0000A178  1550          TR    FAILVALS+(2*9)(8),HEXTRTAB

0000A1A8  F384 C23C 400C      0000A23C  0000000C  1552          UNPK  FAILVALS+(3*9)(9),(3*4)(5,R4)
0000A1AE  9240 C244                     0000A244  1553          MVI   FAILVALS+(3*9)+8,C' '
0000A1B2  DC07 C23C C178      0000A23C  0000A178  1554          TR    FAILVALS+(3*9)(8),HEXTRTAB

0000A1B8  4100 0035                     00000035  1556          LA    R0,L'FAILMSG2    R0 <== length of message
0000A1BC  4110 C210                     0000A210  1557          LA    R1,FAILMSG2      R1 --> the message text itself
0000A1C0  4520 C27A                     0000A27A  1558          BAL   R2,MSG           Go display this message

0000A1C4  9805 C250                     0000A250  1560          LM    R0,R5,SAVER0R5   Restore registers
0000A1C8  47F0 C0CE                     0000A0CE  1561          B     VERINEXT         Continue with verification...



0000A1CC                                          1563 FAILMSG1 DS   0CL68
0000A1CC  C3D6D4D7 C1D9C9E2                       1564          DC    CL20'COMPARISON FAILURE! '
0000A1E0  4D8485A2 83998997                       1565 FAILDESC DC    CL48'(description)'


0000A210                                          1567 FAILMSG2 DS   0CL53
0000A210  40404040 4040                           1568 WANTGOT  DC    CL6' '           'Want: ' -or- 'Got:  '
0000A216  C1C1C1C1 C1C1C1C1                       1569 FAILADR  DC    CL8'AAAAAAAA'
0000A21E  407E40                                  1570 BLANKEQ  DC    CL3' = '
0000A221  88888888 88888888                       1571 FAILVALS DC    CL36'hhhhhhhh hhhhhhhh hhhhhhhh hhhhhhhh '


0000A248  00000000                                1573 AEXPECT  DC    F'0'             ==> Expected ("Want") results
0000A24C  00000000                                1574 AACTUAL  DC    F'0'             ==> Actual ("Got") results
0000A250  00000000 00000000                       1575 SAVER0R5 DC    6F'0'            Registers R0 - R5 save area
0000A268  F0F1F2F3 F4F5F6F7                       1576 CHARHEX  DC    CL16'0123456789ABCDEF'
                              0000A178  00000010  1577 HEXTRTAB EQU   CHARHEX-X'F0'    Hexadecimal translation table
0000A278  00                                      1578 FAILFLAG DC    X'00'            FF = Fail, 00 = Success
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    34

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1580 ***********************************************************************
                                                  1581 *        Issue HERCULES MESSAGE pointed to by R1, length in R0
                                                  1582 ***********************************************************************

0000A27A  4900 C374                     0000A374  1584 MSG      CH    R0,=H'0'               Do we even HAVE a message?
0000A27E  07D2                                    1585          BNHR  R2                     No, ignore

0000A280  9002 C2B0                     0000A2B0  1587          STM   R0,R2,MSGSAVE          Save registers

0000A284  4900 C376                     0000A376  1589          CH    R0,=AL2(L'MSGMSG)      Message length within limits?
0000A288  47D0 C290                     0000A290  1590          BNH   MSGOK                  Yes, continue
0000A28C  4100 005F                     0000005F  1591          LA    R0,L'MSGMSG            No, set to maximum

0000A290  1820                                    1593 MSGOK    LR    R2,R0                  Copy length to work register
0000A292  0620                                    1594          BCTR  R2,0                   Minus-1 for execute
0000A294  4420 C2BC                     0000A2BC  1595          EX    R2,MSGMVC              Copy message to O/P buffer

0000A298  4120 200A                     0000000A  1597          LA    R2,1+L'MSGCMD(,R2)     Calculate true command length
0000A29C  4110 C2C2                     0000A2C2  1598          LA    R1,MSGCMD              Point to true command

0000A2A0  83120008                                1600          DC    X'83',X'12',X'0008'    Issue Hercules Diagnose X'008'
0000A2A4  4780 C2AA                     0000A2AA  1601          BZ    MSGRET                 Return if successful
0000A2A8  0000                                    1602          DC    H'0'                   CRASH for debugging purposes

0000A2AA  9802 C2B0                     0000A2B0  1604 MSGRET   LM    R0,R2,MSGSAVE          Restore registers
0000A2AE  07F2                                    1605          BR    R2                     Return to caller






0000A2B0  00000000 00000000                       1607 MSGSAVE  DC    3F'0'                  Registers save area
0000A2BC  D200 C2CB 1000      0000A2CB  00000000  1608 MSGMVC   MVC   MSGMSG(0),0(R1)        Executed instruction


0000A2C2  D4E2C7D5 D6C8405C                       1610 MSGCMD   DC    C'MSGNOH * '           *** HERCULES MESSAGE COMMAND ***
0000A2CB  40404040 40404040                       1611 MSGMSG   DC    CL95' '                The message text to be displayed
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    35

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1613 ***********************************************************************
                                                  1614 *                         VERIFY TABLE
                                                  1615 ***********************************************************************
                                                  1616 *
                                                  1617 *        A(actual results), A(expected results), A(#of results)
                                                  1618 *
                                                  1619 ***********************************************************************

0000A32C                                          1621 VERIFTAB DC    0F'0'
0000A32C  00001000                                1622          DC    A(SBFPCCC)
0000A330  00004000                                1623          DC    A(SBFPCCC_GOOD)
0000A334  00000040                                1624          DC    A(SBFPCCC_NUM)
                                                  1625 *
0000A338  00001400                                1626          DC    A(SBFPCSCC)
0000A33C  00005000                                1627          DC    A(SBFPCSCC_GOOD)
0000A340  00000040                                1628          DC    A(SBFPCSCC_NUM)
                                                  1629 *
0000A344  00002000                                1630          DC    A(LBFPCCC)
0000A348  00006000                                1631          DC    A(LBFPCCC_GOOD)
0000A34C  00000040                                1632          DC    A(LBFPCCC_NUM)
                                                  1633 *
0000A350  00002400                                1634          DC    A(LBFPCSCC)
0000A354  00007000                                1635          DC    A(LBFPCSCC_GOOD)
0000A358  00000040                                1636          DC    A(LBFPCSCC_NUM)
                                                  1637 *
0000A35C  00003000                                1638          DC    A(XBFPCCC)
0000A360  00008000                                1639          DC    A(XBFPCCC_GOOD)
0000A364  00000040                                1640          DC    A(XBFPCCC_NUM)
                                                  1641 *
0000A368  00003400                                1642          DC    A(XBFPCSCC)
0000A36C  00009000                                1643          DC    A(XBFPCSCC_GOOD)
0000A370  00000040                                1644          DC    A(XBFPCSCC_NUM)
                                                  1645 *
                              00000006  00000001  1646 VERIFLEN EQU   (*-VERIFTAB)/12    #of entries in verify table
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    36

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000A374                                          1648          END
0000A374  0000                                    1649                =H'0'
0000A376  005F                                    1650                =AL2(L'MSGMSG)
0000A378  E68195A3 7A40                           1651                =CL6'Want: '
0000A37E  C796A37A 4040                           1652                =CL6'Got:  '
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    37

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

AACTUAL             F    00A24C       4  1574  1501  1536
AEXPECT             F    00A248       4  1573  1503  1508
AHELPERS            A    00027C       4   188   178   214
BFPCOMPS            J    000000   41860   104
BLANKEQ             C    00A21E       3  1570  1509  1537
CHARHEX             C    00A268      16  1576  1577
CTLR0               F    0002D8       4   224   197   198   199
FAIL                I    000238       4   186  1469
FAILADR             C    00A216       8  1569  1508  1510  1536  1538
FAILDESC            C    00A1E0      48  1565  1494
FAILFLAG            X    00A278       1  1578  1467  1490
FAILMSG1            C    00A1CC      68  1563  1495  1496
FAILMSG2            C    00A210      53  1567  1528  1529  1556  1557
FAILPSW             X    0002C8       8   222   186
FAILVALS            C    00A221      36  1571  1512  1513  1514  1516  1517  1518  1520  1521  1522  1524  1525  1526  1540  1541
                                               1542  1544  1545  1546  1548  1549  1550  1552  1553  1554
FPCREGNT            X    0002DC       4   225   280   296   312   328   381   397   413   429   484   500
FPCREGTR            X    0002E0       4   226   288   304   320   336   389   405   421   437   492   508
FPR0                U    000000       1   125
FPR1                U    000001       1   126   278   282   290   314   322   379   383   391   415   423   481   486   494   502
                                                510
FPR10               U    00000A       1   135   474
FPR11               U    00000B       1   136
FPR12               U    00000C       1   137
FPR13               U    00000D       1   138
FPR14               U    00000E       1   139
FPR15               U    00000F       1   140
FPR2                U    000002       1   127
FPR3                U    000003       1   128   482
FPR4                U    000004       1   129
FPR5                U    000005       1   130
FPR6                U    000006       1   131
FPR7                U    000007       1   132
FPR8                U    000008       1   133   271   282   290   298   306   314   322   330   338   372   383   391   399   407
                                                415   423   431   439   473   486   494   502   510
FPR9                U    000009       1   134
GOODPSW             X    0002B8       8   221   218
HELPERS             H    00A000       2  1409   143   188
HEXTRTAB            U    00A178      16  1577  1418  1422  1426  1430  1434  1510  1514  1518  1522  1526  1538  1542  1546  1550
                                               1554
IMAGE               1    000000   41860     0
LBFPCCC             U    002000       1   599   244  1630
LBFPCCC_GOOD        U    006000       1   882  1011  1631
LBFPCCC_NUM         U    000040       1  1011  1632
LBFPCOMP            H    00043C       2   365   205
LBFPCSCC            U    002400       1   602   245  1634
LBFPCSCC_GOOD       U    007000       1  1014  1143  1635
LBFPCSCC_NUM        U    000040       1  1143  1636
LBFPCT              U    000008       1   558   242
LBFPIN              D    000610       8   549   558   243
LONGC               F    000310       4   241   204
MSG                 I    00A27A       4  1584  1438  1497  1530  1558
MSGCMD              C    00A2C2       9  1610  1597  1598
MSGMSG              C    00A2CB      95  1611  1591  1608  1589
MSGMVC              I    00A2BC       6  1608  1595
MSGOK               I    00A290       2  1593  1590
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    38

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

MSGRET              I    00A2AA       4  1604  1601
MSGSAVE             F    00A2B0       4  1607  1587  1604
PCINTCD             H    00008E       2   156   173  1416
PCNOTDTA            I    00020C       4   177   174
PCOLDPSW            U    000150       1   158   175  1420  1424  1428  1432
PGMCK               H    00A000       2  1415   179
PGMCOMMA            C    00A076       1  1445  1417
PGMPSW              C    00A07C      36  1447  1420  1421  1422  1424  1425  1426  1428  1429  1430  1432  1433  1434
PROGCHK             H    000200       2   172   164
PROGCODE            C    00A072       4  1444  1416  1418
PROGMSG             C    00A05E      66  1442  1436  1437
PROGPSW             D    000228       8   185   184
R0                  U    000000       1   106   177   180   197   199   284   285   286   292   293   294   300   301   302   308
                                                309   310   316   317   318   324   325   326   332   333   334   340   341   342
                                                385   386   387   393   394   395   401   402   403   409   410   411   417   418
                                                419   425   426   427   433   434   435   441   442   443   488   489   490   496
                                                497   498   504   505   506   512   513   514  1436  1489  1495  1528  1556  1560
                                               1584  1587  1589  1591  1593  1604
R1                  U    000001       1   107  1437  1458  1462  1464  1496  1529  1557  1598  1608
R10                 U    00000A       1   116   201   204   207   265   266   272   366   367   373   467   468   475
R11                 U    00000B       1   117
R12                 U    00000C       1   118   143   178   214   269   350   370   451   471   522
R13                 U    00000D       1   119   179   202   205   208   215   268   352   369   453   470   524  1440  1468
R14                 U    00000E       1   120   182   183   216   217
R15                 U    00000F       1   121   142   177   180
R2                  U    000002       1   108   265   267   350   366   368   451   467   469   522  1438  1459  1465  1497  1530
                                               1558  1585  1587  1593  1594  1595  1597  1604  1605
R3                  U    000003       1   109   265   271   349   366   372   450   467   473   474   521  1460  1465
R4                  U    000004       1   110   272   347   373   448   475   519  1462  1477  1479  1501  1540  1544  1548  1552
R5                  U    000005       1   111   272   278   298   306   330   338   344   373   379   399   407   431   439   445
                                                475   481   482   516  1477  1480  1489  1494  1502  1503  1512  1516  1520  1524
                                               1560
R6                  U    000006       1   112   274   347   375   448   477   519  1462  1481
R7                  U    000007       1   113   266   283   286   291   294   299   302   307   310   345   367   384   387   392
                                                395   400   403   408   411   446   468   487   490   495   498   517  1463  1483
R8                  U    000008       1   114   266   315   318   323   326   331   334   339   342   346   367   416   419   424
                                                427   432   435   440   443   447   468   503   506   511   514   518  1475  1481
R9                  U    000009       1   115   273   281   289   297   305   313   321   329   337   374   382   390   398   406
                                                414   422   430   438   476   485   493   501   509
SAVER0R5            F    00A250       4  1575  1489  1560
SAVEREGS            F    00023C       4   187   177   180
SBFPCCC             U    001000       1   593   238  1622
SBFPCCC_GOOD        U    004000       1   618   747  1623
SBFPCCC_NUM         U    000040       1   747  1624
SBFPCOMP            H    000330       2   264   202
SBFPCSCC            U    001400       1   596   239  1626
SBFPCSCC_GOOD       U    005000       1   750   879  1627
SBFPCSCC_NUM        U    000040       1   879  1628
SBFPCT              U    000008       1   545   236
SBFPIN              F    0005EC       4   536   545   237
SHORTC              F    000300       4   235   201
START               H    000280       2   196   161
STRTLABL            U    000000       1   105   155   158   160   163   171   234   593   596   599   602   605   608   616
VERIFAIL            I    00A0DA       4  1489  1478
VERIFLEN            U    000006       1  1646  1459
VERIFTAB            F    00A32C       4  1621  1646  1458
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    39

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

VERIFY              I    00A0C2       2  1475  1463
VERINEXT            I    00A0CE       4  1479  1561
VERISUB             H    00A0A0       2  1453   215
WANTGOT             C    00A210       6  1568  1507  1535
XBFPCCC             U    003000       1   605   250  1638
XBFPCCC_GOOD        U    008000       1  1146  1275  1639
XBFPCCC_NUM         U    000040       1  1275  1640
XBFPCOMP            H    000548       2   466   208
XBFPCSCC            U    003400       1   608   251  1642
XBFPCSCC_GOOD       U    009000       1  1278  1407  1643
XBFPCSCC_NUM        U    000040       1  1407  1644
XBFPCT              U    000008       1   571   248
XBFPIN              D    000650       8   562   571   249
XTNDC               F    000320       4   247   207
=AL2(L'MSGMSG)      R    00A376       2  1650  1589
=CL6'Got:  '        C    00A37E       6  1652  1535
=CL6'Want: '        C    00A378       6  1651  1507
=H'0'               H    00A374       2  1649  1584
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    40

MACRO  DEFN  REFERENCES

No defined macros
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    41

   DESC     SYMBOL    SIZE     POS        ADDR

Entry: 0

Image      IMAGE     41860  0000-A383  0000-A383
  Region             41860  0000-A383  0000-A383
    CSECT  BFPCOMPS  41860  0000-A383  0000-A383
ASMA Ver. 0.2.1  bfp-013-comps: Test IEEE Compare, Compare And Signal                               17 Aug 2022 12:19:25  Page    42

   STMT                                                FILE NAME

1     c:\Users\Fish\Documents\Visual Studio 2008\Projects\MyProjects\ASMA-0\bfp-013-comps\bfp-013-comps.asm


** NO ERRORS FOUND **

