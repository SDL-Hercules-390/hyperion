ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page     1

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                     2 ***********************************************************************
                                                     3 *
                                                     4 *Testcase IEEE MULTIPLY
                                                     5 *  Test case capability includes IEEE exceptions trappable and
                                                     6 *  otherwise. Test results, FPCR flags, the Condition code, and any
                                                     7 *  DXC are saved for all tests.
                                                     8 *
                                                     9 *  The fused multiply operations are not included in this test program,
                                                    10 *  nor are the multiply to longer precision instructions.  The former
                                                    11 *  are excluded to keep test case complexity manageable, and latter
                                                    12 *  because they require a slightly different testing profile.
                                                    13 *
                                                    14 *
                                                    15 *                      ********************
                                                    16 *                      **   IMPORTANT!   **
                                                    17 *                      ********************
                                                    18 *
                                                    19 *        This test uses the Hercules Diagnose X'008' interface
                                                    20 *        to display messages and thus your .tst runtest script
                                                    21 *        MUST contain a "DIAG8CMD ENABLE" statement within it!
                                                    22 *
                                                    23 *
                                                    24 ***********************************************************************


                                                    26 ***********************************************************************
                                                    27 *
                                                    28 *                      bfp-019-multiply.asm
                                                    29 *
                                                    30 *        This assembly-language source file is part of the
                                                    31 *        Hercules Binary Floating Point Validation Package
                                                    32 *                        by Stephen R. Orso
                                                    33 *
                                                    34 * Copyright 2016 by Stephen R Orso.
                                                    35 * Runtest *Compare dependency removed by Fish on 2022-08-16
                                                    36 * PADCSECT macro/usage removed by Fish on 2022-08-16
                                                    37 *
                                                    38 * Redistribution and use in source and binary forms, with or without
                                                    39 * modification, are permitted provided that the following conditions
                                                    40 * are met:
                                                    41 *
                                                    42 * 1. Redistributions of source code must retain the above copyright
                                                    43 *    notice, this list of conditions and the following disclaimer.
                                                    44 *
                                                    45 * 2. Redistributions in binary form must reproduce the above copyright
                                                    46 *    notice, this list of conditions and the following disclaimer in
                                                    47 *    the documentation and/or other materials provided  with the
                                                    48 *    distribution.
                                                    49 *
                                                    50 * 3. The name of the author may not be used to endorse or promote
                                                    51 *    products derived from this software without specific prior written
                                                    52 *    permission.
                                                    53 *
                                                    54 * DISCLAMER: THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER "AS IS"
                                                    55 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
                                                    56 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page     2

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                    57 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
                                                    58 * HOLDER BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
                                                    59 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
                                                    60 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
                                                    61 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
                                                    62 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
                                                    63 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
                                                    64 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                                                    65 *
                                                    66 ***********************************************************************


                                                    68 ***********************************************************************
                                                    69 *
                                                    70 * Tests the following three conversion instructions
                                                    71 *   MULTIPLY (short BFP, RRE)
                                                    72 *   MULTIPLY (long BFP, RRE)
                                                    73 *   MULTIPLY (extended BFP, RRE)
                                                    74 *   MULTIPLY (short BFP, RXE)
                                                    75 *   MULTIPLY (long BFP, RXE)
                                                    76 *
                                                    77 * Test data is compiled into this program.  The test script that runs
                                                    78 * this program can provide alternative test data through Hercules R
                                                    79 * commands.
                                                    80 *
                                                    81 * Test Case Order
                                                    82 * 1) Short BFP basic tests, including traps and NaN propagation
                                                    83 * 2) Short BFP finite number tests, incl. traps and scaling
                                                    84 * 3) Short BFP FPC-controlled rounding mode exhaustive tests
                                                    85 * 4) Long BFP basic tests, including traps and NaN propagation
                                                    86 * 5) Long BFP finite number tests, incl. traps and scaling
                                                    87 * 6) Long BFP FPC-controlled rounding mode exhaustive tests
                                                    88 * 7) Extended BFP basic tests, including traps and NaN propagation
                                                    89 * 8) Extended BFP finite number tests, incl. traps and scaling
                                                    90 * 9) Extended BFP FPC-controlled rounding mode exhaustive tests
                                                    91 *
                                                    92 * Three input test sets are provided each for short, long, and
                                                    93 *   extended BFP inputs.  Test values are the same for each precision
                                                    94 *   for most tests.  Overflow and underflow each require precision-
                                                    95 *   dependent test values.
                                                    96 *
                                                    97 * Also tests the following floating point support instructions
                                                    98 *   LOAD  (Short)
                                                    99 *   LOAD  (Long)
                                                   100 *   LFPC  (Load Floating Point Control Register)
                                                   101 *   SRNMB (Set BFP Rounding Mode 3-bit)
                                                   102 *   STORE (Short)
                                                   103 *   STORE (Long)
                                                   104 *   STFPC (Store Floating Point Control Register)
                                                   105 *
                                                   106 ***********************************************************************
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page     3

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   108 *
                                                   109 *  Note: for compatibility with the z/CMS test rig, do not change
                                                   110 *  or use R11, R14, or R15.  Everything else is fair game.
                                                   111 *
                              00000000  00012A13   112 BFPMUL   START 0
                              00000000  00000001   113 STRTLABL EQU   *
                              00000000  00000001   114 R0       EQU   0                   Work register for cc extraction
                              00000001  00000001   115 R1       EQU   1
                              00000002  00000001   116 R2       EQU   2                   Holds count of test input values
                              00000003  00000001   117 R3       EQU   3                   Points to next test input value(s)
                              00000004  00000001   118 R4       EQU   4                   Rounding tests inner loop control
                              00000005  00000001   119 R5       EQU   5                   Rounding tests outer loop control
                              00000006  00000001   120 R6       EQU   6                   Rounding tests top of inner loop
                              00000007  00000001   121 R7       EQU   7                   Pointer to next result value(s)
                              00000008  00000001   122 R8       EQU   8                   Pointer to next FPCR result
                              00000009  00000001   123 R9       EQU   9                   Rounding tests top of outer loop
                              0000000A  00000001   124 R10      EQU   10                  Pointer to test address list
                              0000000B  00000001   125 R11      EQU   11                  **Reserved for z/CMS test rig
                              0000000C  00000001   126 R12      EQU   12                  Holds number of test cases in set
                              0000000D  00000001   127 R13      EQU   13                  Mainline return address
                              0000000E  00000001   128 R14      EQU   14                  **Return address for z/CMS test rig
                              0000000F  00000001   129 R15      EQU   15                  **Base register on z/CMS or Hyperion
                                                   130 *
                                                   131 * Floating Point Register equates to keep the cross reference clean
                                                   132 *
                              00000000  00000001   133 FPR0     EQU   0
                              00000001  00000001   134 FPR1     EQU   1
                              00000002  00000001   135 FPR2     EQU   2
                              00000003  00000001   136 FPR3     EQU   3
                              00000004  00000001   137 FPR4     EQU   4
                              00000005  00000001   138 FPR5     EQU   5
                              00000006  00000001   139 FPR6     EQU   6
                              00000007  00000001   140 FPR7     EQU   7
                              00000008  00000001   141 FPR8     EQU   8
                              00000009  00000001   142 FPR9     EQU   9
                              0000000A  00000001   143 FPR10    EQU   10
                              0000000B  00000001   144 FPR11    EQU   11
                              0000000C  00000001   145 FPR12    EQU   12
                              0000000D  00000001   146 FPR13    EQU   13
                              0000000E  00000001   147 FPR14    EQU   14
                              0000000F  00000001   148 FPR15    EQU   15
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page     4

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000000                      00000000             150          USING *,R15
00000000                      00012600             151          USING HELPERS,R12
                                                   152 *
                                                   153 * Above works on real iron (R15=0 after sysclear)
                                                   154 * and in z/CMS (R15 points to start of load module)
                                                   155 *


                                                   157 ***********************************************************************
                                                   158 *
                                                   159 * Low core definitions, Restart PSW, and Program Check Routine.
                                                   160 *
                                                   161 ***********************************************************************


00000000                      00000000  0000008E   163          ORG   STRTLABL+X'8E'      Program check interrution code
0000008E  0000                                     164 PCINTCD  DS    H
                                                   165 *
                              00000150  00000001   166 PCOLDPSW EQU   STRTLABL+X'150'     z/Arch Program check old PSW
                                                   167 *
00000090                      00000090  000001A0   168          ORG   STRTLABL+X'1A0'     z/Arch Restart PSW
000001A0  00000001 80000000                        169          DC    X'0000000180000000',AD(START)
                                                   170 *
000001B0                      000001B0  000001D0   171          ORG   STRTLABL+X'1D0'     z/Arch Program check NEW PSW
000001D0  00000000 00000000                        172          DC    X'0000000000000000',AD(PROGCHK)
                                                   173 *
                                                   174 * Program check routine.  If Data Exception, continue execution at
                                                   175 * the instruction following the program check.  Otherwise, hard wait.
                                                   176 * No need to collect data.  All interesting DXC stuff is captured
                                                   177 * in the FPCR.
                                                   178 *
000001E0                      000001E0  00000200   179          ORG   STRTLABL+X'200'
00000200                                           180 PROGCHK  DS    0H             Program check occured...
00000200  9507 F08F                     0000008F   181          CLI   PCINTCD+1,X'07'  Data Exception?
00000204  A774 0004                     0000020C   182          JNE   PCNOTDTA       ..no, hardwait (not sure if R15 is ok)
00000208  B2B2 F150                     00000150   183          LPSWE PCOLDPSW       ..yes, resume program execution

0000020C  900F F23C                     0000023C   185 PCNOTDTA STM   R0,R15,SAVEREGS  Save registers
00000210  58C0 F27C                     0000027C   186          L     R12,AHELPERS     Get address of helper subroutines
00000214  4DD0 C000                     00012600   187          BAS   R13,PGMCK        Report this unexpected program check
00000218  980F F23C                     0000023C   188          LM    R0,R15,SAVEREGS  Restore registers

0000021C  12EE                                     190          LTR   R14,R14        Return address provided?
0000021E  077E                                     191          BNZR  R14            Yes, return to z/CMS test rig.
00000220  B2B2 F228                     00000228   192          LPSWE PROGPSW        Not data exception, enter disabled wait
00000228  00020000 00000000                        193 PROGPSW  DC    0D'0',X'0002000000000000',XL6'00',X'DEAD' Abnormal end
00000238  B2B2 F2F8                     000002F8   194 FAIL     LPSWE FAILPSW        Not data exception, enter disabled wait
0000023C  00000000 00000000                        195 SAVEREGS DC    16F'0'         Registers save area
0000027C  00012600                                 196 AHELPERS DC    A(HELPERS)     Address of helper subroutines
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page     5

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   198 ***********************************************************************
                                                   199 *
                                                   200 *  Main program.  Enable Advanced Floating Point, process test cases.
                                                   201 *
                                                   202 ***********************************************************************


00000280                                           204 START    DS    0H
00000280  B600 F308                     00000308   205          STCTL R0,R0,CTLR0    Store CR0 to enable AFP
00000284  9604 F309                     00000309   206          OI    CTLR0+1,X'04'  Turn on AFP bit
00000288  B700 F308                     00000308   207          LCTL  R0,R0,CTLR0    Reload updated CR0
                                                   208 *
0000028C  41A0 F314                     00000314   209          LA    R10,SHORTNF   Point to short BFP non-finite inputs
00000290  4DD0 F3A4                     000003A4   210          BAS   R13,SBFPNF    Multiply short BFP non-finites
00000294  41A0 F324                     00000324   211          LA    R10,SHORTF    Point to short BFP finite inputs
00000298  4DD0 F42E                     0000042E   212          BAS   R13,SBFPF     Multiply short BFP finites
0000029C  41A0 F334                     00000334   213          LA    R10,RMSHORTS  Point to short BFP rounding mode tests
000002A0  4DD0 F4A4                     000004A4   214          BAS   R13,SBFPRM    Multiply short BFP for rounding tests
                                                   215 *
000002A4  41A0 F344                     00000344   216          LA    R10,LONGNF    Point to long BFP non-finite inputs
000002A8  4DD0 F50E                     0000050E   217          BAS   R13,LBFPNF    Multiply long BFP non-finites
000002AC  41A0 F354                     00000354   218          LA    R10,LONGF     Point to long BFP finite inputs
000002B0  4DD0 F594                     00000594   219          BAS   R13,LBFPF     Multiply long BFP finites
000002B4  41A0 F364                     00000364   220          LA    R10,RMLONGS   Point to long  BFP rounding mode tests
000002B8  4DD0 F60A                     0000060A   221          BAS   R13,LBFPRM    Multiply long BFP for rounding tests
                                                   222 *
000002BC  41A0 F374                     00000374   223          LA    R10,XTNDNF    Point to extended BFP non-finite inputs
000002C0  4DD0 F670                     00000670   224          BAS   R13,XBFPNF    Multiply extended BFP non-finites
000002C4  41A0 F384                     00000384   225          LA    R10,XTNDF     Point to ext'd BFP finite inputs
000002C8  4DD0 F6E2                     000006E2   226          BAS   R13,XBFPF     Multiply ext'd BFP finites
000002CC  41A0 F394                     00000394   227          LA    R10,RMXTNDS   Point to ext'd BFP rounding mode tests
000002D0  4DD0 F740                     00000740   228          BAS   R13,XBFPRM    Multiply ext'd BFP for rounding tests
                                                   229 *
                                                   230 ***********************************************************************
                                                   231 *                   Verify test results...
                                                   232 ***********************************************************************
                                                   233 *
000002D4  58C0 F27C                     0000027C   234          L     R12,AHELPERS     Get address of helper subroutines
000002D8  4DD0 C0A0                     000126A0   235          BAS   R13,VERISUB      Go verify results
000002DC  12EE                                     236          LTR   R14,R14          Was return address provided?
000002DE  077E                                     237          BNZR  R14              Yes, return to z/CMS test rig.
000002E0  B2B2 F2E8                     000002E8   238          LPSWE GOODPSW          Load SUCCESS PSW
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page     6

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000002E8                                           240          DS    0D            Ensure correct alignment for PSW
000002E8  00020000 00000000                        241 GOODPSW  DC    X'0002000000000000',AD(0)  Normal end - disabled wait
000002F8  00020000 00000000                        242 FAILPSW  DC    X'0002000000000000',XL6'00',X'0BAD' Abnormal end
                                                   243 *
00000308  00000000                                 244 CTLR0    DS    F
0000030C  00000000                                 245 FPCREGNT DC    X'00000000'  FPCR, trap all IEEE exceptions, zero flags
00000310  F8000000                                 246 FPCREGTR DC    X'F8000000'  FPCR, trap no IEEE exceptions, zero flags
                                                   247 *
                                                   248 * Input values parameter list, four fullwords for each test data set
                                                   249 *      1) Count,
                                                   250 *      2) Address of inputs,
                                                   251 *      3) Address to place results, and
                                                   252 *      4) Address to place DXC/Flags/cc values.
                                                   253 *
00000314                                           254 SHORTNF  DS    0F           Input pairs for short BFP non-finite tests
00000314  00000008                                 255          DC    A(SBFPNFCT)
00000318  000007A0                                 256          DC    A(SBFPNFIN)
0000031C  00001000                                 257          DC    A(SBFPNFOT)
00000320  00001400                                 258          DC    A(SBFPNFFL)
                                                   259 *
00000324                                           260 SHORTF   DS    0F           Input pairs for short BFP finite tests
00000324  00000006                                 261          DC    A(SBFPCT)
00000328  000007C0                                 262          DC    A(SBFPIN)
0000032C  00001800                                 263          DC    A(SBFPOUT)
00000330  00001900                                 264          DC    A(SBFPFLGS)
                                                   265 *
00000334                                           266 RMSHORTS DS    0F           Input pairs for short BFP rounding testing
00000334  00000008                                 267          DC    A(SBFPRMCT)
00000338  000007F0                                 268          DC    A(SBFPINRM)
0000033C  00001A00                                 269          DC    A(SBFPRMO)
00000340  00001D00                                 270          DC    A(SBFPRMOF)
                                                   271 *
00000344                                           272 LONGNF   DS    0F           Input pairs for long BFP non-finite testing
00000344  00000008                                 273          DC    A(LBFPNFCT)
00000348  00000830                                 274          DC    A(LBFPNFIN)
0000034C  00003000                                 275          DC    A(LBFPNFOT)
00000350  00003800                                 276          DC    A(LBFPNFFL)
                                                   277 *
00000354                                           278 LONGF    DS    0F           Input pairs for long BFP finite testing
00000354  00000006                                 279          DC    A(LBFPCT)
00000358  00000870                                 280          DC    A(LBFPIN)
0000035C  00003C00                                 281          DC    A(LBFPOUT)
00000360  00003E00                                 282          DC    A(LBFPFLGS)
                                                   283 *
00000364                                           284 RMLONGS  DS    0F           Input pairs for long BFP rounding testing
00000364  00000008                                 285          DC    A(LBFPRMCT)
00000368  000008D0                                 286          DC    A(LBFPINRM)
0000036C  00004000                                 287          DC    A(LBFPRMO)
00000370  00004500                                 288          DC    A(LBFPRMOF)
                                                   289 *
00000374                                           290 XTNDNF   DS    0F           Inputs for ext'd BFP non-finite testing
00000374  00000008                                 291          DC    A(XBFPNFCT)
00000378  00000950                                 292          DC    A(XBFPNFIN)
0000037C  00005000                                 293          DC    A(XBFPNFOT)
00000380  00005800                                 294          DC    A(XBFPNFFL)
                                                   295 *
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page     7

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000384                                           296 XTNDF    DS    0F           Inputs for ext'd BFP finite testing
00000384  00000006                                 297          DC    A(XBFPCT)
00000388  000009D0                                 298          DC    A(XBFPIN)
0000038C  00005C00                                 299          DC    A(XBFPOUT)
00000390  00005E00                                 300          DC    A(XBFPFLGS)
                                                   301 *
00000394                                           302 RMXTNDS  DS    0F           Inputs for ext'd BFP non-finite testing
00000394  00000008                                 303          DC    A(XBFPRMCT)
00000398  00000A90                                 304          DC    A(XBFPINRM)
0000039C  00006000                                 305          DC    A(XBFPRMO)
000003A0  00006500                                 306          DC    A(XBFPRMOF)
                                                   307 *
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page     8

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   309 ***********************************************************************
                                                   310 *
                                                   311 * Perform Multiply using provided short BFP inputs.  This set of tests
                                                   312 * checks NaN propagation, operations on values that are not finite
                                                   313 * numbers, and other basic tests.  This set generates results that can
                                                   314 * be validated against Figure 19-23 on page 19-28 of SA22-7832-10.
                                                   315 *
                                                   316 * Four results are generated for each input: one RRE with all
                                                   317 * exceptions non-trappable, a second RRE with all exceptions trappable,
                                                   318 * a third RXE with all exceptions non-trappable, a fourth RXE with all
                                                   319 * exceptions trappable,
                                                   320 *
                                                   321 * The product and FPC contents are stored for each result.
                                                   322 *
                                                   323 ***********************************************************************


000003A4                                           325 SBFPNF   DS    0H            BFP Short non-finite values tests
000003A4  9823 A000                     00000000   326          LM    R2,R3,0(R10)  Get count and addr of multiplicand values
000003A8  9878 A008                     00000008   327          LM    R7,R8,8(R10)  Get address of result area and flag area.
000003AC  1222                                     328          LTR   R2,R2         Any test cases?
000003AE  078D                                     329          BZR   R13           ..No, return to caller
000003B0  0DC0                                     330          BASR  R12,0         Set top of loop
                                                   331 *
000003B2  9845 A000                     00000000   332          LM    R4,R5,0(R10)  Get count and start of multiplier values
                                                   333 *                            ..which are the same as the multiplicands
000003B6  0D60                                     334          BASR  R6,0          Set top of inner loop
                                                   335 *
000003B8  7880 3000                     00000000   336          LE    FPR8,0(,R3)   Get short BFP multiplicand
000003BC  7810 5000                     00000000   337          LE    FPR1,0(,R5)   Get short BFP multiplier
000003C0  B29D F30C                     0000030C   338          LFPC  FPCREGNT      Set exceptions non-trappable
000003C4  B317 0081                                339          MEEBR FPR8,FPR1     Multiply short FPR8 by FPR1 RRE
000003C8  7080 7000                     00000000   340          STE   FPR8,0(,R7)   Store short BFP product
000003CC  B29C 8000                     00000000   341          STFPC 0(R8)         Store resulting FPCR flags and DXC
                                                   342 *
000003D0  7880 3000                     00000000   343          LE    FPR8,0(,R3)   Get short BFP multiplicand
000003D4  7810 5000                     00000000   344          LE    FPR1,0(,R5)   Get short BFP multiplier
000003D8  B29D F310                     00000310   345          LFPC  FPCREGTR      Set exceptions trappable
000003DC  B317 0081                                346          MEEBR FPR8,FPR1     Multiply short FPR8 by FPR1 RRE
000003E0  7080 7004                     00000004   347          STE   FPR8,4(,R7)   Store short BFP product
000003E4  B29C 8004                     00000004   348          STFPC 4(R8)         Store resulting FPCR flags and DXC
                                                   349 *
000003E8  7880 3000                     00000000   350          LE    FPR8,0(,R3)   Get short BFP multiplicand
000003EC  7810 5000                     00000000   351          LE    FPR1,0(,R5)   Get short BFP multiplier
000003F0  B29D F30C                     0000030C   352          LFPC  FPCREGNT      Set exceptions non-trappable
000003F4  ED80 5000 0017                00000000   353          MEEB  FPR8,0(,R5)   Multiply short FPR8 by multiplier RXE
000003FA  7080 7008                     00000008   354          STE   FPR8,8(,R7)   Store short BFP product
000003FE  B29C 8008                     00000008   355          STFPC 8(R8)         Store resulting FPCR flags and DXC
                                                   356 *
00000402  7880 3000                     00000000   357          LE    FPR8,0(,R3)   Get short BFP multiplicand
00000406  B29D F310                     00000310   358          LFPC  FPCREGTR      Set exceptions trappable
0000040A  ED80 5000 0017                00000000   359          MEEB  FPR8,0(,R5)   Multiply short FPR8 by multiplier RXE
00000410  7080 700C                     0000000C   360          STE   FPR8,12(,R7)  Store short BFP product
00000414  B29C 800C                     0000000C   361          STFPC 12(R8)        Store resulting FPCR flags and DXC
                                                   362 *
00000418  4150 5004                     00000004   363          LA    R5,4(,R5)     Point to next multiplier value
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page     9

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000041C  4170 7010                     00000010   364          LA    R7,4*4(,R7)   Point to next Multiply result area
00000420  4180 8010                     00000010   365          LA    R8,4*4(,R8)   Point to next Multiply FPCR area
00000424  0646                                     366          BCTR  R4,R6         Loop through right-hand values
                                                   367 *
00000426  4130 3004                     00000004   368          LA    R3,4(,R3)     Point to next input multiplicand
0000042A  062C                                     369          BCTR  R2,R12        Loop through left-hand values
0000042C  07FD                                     370          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    10

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   372 ***********************************************************************
                                                   373 *
                                                   374 * Perform Multiply using provided short BFP input pairs.  This set of
                                                   375 * tests triggers IEEE exceptions Overflow, Underflow, and Inexact and
                                                   376 * collects both trap and non-trap results.
                                                   377 *
                                                   378 * Four results are generated for each input: one RRE with all
                                                   379 * exceptions non-trappable, a second RRE with all exceptions trappable,
                                                   380 * a third RXE with all exceptions non-trappable, a fourth RXE with all
                                                   381 * exceptions trappable,
                                                   382 *
                                                   383 * The product and FPC contents are stored for each result.
                                                   384 *
                                                   385 ***********************************************************************


0000042E  9823 A000                     00000000   387 SBFPF    LM    R2,R3,0(R10)  Get count and address of test input values
00000432  9878 A008                     00000008   388          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000436  1222                                     389          LTR   R2,R2         Any test cases?
00000438  078D                                     390          BZR   R13           ..No, return to caller
0000043A  0DC0                                     391          BASR  R12,0         Set top of loop
                                                   392 *
0000043C  B29D F30C                     0000030C   393          LFPC  FPCREGNT      Set exceptions non-trappable
00000440  7880 3000                     00000000   394          LE    FPR8,0(,R3)   Get short BFP multiplicand
00000444  7810 3004                     00000004   395          LE    FPR1,4(,R3)   Get short BFP multiplier
00000448  B317 0081                                396          MEEBR FPR8,FPR1     Multiply short FPR8 by FPR1 RRE
0000044C  7080 7000                     00000000   397          STE   FPR8,0(,R7)   Store short BFP product
00000450  B29C 8000                     00000000   398          STFPC 0(R8)         Store resulting FPCR flags and DXC
                                                   399 *
00000454  B29D F310                     00000310   400          LFPC  FPCREGTR      Set exceptions trappable
00000458  7880 3000                     00000000   401          LE    FPR8,0(,R3)   Reload short BFP multiplicand
                                                   402 *                            ..multiplier is still in FPR1
0000045C  B317 0081                                403          MEEBR FPR8,FPR1     Multiply short FPR8 by FPR1 RRE
00000460  7080 7004                     00000004   404          STE   FPR8,4(,R7)   Store short BFP product
00000464  B29C 8004                     00000004   405          STFPC 4(R8)         Store resulting FPCR flags and DXC
                                                   406 *
00000468  B29D F30C                     0000030C   407          LFPC  FPCREGNT      Set exceptions non-trappable
0000046C  7880 3000                     00000000   408          LE    FPR8,0(,R3)   Reload short BFP multiplicand
00000470  ED80 3004 0017                00000004   409          MEEB  FPR8,4(,R3)   Multiply short FPR8 by multiplier RXE
00000476  7080 7008                     00000008   410          STE   FPR8,8(,R7)   Store short BFP product
0000047A  B29C 8008                     00000008   411          STFPC 8(R8)         Store resulting FPCR flags and DXC
                                                   412 *
0000047E  B29D F310                     00000310   413          LFPC  FPCREGTR      Set exceptions trappable
00000482  7880 3000                     00000000   414          LE    FPR8,0(,R3)   Reload short BFP multiplicand
00000486  ED80 3004 0017                00000004   415          MEEB  FPR8,4(,R3)   Multiply short FPR8 by multiplier RXE
0000048C  7080 700C                     0000000C   416          STE   FPR8,12(,R7)  Store short BFP product
00000490  B29C 800C                     0000000C   417          STFPC 12(R8)        Store resulting FPCR flags and DXC
                                                   418 *
00000494  4130 3008                     00000008   419          LA    R3,2*4(,R3)   Point to next input value pair
00000498  4170 7010                     00000010   420          LA    R7,4*4(,R7)   Point to next product result set
0000049C  4180 8010                     00000010   421          LA    R8,4*4(,R8)   Point to next FPCR result set
000004A0  062C                                     422          BCTR  R2,R12        Convert next input value.
000004A2  07FD                                     423          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    11

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   425 ***********************************************************************
                                                   426 *
                                                   427 * Perform Multiply using provided short BFP input pairs.  This set of
                                                   428 * tests exhaustively tests all rounding modes available for Multiply.
                                                   429 * The rounding mode can only be specified in the FPC.
                                                   430 *
                                                   431 * All five FPC rounding modes are tested because the preceeding tests,
                                                   432 * using rounding mode RNTE, do not often create results that require
                                                   433 * rounding.
                                                   434 *
                                                   435 * Two results are generated for each input and rounding mode: one RRE
                                                   436 * and one RXE.  Traps are disabled for all rounding mode tests.
                                                   437 *
                                                   438 * The product and FPC contents are stored for each test.
                                                   439 *
                                                   440 ***********************************************************************


000004A4  9823 A000                     00000000   442 SBFPRM   LM    R2,R3,0(R10)  Get count and address of test input values
000004A8  9878 A008                     00000008   443          LM    R7,R8,8(R10)  Get address of result area and flag area.
000004AC  1222                                     444          LTR   R2,R2         Any test cases?
000004AE  078D                                     445          BZR   R13           ..No, return to caller
000004B0  1711                                     446          XR    R1,R1         Zero register 1 for use in IC/STC/indexing
000004B2  0DC0                                     447          BASR  R12,0         Set top of test case loop
                                                   448
000004B4  4150 0005                     00000005   449          LA    R5,FPCMCT     Get count of FPC modes to be tested
000004B8  0D90                                     450          BASR  R9,0          Set top of rounding mode outer loop
                                                   451 *
000004BA  4315 F797                     00000797   452          IC    R1,FPCMODES-L'FPCMODES(R5)  Get next FPC mode
                                                   453 *
000004BE  B29D F30C                     0000030C   454          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000004C2  B2B8 1000                     00000000   455          SRNMB 0(R1)         Set FPC Rounding Mode
000004C6  7880 3000                     00000000   456          LE    FPR8,0(,R3)   Get short BFP multiplicand
000004CA  7810 3004                     00000004   457          LE    FPR1,4(,R3)   Get short BFP multiplier
000004CE  B317 0081                                458          MEEBR FPR8,FPR1     Multiply short FPR8 by FPR1 RRE
000004D2  7080 7000                     00000000   459          STE   FPR8,0(,R7)   Store short BFP product
000004D6  B29C 8000                     00000000   460          STFPC 0(R8)         Store resulting FPCR flags and DXC
                                                   461 *
000004DA  B29D F30C                     0000030C   462          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000004DE  B2B8 1000                     00000000   463          SRNMB 0(R1)         Set FPC Rounding Mode
000004E2  7880 3000                     00000000   464          LE    FPR8,0(,R3)   Get short BFP multiplicand
000004E6  ED80 3004 0017                00000004   465          MEEB  FPR8,4(,R3)   Multiply short FPR8 by multiplier RXE
000004EC  7080 7004                     00000004   466          STE   FPR8,4(,R7)   Store short BFP product
000004F0  B29C 8004                     00000004   467          STFPC 4(R8)         Store resulting FPCR flags and DXC
                                                   468 *
000004F4  4170 7008                     00000008   469          LA    R7,2*4(,R7)   Point to next product result set
000004F8  4180 8008                     00000008   470          LA    R8,2*4(,R8)   Point to next FPCR result area
                                                   471 *
000004FC  0659                                     472          BCTR  R5,R9         Iterate to next FPC mode for this input
                                                   473 *
                                                   474 * End of FPC modes to be tested.  Advance to next test case.  We will
                                                   475 * skip eight bytes of result area so that each set of five result
                                                   476 * value pairs starts at a memory address ending in zero for the
                                                   477 * convenience of memory dump review.
                                                   478 *
000004FE  4130 3008                     00000008   479          LA    R3,2*4(,R3)   Point to next input value pair
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    12

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000502  4170 7008                     00000008   480          LA    R7,8(,R7)     Skip to start of next result set
00000506  4180 8008                     00000008   481          LA    R8,8(,R8)     Skip to start of next FPCR result set
0000050A  062C                                     482          BCTR  R2,R12        Advance to the next input pair
                                                   483 *
0000050C  07FD                                     484          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    13

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   486 ***********************************************************************
                                                   487 *
                                                   488 * Perform Multiply using provided long BFP inputs.  This set of tests
                                                   489 * checks NaN propagation, operations on values that are not finite
                                                   490 * numbers, and other basic tests.  This set generates results that can
                                                   491 * be validated against Figure 19-23 on page 19-28 of SA22-7832-10.
                                                   492 *
                                                   493 * Four results are generated for each input: one RRE with all
                                                   494 * exceptions non-trappable, a second RRE with all exceptions trappable,
                                                   495 * a third RXE with all exceptions non-trappable, a fourth RXE with all
                                                   496 * exceptions trappable,
                                                   497 *
                                                   498 * The product and FPC contents are stored for each result.
                                                   499 *
                                                   500 ***********************************************************************


0000050E                                           502 LBFPNF   DS    0H            BFP long non-finite values tests
0000050E  9823 A000                     00000000   503          LM    R2,R3,0(R10)  Get count and addr of multiplicand values
00000512  9878 A008                     00000008   504          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000516  1222                                     505          LTR   R2,R2         Any test cases?
00000518  078D                                     506          BZR   R13           ..No, return to caller
0000051A  0DC0                                     507          BASR  R12,0         Set top of loop
                                                   508 *
0000051C  9845 A000                     00000000   509          LM    R4,R5,0(R10)  Get count and start of multiplier values
                                                   510 *                            ..which are the same as the multiplicands
00000520  0D60                                     511          BASR  R6,0          Set top of inner loop
                                                   512 *
00000522  6880 3000                     00000000   513          LD    FPR8,0(,R3)   Get long BFP multiplicand
00000526  6810 5000                     00000000   514          LD    FPR1,0(,R5)   Get long BFP multiplier
0000052A  B29D F30C                     0000030C   515          LFPC  FPCREGNT      Set exceptions non-trappable
0000052E  B31C 0081                                516          MDBR  FPR8,FPR1     Multiply long FPR8 by FPR1 RRE
00000532  6080 7000                     00000000   517          STD   FPR8,0(,R7)   Store long BFP product
00000536  B29C 8000                     00000000   518          STFPC 0(R8)         Store resulting FPCR flags and DXC
                                                   519 *
0000053A  6880 3000                     00000000   520          LD    FPR8,0(,R3)   Get long BFP multiplicand
0000053E  6810 5000                     00000000   521          LD    FPR1,0(,R5)   Get long BFP multiplier
00000542  B29D F310                     00000310   522          LFPC  FPCREGTR      Set exceptions trappable
00000546  B31C 0081                                523          MDBR  FPR8,FPR1     Multiply long multiplier from FPR8 RRE
0000054A  6080 7008                     00000008   524          STD   FPR8,8(,R7)   Store long BFP remainder
0000054E  B29C 8004                     00000004   525          STFPC 4(R8)         Store resulting FPCR flags and DXC
                                                   526 *
00000552  6880 3000                     00000000   527          LD    FPR8,0(,R3)   Get long BFP multiplicand
00000556  B29D F30C                     0000030C   528          LFPC  FPCREGNT      Set exceptions non-trappable
0000055A  ED80 5000 001C                00000000   529          MDB   FPR8,0(,R5)   Multiply long FPR8 by multiplier RXE
00000560  6080 7010                     00000010   530          STD   FPR8,16(,R7)  Store long BFP product
00000564  B29C 8008                     00000008   531          STFPC 8(R8)         Store resulting FPCR flags and DXC
                                                   532 *
00000568  6880 3000                     00000000   533          LD    FPR8,0(,R3)   Get long BFP multiplicand
0000056C  B29D F310                     00000310   534          LFPC  FPCREGTR      Set exceptions trappable
00000570  ED80 5000 001C                00000000   535          MDB   FPR8,0(,R5)   Multiply long FPR8 by multiplier RXE
00000576  6080 7018                     00000018   536          STD   FPR8,24(,R7)  Store long BFP remainder
0000057A  B29C 800C                     0000000C   537          STFPC 12(R8)        Store resulting FPCR flags and DXC
                                                   538 *
0000057E  4150 5008                     00000008   539          LA    R5,8(,R5)     Point to next multiplier value
00000582  4170 7020                     00000020   540          LA    R7,4*8(,R7)   Point to next Multiply result area
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    14

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000586  4180 8010                     00000010   541          LA    R8,4*4(,R8)   Point to next Multiply FPCR area
0000058A  0646                                     542          BCTR  R4,R6         Loop through right-hand values
                                                   543 *
0000058C  4130 3008                     00000008   544          LA    R3,8(,R3)     Point to next multiplicand value
00000590  062C                                     545          BCTR  R2,R12        Multiply until all cases tested
00000592  07FD                                     546          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    15

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   548 ***********************************************************************
                                                   549 *
                                                   550 * Perform Multiply using provided long BFP input pairs.  This set of
                                                   551 * tests triggers IEEE exceptions Overflow, Underflow, and Inexact and
                                                   552 * collects non-trap and trap results.
                                                   553 *
                                                   554 * Four results are generated for each input: one RRE with all
                                                   555 * exceptions non-trappable, a second RRE with all exceptions trappable,
                                                   556 * a third RXE with all exceptions non-trappable, a fourth RXE with all
                                                   557 * exceptions trappable,
                                                   558 *
                                                   559 * The product and FPC contents are stored for each result.
                                                   560 *
                                                   561 ***********************************************************************


00000594  9823 A000                     00000000   563 LBFPF    LM    R2,R3,0(R10)  Get count and address of test input values
00000598  9878 A008                     00000008   564          LM    R7,R8,8(R10)  Get address of result area and flag area.
0000059C  1222                                     565          LTR   R2,R2         Any test cases?
0000059E  078D                                     566          BZR   R13           ..No, return to caller
000005A0  0DC0                                     567          BASR  R12,0         Set top of loop
                                                   568 *
000005A2  B29D F30C                     0000030C   569          LFPC  FPCREGNT      Set exceptions non-trappable
000005A6  6880 3000                     00000000   570          LD    FPR8,0(,R3)   Get long BFP multiplicand
000005AA  6810 3008                     00000008   571          LD    FPR1,8(,R3)   Get long BFP multiplier
000005AE  B31C 0081                                572          MDBR  FPR8,FPR1     Multiply long FPR8 by FPR1 RRE
000005B2  6080 7000                     00000000   573          STD   FPR8,0(,R7)   Store long BFP product
000005B6  B29C 8000                     00000000   574          STFPC 0(R8)         Store resulting FPCR flags and DXC
                                                   575 *
000005BA  B29D F310                     00000310   576          LFPC  FPCREGTR      Set exceptions trappable
000005BE  6880 3000                     00000000   577          LD    FPR8,0(,R3)   Reload long BFP multiplicand
                                                   578 *                            ..multiplier is still in FPR1
000005C2  B31C 0081                                579          MDBR  FPR8,FPR1     Multiply long FPR8 by FPR1 RRE
000005C6  6080 7008                     00000008   580          STD   FPR8,8(,R7)   Store long BFP product
000005CA  B29C 8004                     00000004   581          STFPC 4(R8)         Store resulting FPCR flags and DXC
                                                   582 *
000005CE  B29D F30C                     0000030C   583          LFPC  FPCREGNT      Set exceptions non-trappable
000005D2  6880 3000                     00000000   584          LD    FPR8,0(,R3)   Reload long BFP multiplicand
000005D6  ED80 3008 001C                00000008   585          MDB   FPR8,8(,R3)   Multiply long FPR8 by multiplier RXE
000005DC  6080 7010                     00000010   586          STD   FPR8,16(,R7)  Store long BFP product
000005E0  B29C 8008                     00000008   587          STFPC 8(R8)         Store resulting FPCR flags and DXC
                                                   588 *
000005E4  B29D F310                     00000310   589          LFPC  FPCREGTR      Set exceptions trappable
000005E8  6880 3000                     00000000   590          LD    FPR8,0(,R3)   Reload long BFP multiplicand
000005EC  ED80 3008 001C                00000008   591          MDB   FPR8,8(,R3)   Multiply long FPR8 by multiplier RXE
000005F2  6080 7018                     00000018   592          STD   FPR8,24(,R7)  Store long BFP product
000005F6  B29C 800C                     0000000C   593          STFPC 12(R8)        Store resulting FPCR flags and DXC
                                                   594 *
000005FA  4130 3010                     00000010   595          LA    R3,2*8(,R3)   Point to next input value pair
000005FE  4170 7020                     00000020   596          LA    R7,4*8(,R7)   Point to next quotent result pair
00000602  4180 8010                     00000010   597          LA    R8,4*4(,R8)   Point to next FPCR result area
00000606  062C                                     598          BCTR  R2,R12        Convert next input value.
00000608  07FD                                     599          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    16

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   601 ***********************************************************************
                                                   602 *
                                                   603 * Perform Multiply using provided long BFP input pairs.  This set of
                                                   604 * tests exhaustively tests all rounding modes available for Multiply.
                                                   605 * The rounding mode can only be specified in the FPC.
                                                   606 *
                                                   607 * All five FPC rounding modes are tested because the preceeding tests,
                                                   608 * using rounding mode RNTE, do not often create results that require
                                                   609 * rounding.
                                                   610 *
                                                   611 * Two results are generated for each input and rounding mode: one RRE
                                                   612 * and one RXE.  Traps are disabled for all rounding mode tests.
                                                   613 *
                                                   614 * The product and FPC contents are stored for each result.
                                                   615 *
                                                   616 ***********************************************************************


0000060A  9823 A000                     00000000   618 LBFPRM   LM    R2,R3,0(R10)  Get count and address of test input values
0000060E  9878 A008                     00000008   619          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000612  1222                                     620          LTR   R2,R2         Any test cases?
00000614  078D                                     621          BZR   R13           ..No, return to caller
00000616  1711                                     622          XR    R1,R1         Zero register 1 for use in IC/STC/indexing
00000618  0DC0                                     623          BASR  R12,0         Set top of test case loop
                                                   624
0000061A  4150 0005                     00000005   625          LA    R5,FPCMCT     Get count of FPC modes to be tested
0000061E  0D90                                     626          BASR  R9,0          Set top of rounding mode loop
                                                   627 *
00000620  4315 F797                     00000797   628          IC    R1,FPCMODES-L'FPCMODES(R5)  Get next FPC mode
                                                   629 *
00000624  B29D F30C                     0000030C   630          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000628  B2B8 1000                     00000000   631          SRNMB 0(R1)         Set FPC Rounding Mode
0000062C  6880 3000                     00000000   632          LD    FPR8,0(,R3)   Get long BFP multiplicand
00000630  6810 3008                     00000008   633          LD    FPR1,8(,R3)   Get long BFP multiplier
00000634  B31C 0081                                634          MDBR  FPR8,FPR1     Multiply long FPR8 by FPR1 RRE
00000638  6080 7000                     00000000   635          STD   FPR8,0(,R7)   Store long BFP product
0000063C  B29C 8000                     00000000   636          STFPC 0(R8)         Store resulting FPCR flags and DXC
                                                   637 *
00000640  B29D F30C                     0000030C   638          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000644  B2B8 1000                     00000000   639          SRNMB 0(R1)         Set FPC Rounding Mode
00000648  6880 3000                     00000000   640          LD    FPR8,0(,R3)   Reload long BFP multiplicand
0000064C  ED80 3008 001C                00000008   641          MDB   FPR8,8(,R3)   Multiply long FPR8 by multiplier RXE
00000652  6080 7008                     00000008   642          STD   FPR8,8(,R7)   Store long BFP product
00000656  B29C 8004                     00000004   643          STFPC 4(R8)         Store resulting FPCR flags and DXC
                                                   644 *
0000065A  4170 7010                     00000010   645          LA    R7,2*8(,R7)   Point to next product result set
0000065E  4180 8008                     00000008   646          LA    R8,2*4(,R8)   Point to next FPCR result area
                                                   647 *
00000662  0659                                     648          BCTR  R5,R9         Iterate to next FPC mode
                                                   649 *
                                                   650 * End of FPC modes to be tested.  Advance to next test case.  We will
                                                   651 * skip eight bytes of FPCR result area so that each set of five result
                                                   652 * FPCR contents pairs starts at a memory address ending in zero for the
                                                   653 * convenience of memory dump review.
                                                   654 *
00000664  4130 3010                     00000010   655          LA    R3,2*8(,R3)   Point to next input value pair
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    17

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000668  4180 8008                     00000008   656          LA    R8,8(,R8)     Skip to start of next FPCR result area
0000066C  062C                                     657          BCTR  R2,R12        Multiply next input value lots of times
                                                   658 *
0000066E  07FD                                     659          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    18

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   661 ***********************************************************************
                                                   662 *
                                                   663 * Perform Multiply using provided extended BFP inputs.  This set of
                                                   664 * tests checks NaN propagation, operations on values that are not
                                                   665 * finite numbers, and other basic tests.  This set generates results
                                                   666 * that can be validated against Figure 19-23 on page 19-28 of
                                                   667 * SA22-7832-10.
                                                   668 *
                                                   669 * Two results are generated for each input: one RRE with all
                                                   670 * exceptions non-trappable, and a second RRE with all exceptions
                                                   671 * trappable.  Extended BFP Multiply does not have an RXE format.
                                                   672 *
                                                   673 * The product and FPC contents are stored for each result.
                                                   674 *
                                                   675 ***********************************************************************


00000670                                           677 XBFPNF   DS    0H            BFP extended non-finite values tests
00000670  9823 A000                     00000000   678          LM    R2,R3,0(R10)  Get count and addr of multiplicand values
00000674  9878 A008                     00000008   679          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000678  1222                                     680          LTR   R2,R2         Any test cases?
0000067A  078D                                     681          BZR   R13           ..No, return to caller
0000067C  0DC0                                     682          BASR  R12,0         Set top of loop
                                                   683 *
0000067E  9845 A000                     00000000   684          LM    R4,R5,0(R10)  Get count and start of multiplier values
                                                   685 *                            ..which are the same as the multiplicands
00000682  0D60                                     686          BASR  R6,0          Set top of inner loop
                                                   687 *
00000684  6880 3000                     00000000   688          LD    FPR8,0(,R3)   Get extended BFP multiplicand part 1
00000688  68A0 3008                     00000008   689          LD    FPR10,8(,R3)  Get extended BFP multiplicand part 2
0000068C  6810 5000                     00000000   690          LD    FPR1,0(,R5)   Get extended BFP multiplier part 1
00000690  6830 5008                     00000008   691          LD    FPR3,8(,R5)   Get extended BFP multiplier part 2
00000694  B29D F30C                     0000030C   692          LFPC  FPCREGNT      Set exceptions non-trappable
00000698  B34C 0081                                693          MXBR  FPR8,FPR1     Multiply extended FPR8-10 by FPR1-3 RRE
0000069C  6080 7000                     00000000   694          STD   FPR8,0(,R7)   Store extended BFP product part 1
000006A0  60A0 7008                     00000008   695          STD   FPR10,8(,R7)  Store extended BFP product part 2
000006A4  B29C 8000                     00000000   696          STFPC 0(R8)         Store resulting FPCR flags and DXC
                                                   697 *
000006A8  6880 3000                     00000000   698          LD    FPR8,0(,R3)   Get extended BFP multiplicand part 1
000006AC  68A0 3008                     00000008   699          LD    FPR10,8(,R3)  Get extended BFP multiplicand part 2
000006B0  6810 5000                     00000000   700          LD    FPR1,0(,R5)   Get extended BFP multiplier part 1
000006B4  6830 5008                     00000008   701          LD    FPR3,8(,R5)   Get extended BFP multiplier part 2
000006B8  B29D F310                     00000310   702          LFPC  FPCREGTR      Set exceptions trappable
000006BC  B34C 0081                                703          MXBR  FPR8,FPR1     Multiply extended FPR8-10 by FPR1-3 RRE
000006C0  6080 7010                     00000010   704          STD   FPR8,16(,R7)  Store extended BFP product part 1
000006C4  60A0 7018                     00000018   705          STD   FPR10,24(,R7) Store extended BFP product part 2
000006C8  B29C 8004                     00000004   706          STFPC 4(R8)         Store resulting FPCR flags and DXC
                                                   707 *
000006CC  4150 5010                     00000010   708          LA    R5,16(,R5)    Point to next multiplier value
000006D0  4170 7020                     00000020   709          LA    R7,32(,R7)    Point to next Multiply result area
000006D4  4180 8010                     00000010   710          LA    R8,16(,R8)    Point to next Multiply FPCR area
000006D8  0646                                     711          BCTR  R4,R6         Loop through right-hand values
                                                   712 *
000006DA  4130 3010                     00000010   713          LA    R3,16(,R3)    Point to next multiplicand value
000006DE  062C                                     714          BCTR  R2,R12        Multiply until all cases tested
000006E0  07FD                                     715          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    19

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   717 ***********************************************************************
                                                   718 *
                                                   719 * Perform Multiply using provided extended BFP input pairs.  This set
                                                   720 * of tests triggers IEEE exceptions Overflow, Underflow, and Inexact
                                                   721 * and collects results when the exceptions do not result in a trap and
                                                   722 * when they do.
                                                   723 *
                                                   724 * Two results are generated for each input: one RRE with all
                                                   725 * exceptions non-trappable and a second RRE with all exceptions
                                                   726 * trappable.  There is no RXE format for Multiply in extended
                                                   727 * precision.
                                                   728 *
                                                   729 * The product and FPC contents are stored for each result.
                                                   730 *
                                                   731 ***********************************************************************


000006E2  9823 A000                     00000000   733 XBFPF    LM    R2,R3,0(R10)  Get count and address of test input values
000006E6  9878 A008                     00000008   734          LM    R7,R8,8(R10)  Get address of result area and flag area.
000006EA  1222                                     735          LTR   R2,R2         Any test cases?
000006EC  078D                                     736          BZR   R13           ..No, return to caller
000006EE  0DC0                                     737          BASR  R12,0         Set top of loop
                                                   738 *
000006F0  B29D F30C                     0000030C   739          LFPC  FPCREGNT      Set exceptions non-trappable
000006F4  6880 3000                     00000000   740          LD    FPR8,0(,R3)   Get extended BFP multiplicand part 1
000006F8  68A0 3008                     00000008   741          LD    FPR10,8(,R3)  Get extended BFP multiplicand part 2
000006FC  6810 3010                     00000010   742          LD    FPR1,16(,R3)  Get extended BFP multiplier part 1
00000700  6830 3018                     00000018   743          LD    FPR3,24(,R3)  Get extended BFP multiplier part 2
00000704  B34C 0081                                744          MXBR  FPR8,FPR1     Multiply extended FPR8-10 by FPR1-3 RRE
00000708  6080 7000                     00000000   745          STD   FPR8,0(,R7)   Store extended BFP product part 1
0000070C  60A0 7008                     00000008   746          STD   FPR10,8(,R7)  Store extended BFP product part 2
00000710  B29C 8000                     00000000   747          STFPC 0(R8)         Store resulting FPCR flags and DXC
                                                   748 *
00000714  B29D F310                     00000310   749          LFPC  FPCREGTR      Set exceptions trappable
00000718  6880 3000                     00000000   750          LD    FPR8,0(,R3)   Reload extended BFP multiplicand part 1
0000071C  68A0 3008                     00000008   751          LD    FPR10,8(,R3)  Reload extended BFP multiplicand part 2
                                                   752 *                            ..multiplier is still in FPR1-FPR3
00000720  B34C 0081                                753          MXBR  FPR8,FPR1     Multiply extended FPR8-10 by FPR1-3 RRE
00000724  6080 7010                     00000010   754          STD   FPR8,16(,R7)  Store extended BFP product part 1
00000728  60A0 7018                     00000018   755          STD   FPR10,24(,R7) Store extended BFP product part 2
0000072C  B29C 8004                     00000004   756          STFPC 4(R8)         Store resulting FPCR flags and DXC
                                                   757 *
00000730  4130 3020                     00000020   758          LA    R3,32(,R3)    Point to next input value pair
00000734  4170 7020                     00000020   759          LA    R7,32(,R7)    Point to next quotent result pair
00000738  4180 8010                     00000010   760          LA    R8,16(,R8)    Point to next FPCR result area
0000073C  062C                                     761          BCTR  R2,R12        Convert next input value.
                                                   762 *
0000073E  07FD                                     763          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    20

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   765 ***********************************************************************
                                                   766 *
                                                   767 * Perform Multiply using provided extended BFP input pairs.  This set
                                                   768 * of tests exhaustively tests all rounding modes available for
                                                   769 * Multiply.  The rounding mode can only be specified in the FPC.
                                                   770 *
                                                   771 * All five FPC rounding modes are tested because the preceeding tests,
                                                   772 * using rounding mode RNTE, do not often create results that require
                                                   773 * rounding.
                                                   774 *
                                                   775 * Two results are generated for each input and rounding mode: one RRE
                                                   776 * and one RXE.  Traps are disabled for all rounding mode tests.
                                                   777 *
                                                   778 * The product and FPC contents are stored for each result.
                                                   779 *
                                                   780 ***********************************************************************


00000740  9823 A000                     00000000   782 XBFPRM   LM    R2,R3,0(R10)  Get count and address of test input values
00000744  9878 A008                     00000008   783          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000748  1222                                     784          LTR   R2,R2         Any test cases?
0000074A  078D                                     785          BZR   R13           ..No, return to caller
0000074C  1711                                     786          XR    R1,R1         Zero register 1 for use in IC/STC/indexing
0000074E  0DC0                                     787          BASR  R12,0         Set top of test case loop
                                                   788
00000750  4150 0005                     00000005   789          LA    R5,FPCMCT     Get count of FPC modes to be tested
00000754  0D90                                     790          BASR  R9,0          Set top of rounding mode loop
                                                   791 *
00000756  4315 F797                     00000797   792          IC    R1,FPCMODES-L'FPCMODES(R5)  Get next FPC mode
                                                   793 *
0000075A  B29D F30C                     0000030C   794          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000075E  B2B8 1000                     00000000   795          SRNMB 0(R1)         Set FPC Rounding Mode
00000762  6880 3000                     00000000   796          LD    FPR8,0(,R3)   Get extended BFP multiplicand part 1
00000766  68A0 3008                     00000008   797          LD    FPR10,8(,R3)  Get extended BFP multiplicand part 2
0000076A  6810 3010                     00000010   798          LD    FPR1,16(,R3)  Get extended BFP multiplier part 1
0000076E  6830 3018                     00000018   799          LD    FPR3,24(,R3)  Get extended BFP multiplier part 2
00000772  B34C 0081                                800          MXBR  FPR8,FPR1     Multiply extended FPR8-10 by FPR1-3 RRE
00000776  6080 7000                     00000000   801          STD   FPR8,0(,R7)   Store extended BFP product part 1
0000077A  60A0 7008                     00000008   802          STD   FPR10,8(,R7)  Store extended BFP product part 2
0000077E  B29C 8000                     00000000   803          STFPC 0(R8)         Store resulting FPCR flags and DXC
                                                   804 *
00000782  4170 7010                     00000010   805          LA    R7,16(,R7)    Point to next product result set
00000786  4180 8004                     00000004   806          LA    R8,4(,R8)     Point to next FPCR result area
                                                   807 *
0000078A  0659                                     808          BCTR  R5,R9         Iterate to next FPC mode
                                                   809 *
                                                   810 * End of FPC modes to be tested.  Advance to next test case.  We will
                                                   811 * skip eight bytes of FPCR result area so that each set of five result
                                                   812 * FPCR contents pairs starts at a memory address ending in zero for the
                                                   813 * convenience of memory dump review.
                                                   814 *
0000078C  4130 3020                     00000020   815          LA    R3,2*16(,R3)  Point to next input value pair
00000790  4180 800C                     0000000C   816          LA    R8,12(,R8)    Skip to start of next FPCR result area
00000794  062C                                     817          BCTR  R2,R12        Multiply next input value lots of times
                                                   818 *
00000796  07FD                                     819          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    21

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   821 ***********************************************************************
                                                   822 *
                                                   823 * Table of FPC rounding modes to test product rounding modes.
                                                   824 *
                                                   825 * The Set BFP Rounding Mode does allow specification of the FPC
                                                   826 * rounding mode as an address, so we shall index into a table of
                                                   827 * BFP rounding modes without bothering with Execute.
                                                   828 *
                                                   829 ***********************************************************************


                                                   831 *
                                                   832 * Rounding modes that may be set in the FPCR.  The FPCR controls
                                                   833 * rounding of the product.
                                                   834 *
                                                   835 * These are indexed directly by the loop counter, which counts down.
                                                   836 * So the modes are listed in reverse order here.
                                                   837 *
00000798                                           838 FPCMODES DS    0C
00000798  07                                       839          DC    AL1(7)              RFS, Round for shorter precision
00000799  03                                       840          DC    AL1(3)              RM, Round to -infinity
0000079A  02                                       841          DC    AL1(2)              RP, Round to +infinity
0000079B  01                                       842          DC    AL1(1)              RZ, Round to zero
0000079C  00                                       843          DC    AL1(0)              RNTE, Round to Nearest, ties to even
                              00000005  00000001   844 FPCMCT   EQU   *-FPCMODES          Count of FPC Modes to be tested
                                                   845 *
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    22

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   847 ***********************************************************************
                                                   848 *
                                                   849 * Short BFP test data sets for Multiply testing.
                                                   850 *
                                                   851 * The first test data set is used for tests of basic functionality,
                                                   852 * NaN propagation, and results from operations involving other than
                                                   853 * finite numbers.
                                                   854 *
                                                   855 * The second test data set is used for testing boundary conditions
                                                   856 * using two finite non-zero values.  Each possible type of result
                                                   857 * (normal, scaled, etc) is created by members of this test data set.
                                                   858 *
                                                   859 * The third test data set is used for exhaustive testing of final
                                                   860 * results across the five rounding modes available for the Multiply
                                                   861 * instruction.
                                                   862 *
                                                   863 * The strategy for predictable rounding mode testing is to use a
                                                   864 * multiplicand with some one-bits in the low-order byte and multiply
                                                   865 * that by 1/16 (0.0625).  In BFP, this will have the effect of shifting
                                                   866 * the low-order byte out of the target precision representation and
                                                   867 * into the high-order portion of the bits that control rounding.  The
                                                   868 * input low-order byte will be determined by the rounding desired.
                                                   869 *
                                                   870 ***********************************************************************


                                                   872 ***********************************************************************
                                                   873 *
                                                   874 * First input test data set, to test operations using non-finite or
                                                   875 * zero inputs.  Member values chosen to validate Figure 19-23 on page
                                                   876 * 19-28 of SA22-7832-10.  Each value in this table is tested against
                                                   877 * every other value in the table.  Eight entries means 64 result sets.
                                                   878 *
                                                   879 ***********************************************************************


000007A0                                           881 SBFPNFIN DS    0F                Inputs for short BFP non-finite tests
000007A0  FF800000                                 882          DC    X'FF800000'         -inf
000007A4  C0000000                                 883          DC    X'C0000000'         -2.0
000007A8  80000000                                 884          DC    X'80000000'         -0
000007AC  00000000                                 885          DC    X'00000000'         +0
000007B0  40000000                                 886          DC    X'40000000'         +2.0
000007B4  7F800000                                 887          DC    X'7F800000'         +inf
000007B8  FFCB0000                                 888          DC    X'FFCB0000'         -QNaN
000007BC  7F8A0000                                 889          DC    X'7F8A0000'         +SNaN
                              00000008  00000001   890 SBFPNFCT EQU   (*-SBFPNFIN)/4    Count of short BFP in list



                                                   892 ***********************************************************************
                                                   893 *
                                                   894 * Second input test data set.  These are finite pairs intended to
                                                   895 * trigger overflow, underflow, and inexact exceptions.  Each pair is
                                                   896 * added twice, once non-trappable and once trappable.  Trappable
                                                   897 * overflow or underflow yields a scaled result.  Trappable inexact
                                                   898 * will show whether the Incremented DXC code is returned.
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    23

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   899 *
                                                   900 * The following test cases are required:
                                                   901 * 1. Overflow
                                                   902 * 2. Underflow - normal inputs
                                                   903 * 3. Underflow - subnormal inputs
                                                   904 * 4. Normal - from subnormal inputs
                                                   905 * 5. Inexact - incremented
                                                   906 * 6. Inexact - truncated
                                                   907 *
                                                   908 ***********************************************************************


000007C0                                           910 SBFPIN   DS    0F                Inputs for short BFP finite tests
                                                   911 *
                                                   912 * Overflow on subtraction
                                                   913 *
000007C0  7F7FFFFF                                 914          DC    X'7F7FFFFF'         +Nmax
000007C4  FF7FFFFF                                 915          DC    X'FF7FFFFF'         -Nmax
                                                   916 *
                                                   917 * Underflow from product of normals.  We will multiply a small normal
                                                   918 * by a slightly smaller normal to generate a subnormal.
                                                   919 *
000007C8  00FFFFFF                                 920          DC    X'00FFFFFF'         Very small normal number
000007CC  00800000                                 921          DC    X'00800000'         Smaller normal (+Nmin)
                                                   922 *
                                                   923 * Underflow from the product of subnormals.
                                                   924 *
000007D0  00040000                                 925          DC    X'00040000'         Subnormal, < +Dmax
000007D4  00000F0F                                 926          DC    X'00000F0F'         Smaller subnormal
                                                   927 *
                                                   928 * We cannot generate a normal result from product of subnormals
                                                   929 * because the result will be smaller than both the multiplicand and the
                                                   930 * multiplier.  So we'll try multiplying +Dmax by 2.  The result should
                                                   931 * be +Nmin
                                                   932 *
000007D8  007FFFFF                                 933          DC    X'007FFFFF'         +Dmax
000007DC  40000000                                 934          DC    X'40000000'         +2.0
                                                   935 *
                                                   936 * Multiply a value from 1.0 such that the added digits are to the right
                                                   937 * of the right-most bit in the stored significand. The result will be
                                                   938 * inexact, and incremented will be determined by the value of the
                                                   939 * bits in the multiplier.
                                                   940 *
000007E0  3F80000C                                 941          DC    X'3F80000C'   Multiplicand 1.000001430511474609375
000007E4  3F880000                                 942          DC    X'3F880000'   Multiplier 1.0625  (1/16)
                                                   943 *..nearest is away from zero, incremented.
                                                   944 *
000007E8  3F800007                                 945          DC    X'3F800007'   Multiplicand 1.00000083446502685546875
000007EC  3F880000                                 946          DC    X'3F880000'   Multiplier 1.0625   (1/16)
                                                   947 *..nearest is toward zero, truncated
                                                   948 *
                              00000006  00000001   949 SBFPCT   EQU   (*-SBFPIN)/4/2    Count of short BFP in list



                                                   951 ***********************************************************************
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    24

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   952 *
                                                   953 * Third input test data set.  These are finite pairs intended to
                                                   954 * test all combinations of rounding mode for the product and the
                                                   955 * remainder.  Values are chosen to create a requirement to round
                                                   956 * to the target precision after the computation and to generate
                                                   957 * varying results depending on the rounding mode in the FPCR.
                                                   958 *
                                                   959 * The result set will have cases that represent each of the following
                                                   960 *
                                                   961 * 1. Positive, nearest magnitude is toward zero.
                                                   962 * 2. Negative, nearest magnitude is toward zero.
                                                   963 * 3. Positive, nearest magnitude is away from zero.
                                                   964 * 4. Negative, nearest magnitude is away from zero.
                                                   965 * 5. Positive, tie, nearest even has greater magnitude
                                                   966 * 6. Negative, tie, nearest even has greater magnitude
                                                   967 * 7. Positive, tie, nearest even has lower magnitude
                                                   968 * 8. Negative, tie, nearest even has lower magnitude
                                                   969 *
                                                   970 * Round For Shorter precision correctness can be determined from the
                                                   971 * above test cases.
                                                   972 *
                                                   973 ***********************************************************************


000007F0                                           975 SBFPINRM DS    0F                Inputs for short BFP rounding testing
                                                   976 *
                                                   977 * Multiply a value from 1.0 such that the added digits are to the right
                                                   978 * of the right-most bit in the stored significand. The result will be
                                                   979 * inexact, and incremented will be determined by the value of the
                                                   980 * bits in the multiplier.
                                                   981 *
000007F0  3F800007                                 982          DC    X'3F800007'   Multiplicand +1.00000083446502685546875
000007F4  3F880000                                 983          DC    X'3F880000'   Multiplier 1.0625  (1/16)
000007F8  BF800007                                 984          DC    X'BF800007'   Multiplicand -1.00000083446502685546875
000007FC  3F880000                                 985          DC    X'3F880000'   Multiplier 1.0625  (1/16)
                                                   986 *..nearest is toward zero, truncated
                                                   987 *
00000800  3F80000C                                 988          DC    X'3F80000C'   Multiplicand +1.000001430511474609375
00000804  3F880000                                 989          DC    X'3F880000'   Multiplier 1.0625  (1/16)
00000808  BF80000C                                 990          DC    X'BF80000C'   Multiplicand -1.000001430511474609375
0000080C  3F880000                                 991          DC    X'3F880000'   Multiplier 1.0625  (1/16)
                                                   992 *..nearest is away from zero, incremented.
                                                   993 *
00000810  3F800008                                 994          DC    X'3F800008'   Multiplicand +1.000000476837158203125
00000814  3F880000                                 995          DC    X'3F880000'   Multiplier 1.0625  (1/16)
00000818  BF800008                                 996          DC    X'BF800008'   Multiplicand -1.000000476837158203125
0000081C  3F880000                                 997          DC    X'3F880000'   Multiplier 1.0625  (1/16)
                                                   998 *..nearest is a tie, nearest even has lower magnitude
                                                   999 *
00000820  3F800018                                1000          DC    X'3F800018'   Multiplicand +1.000002384185791015625
00000824  3F880000                                1001          DC    X'3F880000'   Multiplier 1.0625  (1/16)
00000828  BF800018                                1002          DC    X'BF800018'   Multiplicand -1.000002384185791015625
0000082C  3F880000                                1003          DC    X'3F880000'   Multiplier 1.0625  (1/16)
                                                  1004 *..nearest is a tie, nearest even has greater magnitude
                                                  1005 *
                              00000008  00000001  1006 SBFPRMCT EQU   (*-SBFPINRM)/4/2  Count of short BFP rounding tests
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    25

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1008 ***********************************************************************
                                                  1009 *
                                                  1010 * Long BFP test data sets for Add testing.
                                                  1011 *
                                                  1012 * The first test data set is used for tests of basic functionality,
                                                  1013 * NaN propagation, and results from operations involving other than
                                                  1014 * finite numbers.
                                                  1015 *
                                                  1016 * The second test data set is used for testing boundary conditions
                                                  1017 * using two finite non-zero values.  Each possible type of result
                                                  1018 * (normal, scaled, etc) is created by members of this test data set.
                                                  1019 *
                                                  1020 * The third test data set is used for exhaustive testing of final
                                                  1021 * results across the five rounding modes available for the Add
                                                  1022 * instruction.
                                                  1023 *
                                                  1024 * See the Short BFP test cases header for a discussion of test case
                                                  1025 * selection for rounding mode test case values.
                                                  1026 *
                                                  1027 ***********************************************************************


                                                  1029 ***********************************************************************
                                                  1030 *
                                                  1031 * First input test data set, to test operations using non-finite or
                                                  1032 * zero inputs.  Member values chosen to validate Figure 19-23 on page
                                                  1033 * 19-28 of SA22-7832-10.  Each value in this table is tested against
                                                  1034 * every other value in the table.  Eight entries means 64 result sets.
                                                  1035 *
                                                  1036 ***********************************************************************


00000830                                          1038 LBFPNFIN DS    0F                Inputs for long BFP testing
00000830  FFF00000 00000000                       1039          DC    X'FFF0000000000000'         -inf
00000838  C0000000 00000000                       1040          DC    X'C000000000000000'         -2.0
00000840  80000000 00000000                       1041          DC    X'8000000000000000'         -0
00000848  00000000 00000000                       1042          DC    X'0000000000000000'         +0
00000850  40000000 00000000                       1043          DC    X'4000000000000000'         +2.0
00000858  7FF00000 00000000                       1044          DC    X'7FF0000000000000'         +inf
00000860  FFF8B000 00000000                       1045          DC    X'FFF8B00000000000'         -QNaN
00000868  7FF0A000 00000000                       1046          DC    X'7FF0A00000000000'         +SNaN
                              00000008  00000001  1047 LBFPNFCT EQU   (*-LBFPNFIN)/8     Count of long BFP in list



                                                  1049 ***********************************************************************
                                                  1050 *
                                                  1051 * Second input test data set.  These are finite pairs intended to
                                                  1052 * trigger overflow, underflow, and inexact exceptions.  Each pair is
                                                  1053 * added twice, once non-trappable and once trappable.  Trappable
                                                  1054 * overflow or underflow yields a scaled result.  Trappable inexact
                                                  1055 * will show whether the Incremented DXC code is returned.
                                                  1056 *
                                                  1057 * The following test cases are required:
                                                  1058 * 1. Overflow
                                                  1059 * 2. Underflow - normal inputs
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    26

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1060 * 3. Underflow - subnormal inputs
                                                  1061 * 4. Normal - from subnormal inputs
                                                  1062 * 5. Inexact - incremented
                                                  1063 * 6. Inexact - truncated
                                                  1064 *
                                                  1065 ***********************************************************************


00000870                                          1067 LBFPIN   DS    0D                Inputs for long BFP finite tests
                                                  1068 *
                                                  1069 * Overflow on multiplication
                                                  1070 *
00000870  7FEFFFFF FFFFFFFF                       1071          DC    X'7FEFFFFFFFFFFFFF'  +Nmax
00000878  FFEFFFFF FFFFFFFF                       1072          DC    X'FFEFFFFFFFFFFFFF'  +Nmax
                                                  1073 *
                                                  1074 * Underflow from product of normals.  We wil multiply a small
                                                  1075 * normal by a slightly smaller normal to generate a subnormal.
                                                  1076 *
00000880  001FFFFF FFFFFFFF                       1077          DC    X'001FFFFFFFFFFFFF'  Very small normal number
00000888  00100000 00000000                       1078          DC    X'0010000000000000'  Smaller normal negative
                                                  1079 *
                                                  1080 * Underflow from product of subnormals.
                                                  1081 *
00000890  00080000 00000000                       1082          DC    X'0008000000000000'  Subnormal, < +Dmax
00000898  0000F0F0 00000000                       1083          DC    X'0000F0F000000000'  Smaller subnormal
                                                  1084 *
                                                  1085 * We cannot generate a normal result from product of subnormals
                                                  1086 * because the result will be smaller than both the multiplicand and the
                                                  1087 * multiplier.  So we'll try multiplying +Dmax by 2.  The result should
                                                  1088 * be +Nmin
                                                  1089 *
000008A0  000FFFFF FFFFFFFF                       1090          DC    X'000FFFFFFFFFFFFF'  +Dmax
000008A8  40000000 00000000                       1091          DC    X'4000000000000000'  +2.0, result should be normal
                                                  1092 *
                                                  1093 * Multiply a value from 1.0 such that the added digits are to the right
                                                  1094 * of the right-most bit in the stored significand. The result will be
                                                  1095 * inexact, and incremented will be determined by the value of the
                                                  1096 * bits in the multiplier.
                                                  1097 *
000008B0  3FF00000 0000000C                       1098          DC    X'3FF000000000000C'  Multiplicand +1, aka 1.0b0
000008B8  3FF10000 00000000                       1099          DC    X'3FF1000000000000'  Multiplier 1.0625  (1/16)
                                                  1100 *..nearest is away from zero, incremented.
                                                  1101 *
000008C0  3FF00000 00000007                       1102          DC    X'3FF0000000000007'  Multiplicand +1, aka 1.0b0
000008C8  3FF10000 00000000                       1103          DC    X'3FF1000000000000'  Multiplier 1.0625  (1/16)
                                                  1104 *..nearest is toward zero, truncated.
                                                  1105 *
                              00000006  00000001  1106 LBFPCT   EQU   (*-LBFPIN)/8/2   Count of long BFP in list



                                                  1108 ***********************************************************************
                                                  1109 *
                                                  1110 * Third input test data set.  These are finite pairs intended to
                                                  1111 * test all combinations of rounding mode for the product and the
                                                  1112 * remainder.  Values are chosen to create a requirement to round
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    27

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1113 * to the target precision after the computation and to generate
                                                  1114 * varying results depending on the rounding mode in the FPCR.
                                                  1115 *
                                                  1116 * The result set will have cases that represent each of the following
                                                  1117 *
                                                  1118 * 1. Positive, nearest magnitude is toward zero.
                                                  1119 * 2. Negative, nearest magnitude is toward zero.
                                                  1120 * 3. Positive, nearest magnitude is away from zero.
                                                  1121 * 4. Negative, nearest magnitude is away from zero.
                                                  1122 * 5. Positive, tie, nearest even has greater magnitude
                                                  1123 * 6. Negative, tie, nearest even has greater magnitude
                                                  1124 * 7. Positive, tie, nearest even has lower magnitude
                                                  1125 * 8. Negative, tie, nearest even has lower magnitude
                                                  1126 *
                                                  1127 * Round For Shorter precision correctness can be determined from the
                                                  1128 * above test cases.
                                                  1129 *
                                                  1130 ***********************************************************************


000008D0                                          1132 LBFPINRM DS    0F
                                                  1133 *
                                                  1134 * Multiply a value from 1.0 such that the added digits are to the right
                                                  1135 * of the right-most bit in the stored significand. The result will be
                                                  1136 * inexact, and incremented will be determined by the value of the
                                                  1137 * bits in the multiplier.
                                                  1138 *
000008D0  3FF00000 00000007                       1139          DC    X'3FF0000000000007'  Multiplicand
000008D8  3FF10000 00000000                       1140          DC    X'3FF1000000000000'  Multiplier 1.0625  (1/16)
000008E0  BFF00000 00000007                       1141          DC    X'BFF0000000000007'  Multiplicand
000008E8  3FF10000 00000000                       1142          DC    X'3FF1000000000000'  Multiplier 1.0625  (1/16)
                                                  1143 *..nearest is toward zero, truncated.
                                                  1144 *
000008F0  3FF00000 0000000C                       1145          DC    X'3FF000000000000C'  Multiplicand
000008F8  3FF10000 00000000                       1146          DC    X'3FF1000000000000'  Multiplier 1.0625  (1/16)
00000900  BFF00000 0000000C                       1147          DC    X'BFF000000000000C'  Multiplicand
00000908  3FF10000 00000000                       1148          DC    X'3FF1000000000000'  Multiplier 1.0625  (1/16)
                                                  1149 *..nearest is away from zero, incremented.
                                                  1150 *
00000910  3FF00000 00000008                       1151          DC    X'3FF0000000000008'  Multiplicand
00000918  3FF10000 00000000                       1152          DC    X'3FF1000000000000'  Multiplier 1.0625  (1/16)
00000920  BFF00000 00000008                       1153          DC    X'BFF0000000000008'  Multiplicand
00000928  3FF10000 00000000                       1154          DC    X'3FF1000000000000'  Multiplier 1.0625  (1/16)
                                                  1155 *..nearest is a tie, nearest even has lower magnitude
                                                  1156 *
00000930  3FF00000 00000018                       1157          DC    X'3FF0000000000018'  Multiplicand +1, aka +1.0b0
00000938  3FF10000 00000000                       1158          DC    X'3FF1000000000000'  Multiplier 1.0625  (1/16)
00000940  BFF00000 00000018                       1159          DC    X'BFF0000000000018'  Multiplicand -1, aka -1.0b0
00000948  3FF10000 00000000                       1160          DC    X'3FF1000000000000'  Multiplier 1.0625  (1/16)
                                                  1161 *..nearest is a tie, nearest even has greater magnitude
                                                  1162 *
                              00000008  00000001  1163 LBFPRMCT EQU   (*-LBFPINRM)/8/2  Count of long BFP rounding tests
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    28

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1165 ***********************************************************************
                                                  1166 *
                                                  1167 * Extended BFP test data sets for Add testing.
                                                  1168 *
                                                  1169 * The first test data set is used for tests of basic functionality,
                                                  1170 * NaN propagation, and results from operations involving other than
                                                  1171 * finite numbers.
                                                  1172 *
                                                  1173 * The second test data set is used for testing boundary conditions
                                                  1174 * using two finite non-zero values.  Each possible type of result
                                                  1175 * (normal, scaled, etc) is created by members of this test data set.
                                                  1176 *
                                                  1177 * The third test data set is used for exhaustive testing of final
                                                  1178 * results across the five rounding modes available for the Add
                                                  1179 * instruction.
                                                  1180 *
                                                  1181 * See the Short BFP test cases header for a discussion of test case
                                                  1182 * selection for rounding mode test case values.
                                                  1183 *
                                                  1184 ***********************************************************************


                                                  1186 ***********************************************************************
                                                  1187 *
                                                  1188 * First input test data set, to test operations using non-finite or
                                                  1189 * zero inputs.  Member values chosen to validate Figure 19-23 on page
                                                  1190 * 19-28 of SA22-7832-10.  Each value in this table is tested against
                                                  1191 * every other value in the table.  Eight entries means 64 result sets.
                                                  1192 *
                                                  1193 ***********************************************************************


00000950                                          1195 XBFPNFIN DS    0F                Inputs for extended BFP testing
00000950  FFFF0000 00000000                       1196          DC    X'FFFF0000000000000000000000000000'   -inf
00000960  C0000000 00000000                       1197          DC    X'C0000000000000000000000000000000'   -2.0
00000970  80000000 00000000                       1198          DC    X'80000000000000000000000000000000'   -0
00000980  00000000 00000000                       1199          DC    X'00000000000000000000000000000000'   +0
00000990  40000000 00000000                       1200          DC    X'40000000000000000000000000000000'   +2.0
000009A0  7FFF0000 00000000                       1201          DC    X'7FFF0000000000000000000000000000'   +inf
000009B0  FFFF8B00 00000000                       1202          DC    X'FFFF8B00000000000000000000000000'   -QNaN
000009C0  7FFF0A00 00000000                       1203          DC    X'7FFF0A00000000000000000000000000'   +SNaN
                              00000008  00000001  1204 XBFPNFCT EQU   (*-XBFPNFIN)/16     Count of extended BFP in list



                                                  1206 ***********************************************************************
                                                  1207 *
                                                  1208 * Second input test data set.  These are finite pairs intended to
                                                  1209 * trigger overflow, underflow, and inexact exceptions.  Each pair is
                                                  1210 * added twice, once non-trappable and once trappable.  Trappable
                                                  1211 * overflow or underflow yields a scaled result.  Trappable inexact
                                                  1212 * will show whether the Incremented DXC code is returned.
                                                  1213 *
                                                  1214 * The following test cases are required:
                                                  1215 * The following test cases are required:
                                                  1216 * 1. Overflow
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    29

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1217 * 2. Underflow - normal inputs
                                                  1218 * 3. Underflow - subnormal inputs
                                                  1219 * 4. Normal - from subnormal inputs
                                                  1220 * 5. Inexact - incremented
                                                  1221 * 6. Inexact - truncated
                                                  1222 *
                                                  1223 ***********************************************************************


000009D0                                          1225 XBFPIN   DS    0F                Inputs for extended BFP finite tests
                                                  1226 *
                                                  1227 * Overflow on subtraction
                                                  1228 *
000009D0  7FFEFFFF FFFFFFFF                       1229          DC    X'7FFEFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  +Nmax
000009E0  FFFEFFFF FFFFFFFF                       1230          DC    X'FFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  +Nmax
                                                  1231 *
                                                  1232 * Underflow from product of normals.  We will multiply a small
                                                  1233 * normal by a slightly smaller normal to generate a subnormal.
                                                  1234 *
000009F0  0001FFFF FFFFFFFF                       1235          DC    X'0001FFFFFFFFFFFFFFFFFFFFFFFFFFFF'  Very small normal
00000A00  00010000 00000000                       1236          DC    X'00010000000000000000000000000000'  Smaller normal
                                                  1237 *
                                                  1238 * Underflow from product of subnormals.
                                                  1239 *
00000A10  00008000 00000000                       1240          DC    X'00008000000000000000000000000000'  Subnormal, < +Dmax
00000A20  00000F0F 00000000                       1241          DC    X'00000F0F000000000000000000000000'  Smaller subnormal
                                                  1242 *
                                                  1243 * We cannot generate a normal result from product of subnormals
                                                  1244 * because the result will be smaller than both the multiplicand and the
                                                  1245 * multiplier.  So we'll try multiplying +Dmax by 2.  The result should
                                                  1246 * be +Nmin
                                                  1247 *
00000A30  0000FFFF FFFFFFFF                       1248          DC    X'0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF'  +Dmax
00000A40  40000000 00000000                       1249          DC    X'40000000000000000000000000000001'  +2.0,
                                                  1250 *                                   ...result will be normal
                                                  1251 *
                                                  1252 * Multiply a value from 1.0 such that the added digits are to the right
                                                  1253 * of the right-most bit in the stored significand. The result will be
                                                  1254 * inexact, and incremented will be determined by the value of the
                                                  1255 * bits in the multiplier.
                                                  1256 *
00000A50  3FFF0000 00000000                       1257          DC    X'3FFF000000000000000000000000000C'  +1, aka 1.0b0
00000A60  3FFF1000 00000000                       1258          DC    X'3FFF1000000000000000000000000000'  1.0625
                                                  1259 *..nearest is away from zero, incremented.
                                                  1260 *
00000A70  3FFF0000 00000000                       1261          DC    X'3FFF0000000000000000000000000007'  +1, aka 1.0b0
00000A80  3FFF1000 00000000                       1262          DC    X'3FFF1000000000000000000000000000'  1.0625
                                                  1263 *..nearest is toward zero, truncated
                                                  1264 *
                              00000006  00000001  1265 XBFPCT   EQU   (*-XBFPIN)/16/2   Count of extended BFP in list



                                                  1267 ***********************************************************************
                                                  1268 *
                                                  1269 * Third input test data set.  These are finite pairs intended to
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    30

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1270 * test all combinations of rounding mode for the product and the
                                                  1271 * remainder.  Values are chosen to create a requirement to round
                                                  1272 * to the target precision after the computation and to generate
                                                  1273 * varying results depending on the rounding mode in the FPCR.
                                                  1274 *
                                                  1275 * The result set will have cases that represent each of the following
                                                  1276 *
                                                  1277 * 1. Positive, nearest magnitude is toward zero.
                                                  1278 * 2. Negative, nearest magnitude is toward zero.
                                                  1279 * 3. Positive, nearest magnitude is away from zero.
                                                  1280 * 4. Negative, nearest magnitude is away from zero.
                                                  1281 * 5. Positive, tie, nearest even has greater magnitude
                                                  1282 * 6. Negative, tie, nearest even has greater magnitude
                                                  1283 * 7. Positive, tie, nearest even has lower magnitude
                                                  1284 * 8. Negative, tie, nearest even has lower magnitude
                                                  1285 *
                                                  1286 * Round For Shorter precision correctness can be determined from the
                                                  1287 * above test cases.
                                                  1288 *
                                                  1289 ***********************************************************************


00000A90                                          1291 XBFPINRM DS    0D
                                                  1292 *
                                                  1293 * Multiply a value from 1.0 such that the added digits are to the right
                                                  1294 * of the right-most bit in the stored significand. The result will be
                                                  1295 * inexact, and incremented will be determined by the value of the
                                                  1296 * bits in the multiplier.
                                                  1297 *
00000A90  3FFF0000 00000000                       1298          DC    X'3FFF0000000000000000000000000007'  +1, aka +1.0b0
00000AA0  3FFF1000 00000000                       1299          DC    X'3FFF1000000000000000000000000000'  1.0625
00000AB0  BFFF0000 00000000                       1300          DC    X'BFFF0000000000000000000000000007'  -1, aka -1.0b0
00000AC0  3FFF1000 00000000                       1301          DC    X'3FFF1000000000000000000000000000'  1.0625
                                                  1302 *..nearest is toward zero
                                                  1303 *
00000AD0  3FFF0000 00000000                       1304          DC    X'3FFF000000000000000000000000000C'  +1, aka +1.0b0
00000AE0  3FFF1000 00000000                       1305          DC    X'3FFF1000000000000000000000000000'  1.0625
00000AF0  BFFF0000 00000000                       1306          DC    X'BFFF000000000000000000000000000C'  -1, aka -1.0b0
00000B00  3FFF1000 00000000                       1307          DC    X'3FFF1000000000000000000000000000'  1.0625
                                                  1308 *..nearest is away from zero
                                                  1309 *
00000B10  3FFF0000 00000000                       1310          DC    X'3FFF0000000000000000000000000008'  +1, aka +1.0b0
00000B20  3FFF1000 00000000                       1311          DC    X'3FFF1000000000000000000000000000'  1.0625
00000B30  BFFF0000 00000000                       1312          DC    X'BFFF0000000000000000000000000008'  -1, aka -1.0b0
00000B40  3FFF1000 00000000                       1313          DC    X'3FFF1000000000000000000000000000'  1.0625
                                                  1314 *..nearest is a tie, nearest even has lower magnitude
                                                  1315 *
00000B50  3FFF0000 00000000                       1316          DC    X'3FFF0000000000000000000000000018'  +1, aka +1.0b0
00000B60  3FFF1000 00000000                       1317          DC    X'3FFF1000000000000000000000000000'  1.0625
00000B70  BFFF0000 00000000                       1318          DC    X'BFFF0000000000000000000000000018'  -1, aka -1.0b0
00000B80  3FFF1000 00000000                       1319          DC    X'3FFF1000000000000000000000000000'  1.0625
                                                  1320 *..nearest is a tie, nearest even has greater magnitude
                                                  1321 *
                              00000008  00000001  1322 XBFPRMCT EQU   (*-XBFPINRM)/16/2  Count of long BFP rounding tests
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    31

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1324 ***********************************************************************
                                                  1325 *                 ACTUAL results saved here
                                                  1326 ***********************************************************************
                                                  1327 *
                                                  1328 *               Locations for ACTUAL results
                                                  1329 *
                              00001000  00000001  1330 SBFPNFOT EQU   STRTLABL+X'1000'    Short non-finite BFP results
                                                  1331 *                                  ..room for 64 tests, 64 used
                              00001400  00000001  1332 SBFPNFFL EQU   STRTLABL+X'1400'    FPCR flags and DXC from short BFP
                                                  1333 *                                  ..room for 64 tests, 64 used
                                                  1334 *
                              00001800  00000001  1335 SBFPOUT  EQU   STRTLABL+X'1800'    Short BFP finite results
                                                  1336 *                                  ..room for 16 tests, 6 used
                              00001900  00000001  1337 SBFPFLGS EQU   STRTLABL+X'1900'    FPCR flags and DXC from short BFP
                                                  1338 *                                  ..room for 16 tests, 6 used
                                                  1339 *
                              00001A00  00000001  1340 SBFPRMO  EQU   STRTLABL+X'1A00'    Short BFP rounding mode test results
                                                  1341 *                                  ..Room for 16, 8 used.
                              00001D00  00000001  1342 SBFPRMOF EQU   STRTLABL+X'1D00'    Short BFP rounding mode FPCR results
                                                  1343 *                                  ..Room for 16, 8 used.
                                                  1344 *                                  ..next location starts at X'2000'
                                                  1345 *
                              00003000  00000001  1346 LBFPNFOT EQU   STRTLABL+X'3000'    Long non-finite BFP results
                                                  1347 *                                  ..room for 64 tests, 64 used
                              00003800  00000001  1348 LBFPNFFL EQU   STRTLABL+X'3800'    FPCR flags and DXC from long BFP
                                                  1349 *                                  ..room for 64 tests, 64 used
                                                  1350 *
                              00003C00  00000001  1351 LBFPOUT  EQU   STRTLABL+X'3C00'    Long BFP finite results
                                                  1352 *                                  ..room for 16 tests, 6 used
                              00003E00  00000001  1353 LBFPFLGS EQU   STRTLABL+X'3E00'    FPCR flags and DXC from long BFP
                                                  1354 *                                  ..room for 16 tests, 6 used
                                                  1355 *
                              00004000  00000001  1356 LBFPRMO  EQU   STRTLABL+X'4000'    Long BFP rounding mode test results
                                                  1357 *                                  ..Room for 16, 8 used.
                              00004500  00000001  1358 LBFPRMOF EQU   STRTLABL+X'4500'    Long BFP rounding mode FPCR results
                                                  1359 *                                  ..Room for 16, 8 used.
                                                  1360 *                                  ..next location starts at X'4800'
                                                  1361 *
                              00005000  00000001  1362 XBFPNFOT EQU   STRTLABL+X'5000'    Extended non-finite BFP results
                                                  1363 *                                  ..room for 64 tests, 64 used
                              00005800  00000001  1364 XBFPNFFL EQU   STRTLABL+X'5800'    FPCR flags and DXC from ext'd BFP
                                                  1365 *                                  ..room for 64 tests, 64 used
                                                  1366 *
                              00005C00  00000001  1367 XBFPOUT  EQU   STRTLABL+X'5C00'    Extended BFP finite results
                                                  1368 *                                  ..room for 16 tests, 6 used
                              00005E00  00000001  1369 XBFPFLGS EQU   STRTLABL+X'5E00'    FPCR flags and DXC from ext'd BFP
                                                  1370 *                                  ..room for 16 tests, 6 used
                                                  1371 *
                              00006000  00000001  1372 XBFPRMO  EQU   STRTLABL+X'6000'    Ext'd BFP rounding mode test results
                                                  1373 *                                  ..Room for 16, 8 used.
                              00006500  00000001  1374 XBFPRMOF EQU   STRTLABL+X'6500'    Ext'd BFP rounding mode FPCR results
                                                  1375 *                                  ..Room for 16, 8 used.
                                                  1376 *                                  ..next location starts at X'6800'
                                                  1377 *
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    32

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1379 ***********************************************************************
                                                  1380 *                    EXPECTED results
                                                  1381 ***********************************************************************
                                                  1382 *
00000B90                      00000B90  00007000  1383          ORG   STRTLABL+X'7000'   (past end of actual results)
                                                  1384 *
                              00007000  00000001  1385 SBFPNFOT_GOOD EQU *
00007000  D4C5C5C2 D961D4C5                       1386  DC CL48'MEEBR/MEEB NF -inf/-inf'
00007030  7F800000 7F800000                       1387  DC XL16'7F8000007F8000007F8000007F800000'
00007040  D4C5C5C2 D961D4C5                       1388  DC CL48'MEEBR/MEEB NF -inf/-2.0'
00007070  7F800000 7F800000                       1389  DC XL16'7F8000007F8000007F8000007F800000'
00007080  D4C5C5C2 D961D4C5                       1390  DC CL48'MEEBR/MEEB NF -inf/-0'
000070B0  7FC00000 FF800000                       1391  DC XL16'7FC00000FF8000007FC00000FF800000'
000070C0  D4C5C5C2 D961D4C5                       1392  DC CL48'MEEBR/MEEB NF -inf/+0'
000070F0  7FC00000 FF800000                       1393  DC XL16'7FC00000FF8000007FC00000FF800000'
00007100  D4C5C5C2 D961D4C5                       1394  DC CL48'MEEBR/MEEB NF -inf/+2.0'
00007130  FF800000 FF800000                       1395  DC XL16'FF800000FF800000FF800000FF800000'
00007140  D4C5C5C2 D961D4C5                       1396  DC CL48'MEEBR/MEEB NF -inf/+inf'
00007170  FF800000 FF800000                       1397  DC XL16'FF800000FF800000FF800000FF800000'
00007180  D4C5C5C2 D961D4C5                       1398  DC CL48'MEEBR/MEEB NF -inf/-QNaN'
000071B0  FFCB0000 FFCB0000                       1399  DC XL16'FFCB0000FFCB0000FFCB0000FFCB0000'
000071C0  D4C5C5C2 D961D4C5                       1400  DC CL48'MEEBR/MEEB NF -inf/+SNaN'
000071F0  7FCA0000 FF800000                       1401  DC XL16'7FCA0000FF8000007FCA0000FF800000'
00007200  D4C5C5C2 D961D4C5                       1402  DC CL48'MEEBR/MEEB NF -2.0/-inf'
00007230  7F800000 7F800000                       1403  DC XL16'7F8000007F8000007F8000007F800000'
00007240  D4C5C5C2 D961D4C5                       1404  DC CL48'MEEBR/MEEB NF -2.0/-2.0'
00007270  40800000 40800000                       1405  DC XL16'40800000408000004080000040800000'
00007280  D4C5C5C2 D961D4C5                       1406  DC CL48'MEEBR/MEEB NF -2.0/-0'
000072B0  00000000 00000000                       1407  DC XL16'00000000000000000000000000000000'
000072C0  D4C5C5C2 D961D4C5                       1408  DC CL48'MEEBR/MEEB NF -2.0/+0'
000072F0  80000000 80000000                       1409  DC XL16'80000000800000008000000080000000'
00007300  D4C5C5C2 D961D4C5                       1410  DC CL48'MEEBR/MEEB NF -2.0/+2.0'
00007330  C0800000 C0800000                       1411  DC XL16'C0800000C0800000C0800000C0800000'
00007340  D4C5C5C2 D961D4C5                       1412  DC CL48'MEEBR/MEEB NF -2.0/+inf'
00007370  FF800000 FF800000                       1413  DC XL16'FF800000FF800000FF800000FF800000'
00007380  D4C5C5C2 D961D4C5                       1414  DC CL48'MEEBR/MEEB NF -2.0/-QNaN'
000073B0  FFCB0000 FFCB0000                       1415  DC XL16'FFCB0000FFCB0000FFCB0000FFCB0000'
000073C0  D4C5C5C2 D961D4C5                       1416  DC CL48'MEEBR/MEEB NF -2.0/+SNaN'
000073F0  7FCA0000 C0000000                       1417  DC XL16'7FCA0000C00000007FCA0000C0000000'
00007400  D4C5C5C2 D961D4C5                       1418  DC CL48'MEEBR/MEEB NF -0/-inf'
00007430  7FC00000 80000000                       1419  DC XL16'7FC00000800000007FC0000080000000'
00007440  D4C5C5C2 D961D4C5                       1420  DC CL48'MEEBR/MEEB NF -0/-2.0'
00007470  00000000 00000000                       1421  DC XL16'00000000000000000000000000000000'
00007480  D4C5C5C2 D961D4C5                       1422  DC CL48'MEEBR/MEEB NF -0/-0'
000074B0  00000000 00000000                       1423  DC XL16'00000000000000000000000000000000'
000074C0  D4C5C5C2 D961D4C5                       1424  DC CL48'MEEBR/MEEB NF -0/+0'
000074F0  80000000 80000000                       1425  DC XL16'80000000800000008000000080000000'
00007500  D4C5C5C2 D961D4C5                       1426  DC CL48'MEEBR/MEEB NF -0/+2.0'
00007530  80000000 80000000                       1427  DC XL16'80000000800000008000000080000000'
00007540  D4C5C5C2 D961D4C5                       1428  DC CL48'MEEBR/MEEB NF -0/+inf'
00007570  7FC00000 80000000                       1429  DC XL16'7FC00000800000007FC0000080000000'
00007580  D4C5C5C2 D961D4C5                       1430  DC CL48'MEEBR/MEEB NF -0/-QNaN'
000075B0  FFCB0000 FFCB0000                       1431  DC XL16'FFCB0000FFCB0000FFCB0000FFCB0000'
000075C0  D4C5C5C2 D961D4C5                       1432  DC CL48'MEEBR/MEEB NF -0/+SNaN'
000075F0  7FCA0000 80000000                       1433  DC XL16'7FCA0000800000007FCA000080000000'
00007600  D4C5C5C2 D961D4C5                       1434  DC CL48'MEEBR/MEEB NF +0/-inf'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    33

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00007630  7FC00000 00000000                       1435  DC XL16'7FC00000000000007FC0000000000000'
00007640  D4C5C5C2 D961D4C5                       1436  DC CL48'MEEBR/MEEB NF +0/-2.0'
00007670  80000000 80000000                       1437  DC XL16'80000000800000008000000080000000'
00007680  D4C5C5C2 D961D4C5                       1438  DC CL48'MEEBR/MEEB NF +0/-0'
000076B0  80000000 80000000                       1439  DC XL16'80000000800000008000000080000000'
000076C0  D4C5C5C2 D961D4C5                       1440  DC CL48'MEEBR/MEEB NF +0/+0'
000076F0  00000000 00000000                       1441  DC XL16'00000000000000000000000000000000'
00007700  D4C5C5C2 D961D4C5                       1442  DC CL48'MEEBR/MEEB NF +0/+2.0'
00007730  00000000 00000000                       1443  DC XL16'00000000000000000000000000000000'
00007740  D4C5C5C2 D961D4C5                       1444  DC CL48'MEEBR/MEEB NF +0/+inf'
00007770  7FC00000 00000000                       1445  DC XL16'7FC00000000000007FC0000000000000'
00007780  D4C5C5C2 D961D4C5                       1446  DC CL48'MEEBR/MEEB NF +0/-QNaN'
000077B0  FFCB0000 FFCB0000                       1447  DC XL16'FFCB0000FFCB0000FFCB0000FFCB0000'
000077C0  D4C5C5C2 D961D4C5                       1448  DC CL48'MEEBR/MEEB NF +0/+SNaN'
000077F0  7FCA0000 00000000                       1449  DC XL16'7FCA0000000000007FCA000000000000'
00007800  D4C5C5C2 D961D4C5                       1450  DC CL48'MEEBR/MEEB NF +2.0/-inf'
00007830  FF800000 FF800000                       1451  DC XL16'FF800000FF800000FF800000FF800000'
00007840  D4C5C5C2 D961D4C5                       1452  DC CL48'MEEBR/MEEB NF +2.0/-2.0'
00007870  C0800000 C0800000                       1453  DC XL16'C0800000C0800000C0800000C0800000'
00007880  D4C5C5C2 D961D4C5                       1454  DC CL48'MEEBR/MEEB NF +2.0/-0'
000078B0  80000000 80000000                       1455  DC XL16'80000000800000008000000080000000'
000078C0  D4C5C5C2 D961D4C5                       1456  DC CL48'MEEBR/MEEB NF +2.0/+0'
000078F0  00000000 00000000                       1457  DC XL16'00000000000000000000000000000000'
00007900  D4C5C5C2 D961D4C5                       1458  DC CL48'MEEBR/MEEB NF +2.0/+2.0'
00007930  40800000 40800000                       1459  DC XL16'40800000408000004080000040800000'
00007940  D4C5C5C2 D961D4C5                       1460  DC CL48'MEEBR/MEEB NF +2.0/+inf'
00007970  7F800000 7F800000                       1461  DC XL16'7F8000007F8000007F8000007F800000'
00007980  D4C5C5C2 D961D4C5                       1462  DC CL48'MEEBR/MEEB NF +2.0/-QNaN'
000079B0  FFCB0000 FFCB0000                       1463  DC XL16'FFCB0000FFCB0000FFCB0000FFCB0000'
000079C0  D4C5C5C2 D961D4C5                       1464  DC CL48'MEEBR/MEEB NF +2.0/+SNaN'
000079F0  7FCA0000 40000000                       1465  DC XL16'7FCA0000400000007FCA000040000000'
00007A00  D4C5C5C2 D961D4C5                       1466  DC CL48'MEEBR/MEEB NF +inf/-inf'
00007A30  FF800000 FF800000                       1467  DC XL16'FF800000FF800000FF800000FF800000'
00007A40  D4C5C5C2 D961D4C5                       1468  DC CL48'MEEBR/MEEB NF +inf/-2.0'
00007A70  FF800000 FF800000                       1469  DC XL16'FF800000FF800000FF800000FF800000'
00007A80  D4C5C5C2 D961D4C5                       1470  DC CL48'MEEBR/MEEB NF +inf/-0'
00007AB0  7FC00000 7F800000                       1471  DC XL16'7FC000007F8000007FC000007F800000'
00007AC0  D4C5C5C2 D961D4C5                       1472  DC CL48'MEEBR/MEEB NF +inf/+0'
00007AF0  7FC00000 7F800000                       1473  DC XL16'7FC000007F8000007FC000007F800000'
00007B00  D4C5C5C2 D961D4C5                       1474  DC CL48'MEEBR/MEEB NF +inf/+2.0'
00007B30  7F800000 7F800000                       1475  DC XL16'7F8000007F8000007F8000007F800000'
00007B40  D4C5C5C2 D961D4C5                       1476  DC CL48'MEEBR/MEEB NF +inf/+inf'
00007B70  7F800000 7F800000                       1477  DC XL16'7F8000007F8000007F8000007F800000'
00007B80  D4C5C5C2 D961D4C5                       1478  DC CL48'MEEBR/MEEB NF +inf/-QNaN'
00007BB0  FFCB0000 FFCB0000                       1479  DC XL16'FFCB0000FFCB0000FFCB0000FFCB0000'
00007BC0  D4C5C5C2 D961D4C5                       1480  DC CL48'MEEBR/MEEB NF +inf/+SNaN'
00007BF0  7FCA0000 7F800000                       1481  DC XL16'7FCA00007F8000007FCA00007F800000'
00007C00  D4C5C5C2 D961D4C5                       1482  DC CL48'MEEBR/MEEB NF -QNaN/-inf'
00007C30  FFCB0000 FFCB0000                       1483  DC XL16'FFCB0000FFCB0000FFCB0000FFCB0000'
00007C40  D4C5C5C2 D961D4C5                       1484  DC CL48'MEEBR/MEEB NF -QNaN/-2.0'
00007C70  FFCB0000 FFCB0000                       1485  DC XL16'FFCB0000FFCB0000FFCB0000FFCB0000'
00007C80  D4C5C5C2 D961D4C5                       1486  DC CL48'MEEBR/MEEB NF -QNaN/-0'
00007CB0  FFCB0000 FFCB0000                       1487  DC XL16'FFCB0000FFCB0000FFCB0000FFCB0000'
00007CC0  D4C5C5C2 D961D4C5                       1488  DC CL48'MEEBR/MEEB NF -QNaN/+0'
00007CF0  FFCB0000 FFCB0000                       1489  DC XL16'FFCB0000FFCB0000FFCB0000FFCB0000'
00007D00  D4C5C5C2 D961D4C5                       1490  DC CL48'MEEBR/MEEB NF -QNaN/+2.0'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    34

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00007D30  FFCB0000 FFCB0000                       1491  DC XL16'FFCB0000FFCB0000FFCB0000FFCB0000'
00007D40  D4C5C5C2 D961D4C5                       1492  DC CL48'MEEBR/MEEB NF -QNaN/+inf'
00007D70  FFCB0000 FFCB0000                       1493  DC XL16'FFCB0000FFCB0000FFCB0000FFCB0000'
00007D80  D4C5C5C2 D961D4C5                       1494  DC CL48'MEEBR/MEEB NF -QNaN/-QNaN'
00007DB0  FFCB0000 FFCB0000                       1495  DC XL16'FFCB0000FFCB0000FFCB0000FFCB0000'
00007DC0  D4C5C5C2 D961D4C5                       1496  DC CL48'MEEBR/MEEB NF -QNaN/+SNaN'
00007DF0  7FCA0000 FFCB0000                       1497  DC XL16'7FCA0000FFCB00007FCA0000FFCB0000'
00007E00  D4C5C5C2 D961D4C5                       1498  DC CL48'MEEBR/MEEB NF +SNaN/-inf'
00007E30  7FCA0000 7F8A0000                       1499  DC XL16'7FCA00007F8A00007FCA00007F8A0000'
00007E40  D4C5C5C2 D961D4C5                       1500  DC CL48'MEEBR/MEEB NF +SNaN/-2.0'
00007E70  7FCA0000 7F8A0000                       1501  DC XL16'7FCA00007F8A00007FCA00007F8A0000'
00007E80  D4C5C5C2 D961D4C5                       1502  DC CL48'MEEBR/MEEB NF +SNaN/-0'
00007EB0  7FCA0000 7F8A0000                       1503  DC XL16'7FCA00007F8A00007FCA00007F8A0000'
00007EC0  D4C5C5C2 D961D4C5                       1504  DC CL48'MEEBR/MEEB NF +SNaN/+0'
00007EF0  7FCA0000 7F8A0000                       1505  DC XL16'7FCA00007F8A00007FCA00007F8A0000'
00007F00  D4C5C5C2 D961D4C5                       1506  DC CL48'MEEBR/MEEB NF +SNaN/+2.0'
00007F30  7FCA0000 7F8A0000                       1507  DC XL16'7FCA00007F8A00007FCA00007F8A0000'
00007F40  D4C5C5C2 D961D4C5                       1508  DC CL48'MEEBR/MEEB NF +SNaN/+inf'
00007F70  7FCA0000 7F8A0000                       1509  DC XL16'7FCA00007F8A00007FCA00007F8A0000'
00007F80  D4C5C5C2 D961D4C5                       1510  DC CL48'MEEBR/MEEB NF +SNaN/-QNaN'
00007FB0  7FCA0000 7F8A0000                       1511  DC XL16'7FCA00007F8A00007FCA00007F8A0000'
00007FC0  D4C5C5C2 D961D4C5                       1512  DC CL48'MEEBR/MEEB NF +SNaN/+SNaN'
00007FF0  7FCA0000 7F8A0000                       1513  DC XL16'7FCA00007F8A00007FCA00007F8A0000'
                              00000040  00000001  1514 SBFPNFOT_NUM EQU (*-SBFPNFOT_GOOD)/64
                                                  1515 *
                                                  1516 *
                              00008000  00000001  1517 SBFPNFFL_GOOD EQU *
00008000  D4C5C5C2 D961D4C5                       1518  DC CL48'MEEBR/MEEB NF -inf/-inf FPCR'
00008030  00000000 F8000000                       1519  DC XL16'00000000F800000000000000F8000000'
00008040  D4C5C5C2 D961D4C5                       1520  DC CL48'MEEBR/MEEB NF -inf/-2.0 FPCR'
00008070  00000000 F8000000                       1521  DC XL16'00000000F800000000000000F8000000'
00008080  D4C5C5C2 D961D4C5                       1522  DC CL48'MEEBR/MEEB NF -inf/-0 FPCR'
000080B0  00800000 F8008000                       1523  DC XL16'00800000F800800000800000F8008000'
000080C0  D4C5C5C2 D961D4C5                       1524  DC CL48'MEEBR/MEEB NF -inf/+0 FPCR'
000080F0  00800000 F8008000                       1525  DC XL16'00800000F800800000800000F8008000'
00008100  D4C5C5C2 D961D4C5                       1526  DC CL48'MEEBR/MEEB NF -inf/+2.0 FPCR'
00008130  00000000 F8000000                       1527  DC XL16'00000000F800000000000000F8000000'
00008140  D4C5C5C2 D961D4C5                       1528  DC CL48'MEEBR/MEEB NF -inf/+inf FPCR'
00008170  00000000 F8000000                       1529  DC XL16'00000000F800000000000000F8000000'
00008180  D4C5C5C2 D961D4C5                       1530  DC CL48'MEEBR/MEEB NF -inf/-QNaN FPCR'
000081B0  00000000 F8000000                       1531  DC XL16'00000000F800000000000000F8000000'
000081C0  D4C5C5C2 D961D4C5                       1532  DC CL48'MEEBR/MEEB NF -inf/+SNaN FPCR'
000081F0  00800000 F8008000                       1533  DC XL16'00800000F800800000800000F8008000'
00008200  D4C5C5C2 D961D4C5                       1534  DC CL48'MEEBR/MEEB NF -2.0/-inf FPCR'
00008230  00000000 F8000000                       1535  DC XL16'00000000F800000000000000F8000000'
00008240  D4C5C5C2 D961D4C5                       1536  DC CL48'MEEBR/MEEB NF -2.0/-2.0 FPCR'
00008270  00000000 F8000000                       1537  DC XL16'00000000F800000000000000F8000000'
00008280  D4C5C5C2 D961D4C5                       1538  DC CL48'MEEBR/MEEB NF -2.0/-0 FPCR'
000082B0  00000000 F8000000                       1539  DC XL16'00000000F800000000000000F8000000'
000082C0  D4C5C5C2 D961D4C5                       1540  DC CL48'MEEBR/MEEB NF -2.0/+0 FPCR'
000082F0  00000000 F8000000                       1541  DC XL16'00000000F800000000000000F8000000'
00008300  D4C5C5C2 D961D4C5                       1542  DC CL48'MEEBR/MEEB NF -2.0/+2.0 FPCR'
00008330  00000000 F8000000                       1543  DC XL16'00000000F800000000000000F8000000'
00008340  D4C5C5C2 D961D4C5                       1544  DC CL48'MEEBR/MEEB NF -2.0/+inf FPCR'
00008370  00000000 F8000000                       1545  DC XL16'00000000F800000000000000F8000000'
00008380  D4C5C5C2 D961D4C5                       1546  DC CL48'MEEBR/MEEB NF -2.0/-QNaN FPCR'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    35

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000083B0  00000000 F8000000                       1547  DC XL16'00000000F800000000000000F8000000'
000083C0  D4C5C5C2 D961D4C5                       1548  DC CL48'MEEBR/MEEB NF -2.0/+SNaN FPCR'
000083F0  00800000 F8008000                       1549  DC XL16'00800000F800800000800000F8008000'
00008400  D4C5C5C2 D961D4C5                       1550  DC CL48'MEEBR/MEEB NF -0/-inf FPCR'
00008430  00800000 F8008000                       1551  DC XL16'00800000F800800000800000F8008000'
00008440  D4C5C5C2 D961D4C5                       1552  DC CL48'MEEBR/MEEB NF -0/-2.0 FPCR'
00008470  00000000 F8000000                       1553  DC XL16'00000000F800000000000000F8000000'
00008480  D4C5C5C2 D961D4C5                       1554  DC CL48'MEEBR/MEEB NF -0/-0 FPCR'
000084B0  00000000 F8000000                       1555  DC XL16'00000000F800000000000000F8000000'
000084C0  D4C5C5C2 D961D4C5                       1556  DC CL48'MEEBR/MEEB NF -0/+0 FPCR'
000084F0  00000000 F8000000                       1557  DC XL16'00000000F800000000000000F8000000'
00008500  D4C5C5C2 D961D4C5                       1558  DC CL48'MEEBR/MEEB NF -0/+2.0 FPCR'
00008530  00000000 F8000000                       1559  DC XL16'00000000F800000000000000F8000000'
00008540  D4C5C5C2 D961D4C5                       1560  DC CL48'MEEBR/MEEB NF -0/+inf FPCR'
00008570  00800000 F8008000                       1561  DC XL16'00800000F800800000800000F8008000'
00008580  D4C5C5C2 D961D4C5                       1562  DC CL48'MEEBR/MEEB NF -0/-QNaN FPCR'
000085B0  00000000 F8000000                       1563  DC XL16'00000000F800000000000000F8000000'
000085C0  D4C5C5C2 D961D4C5                       1564  DC CL48'MEEBR/MEEB NF -0/+SNaN FPCR'
000085F0  00800000 F8008000                       1565  DC XL16'00800000F800800000800000F8008000'
00008600  D4C5C5C2 D961D4C5                       1566  DC CL48'MEEBR/MEEB NF +0/-inf FPCR'
00008630  00800000 F8008000                       1567  DC XL16'00800000F800800000800000F8008000'
00008640  D4C5C5C2 D961D4C5                       1568  DC CL48'MEEBR/MEEB NF +0/-2.0 FPCR'
00008670  00000000 F8000000                       1569  DC XL16'00000000F800000000000000F8000000'
00008680  D4C5C5C2 D961D4C5                       1570  DC CL48'MEEBR/MEEB NF +0/-0 FPCR'
000086B0  00000000 F8000000                       1571  DC XL16'00000000F800000000000000F8000000'
000086C0  D4C5C5C2 D961D4C5                       1572  DC CL48'MEEBR/MEEB NF +0/+0 FPCR'
000086F0  00000000 F8000000                       1573  DC XL16'00000000F800000000000000F8000000'
00008700  D4C5C5C2 D961D4C5                       1574  DC CL48'MEEBR/MEEB NF +0/+2.0 FPCR'
00008730  00000000 F8000000                       1575  DC XL16'00000000F800000000000000F8000000'
00008740  D4C5C5C2 D961D4C5                       1576  DC CL48'MEEBR/MEEB NF +0/+inf FPCR'
00008770  00800000 F8008000                       1577  DC XL16'00800000F800800000800000F8008000'
00008780  D4C5C5C2 D961D4C5                       1578  DC CL48'MEEBR/MEEB NF +0/-QNaN FPCR'
000087B0  00000000 F8000000                       1579  DC XL16'00000000F800000000000000F8000000'
000087C0  D4C5C5C2 D961D4C5                       1580  DC CL48'MEEBR/MEEB NF +0/+SNaN FPCR'
000087F0  00800000 F8008000                       1581  DC XL16'00800000F800800000800000F8008000'
00008800  D4C5C5C2 D961D4C5                       1582  DC CL48'MEEBR/MEEB NF +2.0/-inf FPCR'
00008830  00000000 F8000000                       1583  DC XL16'00000000F800000000000000F8000000'
00008840  D4C5C5C2 D961D4C5                       1584  DC CL48'MEEBR/MEEB NF +2.0/-2.0 FPCR'
00008870  00000000 F8000000                       1585  DC XL16'00000000F800000000000000F8000000'
00008880  D4C5C5C2 D961D4C5                       1586  DC CL48'MEEBR/MEEB NF +2.0/-0 FPCR'
000088B0  00000000 F8000000                       1587  DC XL16'00000000F800000000000000F8000000'
000088C0  D4C5C5C2 D961D4C5                       1588  DC CL48'MEEBR/MEEB NF +2.0/+0 FPCR'
000088F0  00000000 F8000000                       1589  DC XL16'00000000F800000000000000F8000000'
00008900  D4C5C5C2 D961D4C5                       1590  DC CL48'MEEBR/MEEB NF +2.0/+2.0 FPCR'
00008930  00000000 F8000000                       1591  DC XL16'00000000F800000000000000F8000000'
00008940  D4C5C5C2 D961D4C5                       1592  DC CL48'MEEBR/MEEB NF +2.0/+inf FPCR'
00008970  00000000 F8000000                       1593  DC XL16'00000000F800000000000000F8000000'
00008980  D4C5C5C2 D961D4C5                       1594  DC CL48'MEEBR/MEEB NF +2.0/-QNaN FPCR'
000089B0  00000000 F8000000                       1595  DC XL16'00000000F800000000000000F8000000'
000089C0  D4C5C5C2 D961D4C5                       1596  DC CL48'MEEBR/MEEB NF +2.0/+SNaN FPCR'
000089F0  00800000 F8008000                       1597  DC XL16'00800000F800800000800000F8008000'
00008A00  D4C5C5C2 D961D4C5                       1598  DC CL48'MEEBR/MEEB NF +inf/-inf FPCR'
00008A30  00000000 F8000000                       1599  DC XL16'00000000F800000000000000F8000000'
00008A40  D4C5C5C2 D961D4C5                       1600  DC CL48'MEEBR/MEEB NF +inf/-2.0 FPCR'
00008A70  00000000 F8000000                       1601  DC XL16'00000000F800000000000000F8000000'
00008A80  D4C5C5C2 D961D4C5                       1602  DC CL48'MEEBR/MEEB NF +inf/-0 FPCR'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    36

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00008AB0  00800000 F8008000                       1603  DC XL16'00800000F800800000800000F8008000'
00008AC0  D4C5C5C2 D961D4C5                       1604  DC CL48'MEEBR/MEEB NF +inf/+0 FPCR'
00008AF0  00800000 F8008000                       1605  DC XL16'00800000F800800000800000F8008000'
00008B00  D4C5C5C2 D961D4C5                       1606  DC CL48'MEEBR/MEEB NF +inf/+2.0 FPCR'
00008B30  00000000 F8000000                       1607  DC XL16'00000000F800000000000000F8000000'
00008B40  D4C5C5C2 D961D4C5                       1608  DC CL48'MEEBR/MEEB NF +inf/+inf FPCR'
00008B70  00000000 F8000000                       1609  DC XL16'00000000F800000000000000F8000000'
00008B80  D4C5C5C2 D961D4C5                       1610  DC CL48'MEEBR/MEEB NF +inf/-QNaN FPCR'
00008BB0  00000000 F8000000                       1611  DC XL16'00000000F800000000000000F8000000'
00008BC0  D4C5C5C2 D961D4C5                       1612  DC CL48'MEEBR/MEEB NF +inf/+SNaN FPCR'
00008BF0  00800000 F8008000                       1613  DC XL16'00800000F800800000800000F8008000'
00008C00  D4C5C5C2 D961D4C5                       1614  DC CL48'MEEBR/MEEB NF -QNaN/-inf FPCR'
00008C30  00000000 F8000000                       1615  DC XL16'00000000F800000000000000F8000000'
00008C40  D4C5C5C2 D961D4C5                       1616  DC CL48'MEEBR/MEEB NF -QNaN/-2.0 FPCR'
00008C70  00000000 F8000000                       1617  DC XL16'00000000F800000000000000F8000000'
00008C80  D4C5C5C2 D961D4C5                       1618  DC CL48'MEEBR/MEEB NF -QNaN/-0 FPCR'
00008CB0  00000000 F8000000                       1619  DC XL16'00000000F800000000000000F8000000'
00008CC0  D4C5C5C2 D961D4C5                       1620  DC CL48'MEEBR/MEEB NF -QNaN/+0 FPCR'
00008CF0  00000000 F8000000                       1621  DC XL16'00000000F800000000000000F8000000'
00008D00  D4C5C5C2 D961D4C5                       1622  DC CL48'MEEBR/MEEB NF -QNaN/+2.0 FPCR'
00008D30  00000000 F8000000                       1623  DC XL16'00000000F800000000000000F8000000'
00008D40  D4C5C5C2 D961D4C5                       1624  DC CL48'MEEBR/MEEB NF -QNaN/+inf FPCR'
00008D70  00000000 F8000000                       1625  DC XL16'00000000F800000000000000F8000000'
00008D80  D4C5C5C2 D961D4C5                       1626  DC CL48'MEEBR/MEEB NF -QNaN/-QNaN FPCR'
00008DB0  00000000 F8000000                       1627  DC XL16'00000000F800000000000000F8000000'
00008DC0  D4C5C5C2 D961D4C5                       1628  DC CL48'MEEBR/MEEB NF -QNaN/+SNaN FPCR'
00008DF0  00800000 F8008000                       1629  DC XL16'00800000F800800000800000F8008000'
00008E00  D4C5C5C2 D961D4C5                       1630  DC CL48'MEEBR/MEEB NF +SNaN/-inf FPCR'
00008E30  00800000 F8008000                       1631  DC XL16'00800000F800800000800000F8008000'
00008E40  D4C5C5C2 D961D4C5                       1632  DC CL48'MEEBR/MEEB NF +SNaN/-2.0 FPCR'
00008E70  00800000 F8008000                       1633  DC XL16'00800000F800800000800000F8008000'
00008E80  D4C5C5C2 D961D4C5                       1634  DC CL48'MEEBR/MEEB NF +SNaN/-0 FPCR'
00008EB0  00800000 F8008000                       1635  DC XL16'00800000F800800000800000F8008000'
00008EC0  D4C5C5C2 D961D4C5                       1636  DC CL48'MEEBR/MEEB NF +SNaN/+0 FPCR'
00008EF0  00800000 F8008000                       1637  DC XL16'00800000F800800000800000F8008000'
00008F00  D4C5C5C2 D961D4C5                       1638  DC CL48'MEEBR/MEEB NF +SNaN/+2.0 FPCR'
00008F30  00800000 F8008000                       1639  DC XL16'00800000F800800000800000F8008000'
00008F40  D4C5C5C2 D961D4C5                       1640  DC CL48'MEEBR/MEEB NF +SNaN/+inf FPCR'
00008F70  00800000 F8008000                       1641  DC XL16'00800000F800800000800000F8008000'
00008F80  D4C5C5C2 D961D4C5                       1642  DC CL48'MEEBR/MEEB NF +SNaN/-QNaN FPCR'
00008FB0  00800000 F8008000                       1643  DC XL16'00800000F800800000800000F8008000'
00008FC0  D4C5C5C2 D961D4C5                       1644  DC CL48'MEEBR/MEEB NF +SNaN/+SNaN FPCR'
00008FF0  00800000 F8008000                       1645  DC XL16'00800000F800800000800000F8008000'
                              00000040  00000001  1646 SBFPNFFL_NUM EQU (*-SBFPNFFL_GOOD)/64
                                                  1647 *
                                                  1648 *
                              00009000  00000001  1649 SBFPOUT_GOOD EQU *
00009000  D4C5C5C2 D961D4C5                       1650  DC CL48'MEEBR/MEEB F Ovfl'
00009030  FF800000 DF7FFFFE                       1651  DC XL16'FF800000DF7FFFFEFF800000DF7FFFFE'
00009040  D4C5C5C2 D961D4C5                       1652  DC CL48'MEEBR/MEEB F Ufl 1'
00009070  00000000 21FFFFFF                       1653  DC XL16'0000000021FFFFFF0000000021FFFFFF'
00009080  D4C5C5C2 D961D4C5                       1654  DC CL48'MEEBR/MEEB F Ufl 2'
000090B0  00000000 1970F000                       1655  DC XL16'000000001970F000000000001970F000'
000090C0  D4C5C5C2 D961D4C5                       1656  DC CL48'MEEBR/MEEB F Nmin'
000090F0  00FFFFFE 00FFFFFE                       1657  DC XL16'00FFFFFE00FFFFFE00FFFFFE00FFFFFE'
00009100  D4C5C5C2 D961D4C5                       1658  DC CL48'MEEBR/MEEB F Incr'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    37

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00009130  3F88000D 3F88000D                       1659  DC XL16'3F88000D3F88000D3F88000D3F88000D'
00009140  D4C5C5C2 D961D4C5                       1660  DC CL48'MEEBR/MEEB F Trun'
00009170  3F880007 3F880007                       1661  DC XL16'3F8800073F8800073F8800073F880007'
                              00000006  00000001  1662 SBFPOUT_NUM EQU (*-SBFPOUT_GOOD)/64
                                                  1663 *
                                                  1664 *
                              00009180  00000001  1665 SBFPFLGS_GOOD EQU *
00009180  D4C5C5C2 D961D4C5                       1666  DC CL48'MEEBR/MEEB F Ovfl FPCR'
000091B0  00280000 F8002800                       1667  DC XL16'00280000F800280000280000F8002800'
000091C0  D4C5C5C2 D961D4C5                       1668  DC CL48'MEEBR/MEEB F Ufl 1 FPCR'
000091F0  00180000 F8001000                       1669  DC XL16'00180000F800100000180000F8001000'
00009200  D4C5C5C2 D961D4C5                       1670  DC CL48'MEEBR/MEEB F Ufl 2 FPCR'
00009230  00180000 F8001000                       1671  DC XL16'00180000F800100000180000F8001000'
00009240  D4C5C5C2 D961D4C5                       1672  DC CL48'MEEBR/MEEB F Nmin FPCR'
00009270  00000000 F8000000                       1673  DC XL16'00000000F800000000000000F8000000'
00009280  D4C5C5C2 D961D4C5                       1674  DC CL48'MEEBR/MEEB F Incr FPCR'
000092B0  00080000 F8000C00                       1675  DC XL16'00080000F8000C0000080000F8000C00'
000092C0  D4C5C5C2 D961D4C5                       1676  DC CL48'MEEBR/MEEB F Trun FPCR'
000092F0  00080000 F8000800                       1677  DC XL16'00080000F800080000080000F8000800'
                              00000006  00000001  1678 SBFPFLGS_NUM EQU (*-SBFPFLGS_GOOD)/64
                                                  1679 *
                                                  1680 *
                              00009300  00000001  1681 SBFPRMO_GOOD EQU *
00009300  D4C5C5C2 D961D4C5                       1682  DC CL48'MEEBR/MEEB RM +NZ RNTE, RZ'
00009330  3F880007 3F880007                       1683  DC XL16'3F8800073F8800073F8800073F880007'
00009340  D4C5C5C2 D961D4C5                       1684  DC CL48'MEEBR/MEEB RM +NZ RP, RM'
00009370  3F880008 3F880008                       1685  DC XL16'3F8800083F8800083F8800073F880007'
00009380  D4C5C5C2 D961D4C5                       1686  DC CL48'MEEBR/MEEB RM +NZ RFS'
000093B0  3F880007 3F880007                       1687  DC XL16'3F8800073F8800070000000000000000'
000093C0  D4C5C5C2 D961D4C5                       1688  DC CL48'MEEBR/MEEB RM -NZ RNTE, RZ'
000093F0  BF880007 BF880007                       1689  DC XL16'BF880007BF880007BF880007BF880007'
00009400  D4C5C5C2 D961D4C5                       1690  DC CL48'MEEBR/MEEB RM -NZ RP, RM'
00009430  BF880007 BF880007                       1691  DC XL16'BF880007BF880007BF880008BF880008'
00009440  D4C5C5C2 D961D4C5                       1692  DC CL48'MEEBR/MEEB RM -NZ RFS'
00009470  BF880007 BF880007                       1693  DC XL16'BF880007BF8800070000000000000000'
00009480  D4C5C5C2 D961D4C5                       1694  DC CL48'MEEBR/MEEB RM +NA RNTE, RZ'
000094B0  3F88000D 3F88000D                       1695  DC XL16'3F88000D3F88000D3F88000C3F88000C'
000094C0  D4C5C5C2 D961D4C5                       1696  DC CL48'MEEBR/MEEB RM +NA RP, RM'
000094F0  3F88000D 3F88000D                       1697  DC XL16'3F88000D3F88000D3F88000C3F88000C'
00009500  D4C5C5C2 D961D4C5                       1698  DC CL48'MEEBR/MEEB RM +NA RFS'
00009530  3F88000D 3F88000D                       1699  DC XL16'3F88000D3F88000D0000000000000000'
00009540  D4C5C5C2 D961D4C5                       1700  DC CL48'MEEBR/MEEB RM -NA RNTE, RZ'
00009570  BF88000D BF88000D                       1701  DC XL16'BF88000DBF88000DBF88000CBF88000C'
00009580  D4C5C5C2 D961D4C5                       1702  DC CL48'MEEBR/MEEB RM -NA RP, RM'
000095B0  BF88000C BF88000C                       1703  DC XL16'BF88000CBF88000CBF88000DBF88000D'
000095C0  D4C5C5C2 D961D4C5                       1704  DC CL48'MEEBR/MEEB RM -NA RFS'
000095F0  BF88000D BF88000D                       1705  DC XL16'BF88000DBF88000D0000000000000000'
00009600  D4C5C5C2 D961D4C5                       1706  DC CL48'MEEBR/MEEB RM +TZ RNTE, RZ'
00009630  3F880008 3F880008                       1707  DC XL16'3F8800083F8800083F8800083F880008'
00009640  D4C5C5C2 D961D4C5                       1708  DC CL48'MEEBR/MEEB RM +TZ RP, RM'
00009670  3F880009 3F880009                       1709  DC XL16'3F8800093F8800093F8800083F880008'
00009680  D4C5C5C2 D961D4C5                       1710  DC CL48'MEEBR/MEEB RM +TZ RFS'
000096B0  3F880009 3F880009                       1711  DC XL16'3F8800093F8800090000000000000000'
000096C0  D4C5C5C2 D961D4C5                       1712  DC CL48'MEEBR/MEEB RM -TZ RNTE, RZ'
000096F0  BF880008 BF880008                       1713  DC XL16'BF880008BF880008BF880008BF880008'
00009700  D4C5C5C2 D961D4C5                       1714  DC CL48'MEEBR/MEEB RM -TZ RP, RM'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    38

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00009730  BF880008 BF880008                       1715  DC XL16'BF880008BF880008BF880009BF880009'
00009740  D4C5C5C2 D961D4C5                       1716  DC CL48'MEEBR/MEEB RM -TZ RFS'
00009770  BF880009 BF880009                       1717  DC XL16'BF880009BF8800090000000000000000'
00009780  D4C5C5C2 D961D4C5                       1718  DC CL48'MEEBR/MEEB RM +TA RNTE, RZ'
000097B0  3F88001A 3F88001A                       1719  DC XL16'3F88001A3F88001A3F8800193F880019'
000097C0  D4C5C5C2 D961D4C5                       1720  DC CL48'MEEBR/MEEB RM +TA RP, RM'
000097F0  3F88001A 3F88001A                       1721  DC XL16'3F88001A3F88001A3F8800193F880019'
00009800  D4C5C5C2 D961D4C5                       1722  DC CL48'MEEBR/MEEB RM +TA RFS'
00009830  3F880019 3F880019                       1723  DC XL16'3F8800193F8800190000000000000000'
00009840  D4C5C5C2 D961D4C5                       1724  DC CL48'MEEBR/MEEB RM -TA RNTE, RZ'
00009870  BF88001A BF88001A                       1725  DC XL16'BF88001ABF88001ABF880019BF880019'
00009880  D4C5C5C2 D961D4C5                       1726  DC CL48'MEEBR/MEEB RM -TA RP, RM'
000098B0  BF880019 BF880019                       1727  DC XL16'BF880019BF880019BF88001ABF88001A'
000098C0  D4C5C5C2 D961D4C5                       1728  DC CL48'MEEBR/MEEB RM -TA RFS'
000098F0  BF880019 BF880019                       1729  DC XL16'BF880019BF8800190000000000000000'
                              00000018  00000001  1730 SBFPRMO_NUM EQU (*-SBFPRMO_GOOD)/64
                                                  1731 *
                                                  1732 *
                              00009900  00000001  1733 SBFPRMOF_GOOD EQU *
00009900  D4C5C5C2 D961D4C5                       1734  DC CL48'MEEBR/MEEB RM +NZ RNTE, RZ FPCR'
00009930  00080000 00080000                       1735  DC XL16'00080000000800000008000100080001'
00009940  D4C5C5C2 D961D4C5                       1736  DC CL48'MEEBR/MEEB RM +NZ RP, RM FPCR'
00009970  00080002 00080002                       1737  DC XL16'00080002000800020008000300080003'
00009980  D4C5C5C2 D961D4C5                       1738  DC CL48'MEEBR/MEEB RM +NZ RFS FPCR'
000099B0  00080007 00080007                       1739  DC XL16'00080007000800070000000000000000'
000099C0  D4C5C5C2 D961D4C5                       1740  DC CL48'MEEBR/MEEB RM -NZ RNTE, RZ FPCR'
000099F0  00080000 00080000                       1741  DC XL16'00080000000800000008000100080001'
00009A00  D4C5C5C2 D961D4C5                       1742  DC CL48'MEEBR/MEEB RM -NZ RP, RM FPCR'
00009A30  00080002 00080002                       1743  DC XL16'00080002000800020008000300080003'
00009A40  D4C5C5C2 D961D4C5                       1744  DC CL48'MEEBR/MEEB RM -NZ RFS FPCR'
00009A70  00080007 00080007                       1745  DC XL16'00080007000800070000000000000000'
00009A80  D4C5C5C2 D961D4C5                       1746  DC CL48'MEEBR/MEEB RM +NA RNTE, RZ FPCR'
00009AB0  00080000 00080000                       1747  DC XL16'00080000000800000008000100080001'
00009AC0  D4C5C5C2 D961D4C5                       1748  DC CL48'MEEBR/MEEB RM +NA RP, RM FPCR'
00009AF0  00080002 00080002                       1749  DC XL16'00080002000800020008000300080003'
00009B00  D4C5C5C2 D961D4C5                       1750  DC CL48'MEEBR/MEEB RM +NA RFS FPCR'
00009B30  00080007 00080007                       1751  DC XL16'00080007000800070000000000000000'
00009B40  D4C5C5C2 D961D4C5                       1752  DC CL48'MEEBR/MEEB RM -NA RNTE, RZ FPCR'
00009B70  00080000 00080000                       1753  DC XL16'00080000000800000008000100080001'
00009B80  D4C5C5C2 D961D4C5                       1754  DC CL48'MEEBR/MEEB RM -NA RP, RM FPCR'
00009BB0  00080002 00080002                       1755  DC XL16'00080002000800020008000300080003'
00009BC0  D4C5C5C2 D961D4C5                       1756  DC CL48'MEEBR/MEEB RM -NA RFS FPCR'
00009BF0  00080007 00080007                       1757  DC XL16'00080007000800070000000000000000'
00009C00  D4C5C5C2 D961D4C5                       1758  DC CL48'MEEBR/MEEB RM +TZ RNTE, RZ FPCR'
00009C30  00080000 00080000                       1759  DC XL16'00080000000800000008000100080001'
00009C40  D4C5C5C2 D961D4C5                       1760  DC CL48'MEEBR/MEEB RM +TZ RP, RM FPCR'
00009C70  00080002 00080002                       1761  DC XL16'00080002000800020008000300080003'
00009C80  D4C5C5C2 D961D4C5                       1762  DC CL48'MEEBR/MEEB RM +TZ RFS FPCR'
00009CB0  00080007 00080007                       1763  DC XL16'00080007000800070000000000000000'
00009CC0  D4C5C5C2 D961D4C5                       1764  DC CL48'MEEBR/MEEB RM -TZ RNTE, RZ FPCR'
00009CF0  00080000 00080000                       1765  DC XL16'00080000000800000008000100080001'
00009D00  D4C5C5C2 D961D4C5                       1766  DC CL48'MEEBR/MEEB RM -TZ RP, RM FPCR'
00009D30  00080002 00080002                       1767  DC XL16'00080002000800020008000300080003'
00009D40  D4C5C5C2 D961D4C5                       1768  DC CL48'MEEBR/MEEB RM -TZ RFS FPCR'
00009D70  00080007 00080007                       1769  DC XL16'00080007000800070000000000000000'
00009D80  D4C5C5C2 D961D4C5                       1770  DC CL48'MEEBR/MEEB RM +TA RNTE, RZ FPCR'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    39

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00009DB0  00080000 00080000                       1771  DC XL16'00080000000800000008000100080001'
00009DC0  D4C5C5C2 D961D4C5                       1772  DC CL48'MEEBR/MEEB RM +TA RP, RM FPCR'
00009DF0  00080002 00080002                       1773  DC XL16'00080002000800020008000300080003'
00009E00  D4C5C5C2 D961D4C5                       1774  DC CL48'MEEBR/MEEB RM +TA RFS FPCR'
00009E30  00080007 00080007                       1775  DC XL16'00080007000800070000000000000000'
00009E40  D4C5C5C2 D961D4C5                       1776  DC CL48'MEEBR/MEEB RM -TA RNTE, RZ FPCR'
00009E70  00080000 00080000                       1777  DC XL16'00080000000800000008000100080001'
00009E80  D4C5C5C2 D961D4C5                       1778  DC CL48'MEEBR/MEEB RM -TA RP, RM FPCR'
00009EB0  00080002 00080002                       1779  DC XL16'00080002000800020008000300080003'
00009EC0  D4C5C5C2 D961D4C5                       1780  DC CL48'MEEBR/MEEB RM -TA RFS FPCR'
00009EF0  00080007 00080007                       1781  DC XL16'00080007000800070000000000000000'
                              00000018  00000001  1782 SBFPRMOF_NUM EQU (*-SBFPRMOF_GOOD)/64
                                                  1783 *
                                                  1784 *
                              00009F00  00000001  1785 LBFPNFOT_GOOD EQU *
00009F00  D4C4C2D9 61D4C4C2                       1786  DC CL48'MDBR/MDB NF -inf/-inf NT'
00009F30  7FF00000 00000000                       1787  DC XL16'7FF00000000000007FF0000000000000'
00009F40  D4C4C2D9 61D4C4C2                       1788  DC CL48'MDBR/MDB NF -inf/-inf Tr'
00009F70  7FF00000 00000000                       1789  DC XL16'7FF00000000000007FF0000000000000'
00009F80  D4C4C2D9 61D4C4C2                       1790  DC CL48'MDBR/MDB NF -inf/-2.0 NT'
00009FB0  7FF00000 00000000                       1791  DC XL16'7FF00000000000007FF0000000000000'
00009FC0  D4C4C2D9 61D4C4C2                       1792  DC CL48'MDBR/MDB NF -inf/-2.0 Tr'
00009FF0  7FF00000 00000000                       1793  DC XL16'7FF00000000000007FF0000000000000'
0000A000  D4C4C2D9 61D4C4C2                       1794  DC CL48'MDBR/MDB NF -inf/-0 NT'
0000A030  7FF80000 00000000                       1795  DC XL16'7FF8000000000000FFF0000000000000'
0000A040  D4C4C2D9 61D4C4C2                       1796  DC CL48'MDBR/MDB NF -inf/-0 Tr'
0000A070  7FF80000 00000000                       1797  DC XL16'7FF8000000000000FFF0000000000000'
0000A080  D4C4C2D9 61D4C4C2                       1798  DC CL48'MDBR/MDB NF -inf/+0 NT'
0000A0B0  7FF80000 00000000                       1799  DC XL16'7FF8000000000000FFF0000000000000'
0000A0C0  D4C4C2D9 61D4C4C2                       1800  DC CL48'MDBR/MDB NF -inf/+0 Tr'
0000A0F0  7FF80000 00000000                       1801  DC XL16'7FF8000000000000FFF0000000000000'
0000A100  D4C4C2D9 61D4C4C2                       1802  DC CL48'MDBR/MDB NF -inf/+2.0 NT'
0000A130  FFF00000 00000000                       1803  DC XL16'FFF0000000000000FFF0000000000000'
0000A140  D4C4C2D9 61D4C4C2                       1804  DC CL48'MDBR/MDB NF -inf/+2.0 Tr'
0000A170  FFF00000 00000000                       1805  DC XL16'FFF0000000000000FFF0000000000000'
0000A180  D4C4C2D9 61D4C4C2                       1806  DC CL48'MDBR/MDB NF -inf/+inf NT'
0000A1B0  FFF00000 00000000                       1807  DC XL16'FFF0000000000000FFF0000000000000'
0000A1C0  D4C4C2D9 61D4C4C2                       1808  DC CL48'MDBR/MDB NF -inf/+inf Tr'
0000A1F0  FFF00000 00000000                       1809  DC XL16'FFF0000000000000FFF0000000000000'
0000A200  D4C4C2D9 61D4C4C2                       1810  DC CL48'MDBR/MDB NF -inf/-QNaN NT'
0000A230  FFF8B000 00000000                       1811  DC XL16'FFF8B00000000000FFF8B00000000000'
0000A240  D4C4C2D9 61D4C4C2                       1812  DC CL48'MDBR/MDB NF -inf/-QNaN Tr'
0000A270  FFF8B000 00000000                       1813  DC XL16'FFF8B00000000000FFF8B00000000000'
0000A280  D4C4C2D9 61D4C4C2                       1814  DC CL48'MDBR/MDB NF -inf/+SNaN NT'
0000A2B0  7FF8A000 00000000                       1815  DC XL16'7FF8A00000000000FFF0000000000000'
0000A2C0  D4C4C2D9 61D4C4C2                       1816  DC CL48'MDBR/MDB NF -inf/+SNaN Tr'
0000A2F0  7FF8A000 00000000                       1817  DC XL16'7FF8A00000000000FFF0000000000000'
0000A300  D4C4C2D9 61D4C4C2                       1818  DC CL48'MDBR/MDB NF -2.0/-inf NT'
0000A330  7FF00000 00000000                       1819  DC XL16'7FF00000000000007FF0000000000000'
0000A340  D4C4C2D9 61D4C4C2                       1820  DC CL48'MDBR/MDB NF -2.0/-inf Tr'
0000A370  7FF00000 00000000                       1821  DC XL16'7FF00000000000007FF0000000000000'
0000A380  D4C4C2D9 61D4C4C2                       1822  DC CL48'MDBR/MDB NF -2.0/-2.0 NT'
0000A3B0  40100000 00000000                       1823  DC XL16'40100000000000004010000000000000'
0000A3C0  D4C4C2D9 61D4C4C2                       1824  DC CL48'MDBR/MDB NF -2.0/-2.0 Tr'
0000A3F0  40100000 00000000                       1825  DC XL16'40100000000000004010000000000000'
0000A400  D4C4C2D9 61D4C4C2                       1826  DC CL48'MDBR/MDB NF -2.0/-0 NT'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    40

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000A430  00000000 00000000                       1827  DC XL16'00000000000000000000000000000000'
0000A440  D4C4C2D9 61D4C4C2                       1828  DC CL48'MDBR/MDB NF -2.0/-0 Tr'
0000A470  00000000 00000000                       1829  DC XL16'00000000000000000000000000000000'
0000A480  D4C4C2D9 61D4C4C2                       1830  DC CL48'MDBR/MDB NF -2.0/+0 NT'
0000A4B0  80000000 00000000                       1831  DC XL16'80000000000000008000000000000000'
0000A4C0  D4C4C2D9 61D4C4C2                       1832  DC CL48'MDBR/MDB NF -2.0/+0 Tr'
0000A4F0  80000000 00000000                       1833  DC XL16'80000000000000008000000000000000'
0000A500  D4C4C2D9 61D4C4C2                       1834  DC CL48'MDBR/MDB NF -2.0/+2.0 NT'
0000A530  C0100000 00000000                       1835  DC XL16'C010000000000000C010000000000000'
0000A540  D4C4C2D9 61D4C4C2                       1836  DC CL48'MDBR/MDB NF -2.0/+2.0 Tr'
0000A570  C0100000 00000000                       1837  DC XL16'C010000000000000C010000000000000'
0000A580  D4C4C2D9 61D4C4C2                       1838  DC CL48'MDBR/MDB NF -2.0/+inf NT'
0000A5B0  FFF00000 00000000                       1839  DC XL16'FFF0000000000000FFF0000000000000'
0000A5C0  D4C4C2D9 61D4C4C2                       1840  DC CL48'MDBR/MDB NF -2.0/+inf Tr'
0000A5F0  FFF00000 00000000                       1841  DC XL16'FFF0000000000000FFF0000000000000'
0000A600  D4C4C2D9 61D4C4C2                       1842  DC CL48'MDBR/MDB NF -2.0/-QNaN NT'
0000A630  FFF8B000 00000000                       1843  DC XL16'FFF8B00000000000FFF8B00000000000'
0000A640  D4C4C2D9 61D4C4C2                       1844  DC CL48'MDBR/MDB NF -2.0/-QNaN Tr'
0000A670  FFF8B000 00000000                       1845  DC XL16'FFF8B00000000000FFF8B00000000000'
0000A680  D4C4C2D9 61D4C4C2                       1846  DC CL48'MDBR/MDB NF -2.0/+SNaN NT'
0000A6B0  7FF8A000 00000000                       1847  DC XL16'7FF8A00000000000C000000000000000'
0000A6C0  D4C4C2D9 61D4C4C2                       1848  DC CL48'MDBR/MDB NF -2.0/+SNaN Tr'
0000A6F0  7FF8A000 00000000                       1849  DC XL16'7FF8A00000000000C000000000000000'
0000A700  D4C4C2D9 61D4C4C2                       1850  DC CL48'MDBR/MDB NF -0/-inf NT'
0000A730  7FF80000 00000000                       1851  DC XL16'7FF80000000000008000000000000000'
0000A740  D4C4C2D9 61D4C4C2                       1852  DC CL48'MDBR/MDB NF -0/-inf Tr'
0000A770  7FF80000 00000000                       1853  DC XL16'7FF80000000000008000000000000000'
0000A780  D4C4C2D9 61D4C4C2                       1854  DC CL48'MDBR/MDB NF -0/-2.0 NT'
0000A7B0  00000000 00000000                       1855  DC XL16'00000000000000000000000000000000'
0000A7C0  D4C4C2D9 61D4C4C2                       1856  DC CL48'MDBR/MDB NF -0/-2.0 Tr'
0000A7F0  00000000 00000000                       1857  DC XL16'00000000000000000000000000000000'
0000A800  D4C4C2D9 61D4C4C2                       1858  DC CL48'MDBR/MDB NF -0/-0 NT'
0000A830  00000000 00000000                       1859  DC XL16'00000000000000000000000000000000'
0000A840  D4C4C2D9 61D4C4C2                       1860  DC CL48'MDBR/MDB NF -0/-0 Tr'
0000A870  00000000 00000000                       1861  DC XL16'00000000000000000000000000000000'
0000A880  D4C4C2D9 61D4C4C2                       1862  DC CL48'MDBR/MDB NF -0/+0 NT'
0000A8B0  80000000 00000000                       1863  DC XL16'80000000000000008000000000000000'
0000A8C0  D4C4C2D9 61D4C4C2                       1864  DC CL48'MDBR/MDB NF -0/+0 Tr'
0000A8F0  80000000 00000000                       1865  DC XL16'80000000000000008000000000000000'
0000A900  D4C4C2D9 61D4C4C2                       1866  DC CL48'MDBR/MDB NF -0/+2.0 NT'
0000A930  80000000 00000000                       1867  DC XL16'80000000000000008000000000000000'
0000A940  D4C4C2D9 61D4C4C2                       1868  DC CL48'MDBR/MDB NF -0/+2.0 Tr'
0000A970  80000000 00000000                       1869  DC XL16'80000000000000008000000000000000'
0000A980  D4C4C2D9 61D4C4C2                       1870  DC CL48'MDBR/MDB NF -0/+inf NT'
0000A9B0  7FF80000 00000000                       1871  DC XL16'7FF80000000000008000000000000000'
0000A9C0  D4C4C2D9 61D4C4C2                       1872  DC CL48'MDBR/MDB NF -0/+inf Tr'
0000A9F0  7FF80000 00000000                       1873  DC XL16'7FF80000000000008000000000000000'
0000AA00  D4C4C2D9 61D4C4C2                       1874  DC CL48'MDBR/MDB NF -0/-QNaN NT'
0000AA30  FFF8B000 00000000                       1875  DC XL16'FFF8B00000000000FFF8B00000000000'
0000AA40  D4C4C2D9 61D4C4C2                       1876  DC CL48'MDBR/MDB NF -0/-QNaN Tr'
0000AA70  FFF8B000 00000000                       1877  DC XL16'FFF8B00000000000FFF8B00000000000'
0000AA80  D4C4C2D9 61D4C4C2                       1878  DC CL48'MDBR/MDB NF -0/+SNaN NT'
0000AAB0  7FF8A000 00000000                       1879  DC XL16'7FF8A000000000008000000000000000'
0000AAC0  D4C4C2D9 61D4C4C2                       1880  DC CL48'MDBR/MDB NF -0/+SNaN Tr'
0000AAF0  7FF8A000 00000000                       1881  DC XL16'7FF8A000000000008000000000000000'
0000AB00  D4C4C2D9 61D4C4C2                       1882  DC CL48'MDBR/MDB NF +0/-inf NT'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    41

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000AB30  7FF80000 00000000                       1883  DC XL16'7FF80000000000000000000000000000'
0000AB40  D4C4C2D9 61D4C4C2                       1884  DC CL48'MDBR/MDB NF +0/-inf Tr'
0000AB70  7FF80000 00000000                       1885  DC XL16'7FF80000000000000000000000000000'
0000AB80  D4C4C2D9 61D4C4C2                       1886  DC CL48'MDBR/MDB NF +0/-2.0 NT'
0000ABB0  80000000 00000000                       1887  DC XL16'80000000000000008000000000000000'
0000ABC0  D4C4C2D9 61D4C4C2                       1888  DC CL48'MDBR/MDB NF +0/-2.0 Tr'
0000ABF0  80000000 00000000                       1889  DC XL16'80000000000000008000000000000000'
0000AC00  D4C4C2D9 61D4C4C2                       1890  DC CL48'MDBR/MDB NF +0/-0 NT'
0000AC30  80000000 00000000                       1891  DC XL16'80000000000000008000000000000000'
0000AC40  D4C4C2D9 61D4C4C2                       1892  DC CL48'MDBR/MDB NF +0/-0 Tr'
0000AC70  80000000 00000000                       1893  DC XL16'80000000000000008000000000000000'
0000AC80  D4C4C2D9 61D4C4C2                       1894  DC CL48'MDBR/MDB NF +0/+0 NT'
0000ACB0  00000000 00000000                       1895  DC XL16'00000000000000000000000000000000'
0000ACC0  D4C4C2D9 61D4C4C2                       1896  DC CL48'MDBR/MDB NF +0/+0 Tr'
0000ACF0  00000000 00000000                       1897  DC XL16'00000000000000000000000000000000'
0000AD00  D4C4C2D9 61D4C4C2                       1898  DC CL48'MDBR/MDB NF +0/+2.0 NT'
0000AD30  00000000 00000000                       1899  DC XL16'00000000000000000000000000000000'
0000AD40  D4C4C2D9 61D4C4C2                       1900  DC CL48'MDBR/MDB NF +0/+2.0 Tr'
0000AD70  00000000 00000000                       1901  DC XL16'00000000000000000000000000000000'
0000AD80  D4C4C2D9 61D4C4C2                       1902  DC CL48'MDBR/MDB NF +0/+inf NT'
0000ADB0  7FF80000 00000000                       1903  DC XL16'7FF80000000000000000000000000000'
0000ADC0  D4C4C2D9 61D4C4C2                       1904  DC CL48'MDBR/MDB NF +0/+inf Tr'
0000ADF0  7FF80000 00000000                       1905  DC XL16'7FF80000000000000000000000000000'
0000AE00  D4C4C2D9 61D4C4C2                       1906  DC CL48'MDBR/MDB NF +0/-QNaN NT'
0000AE30  FFF8B000 00000000                       1907  DC XL16'FFF8B00000000000FFF8B00000000000'
0000AE40  D4C4C2D9 61D4C4C2                       1908  DC CL48'MDBR/MDB NF +0/-QNaN Tr'
0000AE70  FFF8B000 00000000                       1909  DC XL16'FFF8B00000000000FFF8B00000000000'
0000AE80  D4C4C2D9 61D4C4C2                       1910  DC CL48'MDBR/MDB NF +0/+SNaN NT'
0000AEB0  7FF8A000 00000000                       1911  DC XL16'7FF8A000000000000000000000000000'
0000AEC0  D4C4C2D9 61D4C4C2                       1912  DC CL48'MDBR/MDB NF +0/+SNaN Tr'
0000AEF0  7FF8A000 00000000                       1913  DC XL16'7FF8A000000000000000000000000000'
0000AF00  D4C4C2D9 61D4C4C2                       1914  DC CL48'MDBR/MDB NF +2.0/-inf NT'
0000AF30  FFF00000 00000000                       1915  DC XL16'FFF0000000000000FFF0000000000000'
0000AF40  D4C4C2D9 61D4C4C2                       1916  DC CL48'MDBR/MDB NF +2.0/-inf Tr'
0000AF70  FFF00000 00000000                       1917  DC XL16'FFF0000000000000FFF0000000000000'
0000AF80  D4C4C2D9 61D4C4C2                       1918  DC CL48'MDBR/MDB NF +2.0/-2.0 NT'
0000AFB0  C0100000 00000000                       1919  DC XL16'C010000000000000C010000000000000'
0000AFC0  D4C4C2D9 61D4C4C2                       1920  DC CL48'MDBR/MDB NF +2.0/-2.0 Tr'
0000AFF0  C0100000 00000000                       1921  DC XL16'C010000000000000C010000000000000'
0000B000  D4C4C2D9 61D4C4C2                       1922  DC CL48'MDBR/MDB NF +2.0/-0 NT'
0000B030  80000000 00000000                       1923  DC XL16'80000000000000008000000000000000'
0000B040  D4C4C2D9 61D4C4C2                       1924  DC CL48'MDBR/MDB NF +2.0/-0 Tr'
0000B070  80000000 00000000                       1925  DC XL16'80000000000000008000000000000000'
0000B080  D4C4C2D9 61D4C4C2                       1926  DC CL48'MDBR/MDB NF +2.0/+0 NT'
0000B0B0  00000000 00000000                       1927  DC XL16'00000000000000000000000000000000'
0000B0C0  D4C4C2D9 61D4C4C2                       1928  DC CL48'MDBR/MDB NF +2.0/+0 Tr'
0000B0F0  00000000 00000000                       1929  DC XL16'00000000000000000000000000000000'
0000B100  D4C4C2D9 61D4C4C2                       1930  DC CL48'MDBR/MDB NF +2.0/+2.0 NT'
0000B130  40100000 00000000                       1931  DC XL16'40100000000000004010000000000000'
0000B140  D4C4C2D9 61D4C4C2                       1932  DC CL48'MDBR/MDB NF +2.0/+2.0 Tr'
0000B170  40100000 00000000                       1933  DC XL16'40100000000000004010000000000000'
0000B180  D4C4C2D9 61D4C4C2                       1934  DC CL48'MDBR/MDB NF +2.0/+inf NT'
0000B1B0  7FF00000 00000000                       1935  DC XL16'7FF00000000000007FF0000000000000'
0000B1C0  D4C4C2D9 61D4C4C2                       1936  DC CL48'MDBR/MDB NF +2.0/+inf Tr'
0000B1F0  7FF00000 00000000                       1937  DC XL16'7FF00000000000007FF0000000000000'
0000B200  D4C4C2D9 61D4C4C2                       1938  DC CL48'MDBR/MDB NF +2.0/-QNaN NT'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    42

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000B230  FFF8B000 00000000                       1939  DC XL16'FFF8B00000000000FFF8B00000000000'
0000B240  D4C4C2D9 61D4C4C2                       1940  DC CL48'MDBR/MDB NF +2.0/-QNaN Tr'
0000B270  FFF8B000 00000000                       1941  DC XL16'FFF8B00000000000FFF8B00000000000'
0000B280  D4C4C2D9 61D4C4C2                       1942  DC CL48'MDBR/MDB NF +2.0/+SNaN NT'
0000B2B0  7FF8A000 00000000                       1943  DC XL16'7FF8A000000000004000000000000000'
0000B2C0  D4C4C2D9 61D4C4C2                       1944  DC CL48'MDBR/MDB NF +2.0/+SNaN Tr'
0000B2F0  7FF8A000 00000000                       1945  DC XL16'7FF8A000000000004000000000000000'
0000B300  D4C4C2D9 61D4C4C2                       1946  DC CL48'MDBR/MDB NF +inf/-inf NT'
0000B330  FFF00000 00000000                       1947  DC XL16'FFF0000000000000FFF0000000000000'
0000B340  D4C4C2D9 61D4C4C2                       1948  DC CL48'MDBR/MDB NF +inf/-inf Tr'
0000B370  FFF00000 00000000                       1949  DC XL16'FFF0000000000000FFF0000000000000'
0000B380  D4C4C2D9 61D4C4C2                       1950  DC CL48'MDBR/MDB NF +inf/-2.0 NT'
0000B3B0  FFF00000 00000000                       1951  DC XL16'FFF0000000000000FFF0000000000000'
0000B3C0  D4C4C2D9 61D4C4C2                       1952  DC CL48'MDBR/MDB NF +inf/-2.0 Tr'
0000B3F0  FFF00000 00000000                       1953  DC XL16'FFF0000000000000FFF0000000000000'
0000B400  D4C4C2D9 61D4C4C2                       1954  DC CL48'MDBR/MDB NF +inf/-0 NT'
0000B430  7FF80000 00000000                       1955  DC XL16'7FF80000000000007FF0000000000000'
0000B440  D4C4C2D9 61D4C4C2                       1956  DC CL48'MDBR/MDB NF +inf/-0 Tr'
0000B470  7FF80000 00000000                       1957  DC XL16'7FF80000000000007FF0000000000000'
0000B480  D4C4C2D9 61D4C4C2                       1958  DC CL48'MDBR/MDB NF +inf/+0 NT'
0000B4B0  7FF80000 00000000                       1959  DC XL16'7FF80000000000007FF0000000000000'
0000B4C0  D4C4C2D9 61D4C4C2                       1960  DC CL48'MDBR/MDB NF +inf/+0 Tr'
0000B4F0  7FF80000 00000000                       1961  DC XL16'7FF80000000000007FF0000000000000'
0000B500  D4C4C2D9 61D4C4C2                       1962  DC CL48'MDBR/MDB NF +inf/+2.0 NT'
0000B530  7FF00000 00000000                       1963  DC XL16'7FF00000000000007FF0000000000000'
0000B540  D4C4C2D9 61D4C4C2                       1964  DC CL48'MDBR/MDB NF +inf/+2.0 Tr'
0000B570  7FF00000 00000000                       1965  DC XL16'7FF00000000000007FF0000000000000'
0000B580  D4C4C2D9 61D4C4C2                       1966  DC CL48'MDBR/MDB NF +inf/+inf NT'
0000B5B0  7FF00000 00000000                       1967  DC XL16'7FF00000000000007FF0000000000000'
0000B5C0  D4C4C2D9 61D4C4C2                       1968  DC CL48'MDBR/MDB NF +inf/+inf Tr'
0000B5F0  7FF00000 00000000                       1969  DC XL16'7FF00000000000007FF0000000000000'
0000B600  D4C4C2D9 61D4C4C2                       1970  DC CL48'MDBR/MDB NF +inf/-QNaN NT'
0000B630  FFF8B000 00000000                       1971  DC XL16'FFF8B00000000000FFF8B00000000000'
0000B640  D4C4C2D9 61D4C4C2                       1972  DC CL48'MDBR/MDB NF +inf/-QNaN Tr'
0000B670  FFF8B000 00000000                       1973  DC XL16'FFF8B00000000000FFF8B00000000000'
0000B680  D4C4C2D9 61D4C4C2                       1974  DC CL48'MDBR/MDB NF +inf/+SNaN NT'
0000B6B0  7FF8A000 00000000                       1975  DC XL16'7FF8A000000000007FF0000000000000'
0000B6C0  D4C4C2D9 61D4C4C2                       1976  DC CL48'MDBR/MDB NF +inf/+SNaN Tr'
0000B6F0  7FF8A000 00000000                       1977  DC XL16'7FF8A000000000007FF0000000000000'
0000B700  D4C4C2D9 61D4C4C2                       1978  DC CL48'MDBR/MDB NF -QNaN/-inf NT'
0000B730  FFF8B000 00000000                       1979  DC XL16'FFF8B00000000000FFF8B00000000000'
0000B740  D4C4C2D9 61D4C4C2                       1980  DC CL48'MDBR/MDB NF -QNaN/-inf Tr'
0000B770  FFF8B000 00000000                       1981  DC XL16'FFF8B00000000000FFF8B00000000000'
0000B780  D4C4C2D9 61D4C4C2                       1982  DC CL48'MDBR/MDB NF -QNaN/-2.0 NT'
0000B7B0  FFF8B000 00000000                       1983  DC XL16'FFF8B00000000000FFF8B00000000000'
0000B7C0  D4C4C2D9 61D4C4C2                       1984  DC CL48'MDBR/MDB NF -QNaN/-2.0 Tr'
0000B7F0  FFF8B000 00000000                       1985  DC XL16'FFF8B00000000000FFF8B00000000000'
0000B800  D4C4C2D9 61D4C4C2                       1986  DC CL48'MDBR/MDB NF -QNaN/-0 NT'
0000B830  FFF8B000 00000000                       1987  DC XL16'FFF8B00000000000FFF8B00000000000'
0000B840  D4C4C2D9 61D4C4C2                       1988  DC CL48'MDBR/MDB NF -QNaN/-0 Tr'
0000B870  FFF8B000 00000000                       1989  DC XL16'FFF8B00000000000FFF8B00000000000'
0000B880  D4C4C2D9 61D4C4C2                       1990  DC CL48'MDBR/MDB NF -QNaN/+0 NT'
0000B8B0  FFF8B000 00000000                       1991  DC XL16'FFF8B00000000000FFF8B00000000000'
0000B8C0  D4C4C2D9 61D4C4C2                       1992  DC CL48'MDBR/MDB NF -QNaN/+0 Tr'
0000B8F0  FFF8B000 00000000                       1993  DC XL16'FFF8B00000000000FFF8B00000000000'
0000B900  D4C4C2D9 61D4C4C2                       1994  DC CL48'MDBR/MDB NF -QNaN/+2.0 NT'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    43

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000B930  FFF8B000 00000000                       1995  DC XL16'FFF8B00000000000FFF8B00000000000'
0000B940  D4C4C2D9 61D4C4C2                       1996  DC CL48'MDBR/MDB NF -QNaN/+2.0 Tr'
0000B970  FFF8B000 00000000                       1997  DC XL16'FFF8B00000000000FFF8B00000000000'
0000B980  D4C4C2D9 61D4C4C2                       1998  DC CL48'MDBR/MDB NF -QNaN/+inf NT'
0000B9B0  FFF8B000 00000000                       1999  DC XL16'FFF8B00000000000FFF8B00000000000'
0000B9C0  D4C4C2D9 61D4C4C2                       2000  DC CL48'MDBR/MDB NF -QNaN/+inf Tr'
0000B9F0  FFF8B000 00000000                       2001  DC XL16'FFF8B00000000000FFF8B00000000000'
0000BA00  D4C4C2D9 61D4C4C2                       2002  DC CL48'MDBR/MDB NF -QNaN/-QNaN NT'
0000BA30  FFF8B000 00000000                       2003  DC XL16'FFF8B00000000000FFF8B00000000000'
0000BA40  D4C4C2D9 61D4C4C2                       2004  DC CL48'MDBR/MDB NF -QNaN/-QNaN Tr'
0000BA70  FFF8B000 00000000                       2005  DC XL16'FFF8B00000000000FFF8B00000000000'
0000BA80  D4C4C2D9 61D4C4C2                       2006  DC CL48'MDBR/MDB NF -QNaN/+SNaN NT'
0000BAB0  7FF8A000 00000000                       2007  DC XL16'7FF8A00000000000FFF8B00000000000'
0000BAC0  D4C4C2D9 61D4C4C2                       2008  DC CL48'MDBR/MDB NF -QNaN/+SNaN Tr'
0000BAF0  7FF8A000 00000000                       2009  DC XL16'7FF8A00000000000FFF8B00000000000'
0000BB00  D4C4C2D9 61D4C4C2                       2010  DC CL48'MDBR/MDB NF +SNaN/-inf NT'
0000BB30  7FF8A000 00000000                       2011  DC XL16'7FF8A000000000007FF0A00000000000'
0000BB40  D4C4C2D9 61D4C4C2                       2012  DC CL48'MDBR/MDB NF +SNaN/-inf Tr'
0000BB70  7FF8A000 00000000                       2013  DC XL16'7FF8A000000000007FF0A00000000000'
0000BB80  D4C4C2D9 61D4C4C2                       2014  DC CL48'MDBR/MDB NF +SNaN/-2.0 NT'
0000BBB0  7FF8A000 00000000                       2015  DC XL16'7FF8A000000000007FF0A00000000000'
0000BBC0  D4C4C2D9 61D4C4C2                       2016  DC CL48'MDBR/MDB NF +SNaN/-2.0 Tr'
0000BBF0  7FF8A000 00000000                       2017  DC XL16'7FF8A000000000007FF0A00000000000'
0000BC00  D4C4C2D9 61D4C4C2                       2018  DC CL48'MDBR/MDB NF +SNaN/-0 NT'
0000BC30  7FF8A000 00000000                       2019  DC XL16'7FF8A000000000007FF0A00000000000'
0000BC40  D4C4C2D9 61D4C4C2                       2020  DC CL48'MDBR/MDB NF +SNaN/-0 Tr'
0000BC70  7FF8A000 00000000                       2021  DC XL16'7FF8A000000000007FF0A00000000000'
0000BC80  D4C4C2D9 61D4C4C2                       2022  DC CL48'MDBR/MDB NF +SNaN/+0 NT'
0000BCB0  7FF8A000 00000000                       2023  DC XL16'7FF8A000000000007FF0A00000000000'
0000BCC0  D4C4C2D9 61D4C4C2                       2024  DC CL48'MDBR/MDB NF +SNaN/+0 Tr'
0000BCF0  7FF8A000 00000000                       2025  DC XL16'7FF8A000000000007FF0A00000000000'
0000BD00  D4C4C2D9 61D4C4C2                       2026  DC CL48'MDBR/MDB NF +SNaN/+2.0 NT'
0000BD30  7FF8A000 00000000                       2027  DC XL16'7FF8A000000000007FF0A00000000000'
0000BD40  D4C4C2D9 61D4C4C2                       2028  DC CL48'MDBR/MDB NF +SNaN/+2.0 Tr'
0000BD70  7FF8A000 00000000                       2029  DC XL16'7FF8A000000000007FF0A00000000000'
0000BD80  D4C4C2D9 61D4C4C2                       2030  DC CL48'MDBR/MDB NF +SNaN/+inf NT'
0000BDB0  7FF8A000 00000000                       2031  DC XL16'7FF8A000000000007FF0A00000000000'
0000BDC0  D4C4C2D9 61D4C4C2                       2032  DC CL48'MDBR/MDB NF +SNaN/+inf Tr'
0000BDF0  7FF8A000 00000000                       2033  DC XL16'7FF8A000000000007FF0A00000000000'
0000BE00  D4C4C2D9 61D4C4C2                       2034  DC CL48'MDBR/MDB NF +SNaN/-QNaN NT'
0000BE30  7FF8A000 00000000                       2035  DC XL16'7FF8A000000000007FF0A00000000000'
0000BE40  D4C4C2D9 61D4C4C2                       2036  DC CL48'MDBR/MDB NF +SNaN/-QNaN Tr'
0000BE70  7FF8A000 00000000                       2037  DC XL16'7FF8A000000000007FF0A00000000000'
0000BE80  D4C4C2D9 61D4C4C2                       2038  DC CL48'MDBR/MDB NF +SNaN/+SNaN NT'
0000BEB0  7FF8A000 00000000                       2039  DC XL16'7FF8A000000000007FF0A00000000000'
0000BEC0  D4C4C2D9 61D4C4C2                       2040  DC CL48'MDBR/MDB NF +SNaN/+SNaN Tr'
0000BEF0  7FF8A000 00000000                       2041  DC XL16'7FF8A000000000007FF0A00000000000'
                              00000080  00000001  2042 LBFPNFOT_NUM EQU (*-LBFPNFOT_GOOD)/64
                                                  2043 *
                                                  2044 *
                              0000BF00  00000001  2045 LBFPNFFL_GOOD EQU *
0000BF00  D4C4C2D9 40D5C640                       2046  DC CL48'MDBR NF -inf/-inf FPCR'
0000BF30  00000000 F8000000                       2047  DC XL16'00000000F800000000000000F8000000'
0000BF40  D4C4C240 D5C64060                       2048  DC CL48'MDB NF -inf/-2.0 FPCR'
0000BF70  00000000 F8000000                       2049  DC XL16'00000000F800000000000000F8000000'
0000BF80  D4C4C2D9 40D5C640                       2050  DC CL48'MDBR NF -inf/-0 FPCR'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    44

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000BFB0  00800000 F8008000                       2051  DC XL16'00800000F800800000800000F8008000'
0000BFC0  D4C4C240 D5C64060                       2052  DC CL48'MDB NF -inf/+0 FPCR'
0000BFF0  00800000 F8008000                       2053  DC XL16'00800000F800800000800000F8008000'
0000C000  D4C4C2D9 40D5C640                       2054  DC CL48'MDBR NF -inf/+2.0 FPCR'
0000C030  00000000 F8000000                       2055  DC XL16'00000000F800000000000000F8000000'
0000C040  D4C4C240 D5C64060                       2056  DC CL48'MDB NF -inf/+inf FPCR'
0000C070  00000000 F8000000                       2057  DC XL16'00000000F800000000000000F8000000'
0000C080  D4C4C2D9 40D5C640                       2058  DC CL48'MDBR NF -inf/-QNaN FPCR'
0000C0B0  00000000 F8000000                       2059  DC XL16'00000000F800000000000000F8000000'
0000C0C0  D4C4C240 D5C64060                       2060  DC CL48'MDB NF -inf/+SNaN FPCR'
0000C0F0  00800000 F8008000                       2061  DC XL16'00800000F800800000800000F8008000'
0000C100  D4C4C2D9 40D5C640                       2062  DC CL48'MDBR NF -2.0/-inf FPCR'
0000C130  00000000 F8000000                       2063  DC XL16'00000000F800000000000000F8000000'
0000C140  D4C4C240 D5C64060                       2064  DC CL48'MDB NF -2.0/-2.0 FPCR'
0000C170  00000000 F8000000                       2065  DC XL16'00000000F800000000000000F8000000'
0000C180  D4C4C2D9 40D5C640                       2066  DC CL48'MDBR NF -2.0/-0 FPCR'
0000C1B0  00000000 F8000000                       2067  DC XL16'00000000F800000000000000F8000000'
0000C1C0  D4C4C240 D5C64060                       2068  DC CL48'MDB NF -2.0/+0 FPCR'
0000C1F0  00000000 F8000000                       2069  DC XL16'00000000F800000000000000F8000000'
0000C200  D4C4C2D9 40D5C640                       2070  DC CL48'MDBR NF -2.0/+2.0 FPCR'
0000C230  00000000 F8000000                       2071  DC XL16'00000000F800000000000000F8000000'
0000C240  D4C4C240 D5C64060                       2072  DC CL48'MDB NF -2.0/+inf FPCR'
0000C270  00000000 F8000000                       2073  DC XL16'00000000F800000000000000F8000000'
0000C280  D4C4C2D9 40D5C640                       2074  DC CL48'MDBR NF -2.0/-QNaN FPCR'
0000C2B0  00000000 F8000000                       2075  DC XL16'00000000F800000000000000F8000000'
0000C2C0  D4C4C240 D5C64060                       2076  DC CL48'MDB NF -2.0/+SNaN FPCR'
0000C2F0  00800000 F8008000                       2077  DC XL16'00800000F800800000800000F8008000'
0000C300  D4C4C2D9 40D5C640                       2078  DC CL48'MDBR NF -0/-inf FPCR'
0000C330  00800000 F8008000                       2079  DC XL16'00800000F800800000800000F8008000'
0000C340  D4C4C240 D5C64060                       2080  DC CL48'MDB NF -0/-2.0 FPCR'
0000C370  00000000 F8000000                       2081  DC XL16'00000000F800000000000000F8000000'
0000C380  D4C4C2D9 40D5C640                       2082  DC CL48'MDBR NF -0/-0 FPCR'
0000C3B0  00000000 F8000000                       2083  DC XL16'00000000F800000000000000F8000000'
0000C3C0  D4C4C240 D5C64060                       2084  DC CL48'MDB NF -0/+0 FPCR'
0000C3F0  00000000 F8000000                       2085  DC XL16'00000000F800000000000000F8000000'
0000C400  D4C4C2D9 40D5C640                       2086  DC CL48'MDBR NF -0/+2.0 FPCR'
0000C430  00000000 F8000000                       2087  DC XL16'00000000F800000000000000F8000000'
0000C440  D4C4C240 D5C64060                       2088  DC CL48'MDB NF -0/+inf FPCR'
0000C470  00800000 F8008000                       2089  DC XL16'00800000F800800000800000F8008000'
0000C480  D4C4C2D9 40D5C640                       2090  DC CL48'MDBR NF -0/-QNaN FPCR'
0000C4B0  00000000 F8000000                       2091  DC XL16'00000000F800000000000000F8000000'
0000C4C0  D4C4C240 D5C64060                       2092  DC CL48'MDB NF -0/+SNaN FPCR'
0000C4F0  00800000 F8008000                       2093  DC XL16'00800000F800800000800000F8008000'
0000C500  D4C4C2D9 40D5C640                       2094  DC CL48'MDBR NF +0/-inf FPCR'
0000C530  00800000 F8008000                       2095  DC XL16'00800000F800800000800000F8008000'
0000C540  D4C4C240 D5C6404E                       2096  DC CL48'MDB NF +0/-2.0 FPCR'
0000C570  00000000 F8000000                       2097  DC XL16'00000000F800000000000000F8000000'
0000C580  D4C4C2D9 40D5C640                       2098  DC CL48'MDBR NF +0/-0 FPCR'
0000C5B0  00000000 F8000000                       2099  DC XL16'00000000F800000000000000F8000000'
0000C5C0  D4C4C240 D5C6404E                       2100  DC CL48'MDB NF +0/+0 FPCR'
0000C5F0  00000000 F8000000                       2101  DC XL16'00000000F800000000000000F8000000'
0000C600  D4C4C2D9 40D5C640                       2102  DC CL48'MDBR NF +0/+2.0 FPCR'
0000C630  00000000 F8000000                       2103  DC XL16'00000000F800000000000000F8000000'
0000C640  D4C4C240 D5C6404E                       2104  DC CL48'MDB NF +0/+inf FPCR'
0000C670  00800000 F8008000                       2105  DC XL16'00800000F800800000800000F8008000'
0000C680  D4C4C2D9 40D5C640                       2106  DC CL48'MDBR NF +0/-QNaN FPCR'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    45

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000C6B0  00000000 F8000000                       2107  DC XL16'00000000F800000000000000F8000000'
0000C6C0  D4C4C240 D5C6404E                       2108  DC CL48'MDB NF +0/+SNaN FPCR'
0000C6F0  00800000 F8008000                       2109  DC XL16'00800000F800800000800000F8008000'
0000C700  D4C4C2D9 40D5C640                       2110  DC CL48'MDBR NF +2.0/-inf FPCR'
0000C730  00000000 F8000000                       2111  DC XL16'00000000F800000000000000F8000000'
0000C740  D4C4C240 D5C6404E                       2112  DC CL48'MDB NF +2.0/-2.0 FPCR'
0000C770  00000000 F8000000                       2113  DC XL16'00000000F800000000000000F8000000'
0000C780  D4C4C2D9 40D5C640                       2114  DC CL48'MDBR NF +2.0/-0 FPCR'
0000C7B0  00000000 F8000000                       2115  DC XL16'00000000F800000000000000F8000000'
0000C7C0  D4C4C240 D5C6404E                       2116  DC CL48'MDB NF +2.0/+0 FPCR'
0000C7F0  00000000 F8000000                       2117  DC XL16'00000000F800000000000000F8000000'
0000C800  D4C4C2D9 40D5C640                       2118  DC CL48'MDBR NF +2.0/+2.0 FPCR'
0000C830  00000000 F8000000                       2119  DC XL16'00000000F800000000000000F8000000'
0000C840  D4C4C240 D5C6404E                       2120  DC CL48'MDB NF +2.0/+inf FPCR'
0000C870  00000000 F8000000                       2121  DC XL16'00000000F800000000000000F8000000'
0000C880  D4C4C2D9 40D5C640                       2122  DC CL48'MDBR NF +2.0/-QNaN FPCR'
0000C8B0  00000000 F8000000                       2123  DC XL16'00000000F800000000000000F8000000'
0000C8C0  D4C4C240 D5C6404E                       2124  DC CL48'MDB NF +2.0/+SNaN FPCR'
0000C8F0  00800000 F8008000                       2125  DC XL16'00800000F800800000800000F8008000'
0000C900  D4C4C2D9 40D5C640                       2126  DC CL48'MDBR NF +inf/-inf FPCR'
0000C930  00000000 F8000000                       2127  DC XL16'00000000F800000000000000F8000000'
0000C940  D4C4C240 D5C6404E                       2128  DC CL48'MDB NF +inf/-2.0 FPCR'
0000C970  00000000 F8000000                       2129  DC XL16'00000000F800000000000000F8000000'
0000C980  D4C4C2D9 40D5C640                       2130  DC CL48'MDBR NF +inf/-0 FPCR'
0000C9B0  00800000 F8008000                       2131  DC XL16'00800000F800800000800000F8008000'
0000C9C0  D4C4C240 D5C6404E                       2132  DC CL48'MDB NF +inf/+0 FPCR'
0000C9F0  00800000 F8008000                       2133  DC XL16'00800000F800800000800000F8008000'
0000CA00  D4C4C2D9 40D5C640                       2134  DC CL48'MDBR NF +inf/+2.0 FPCR'
0000CA30  00000000 F8000000                       2135  DC XL16'00000000F800000000000000F8000000'
0000CA40  D4C4C240 D5C6404E                       2136  DC CL48'MDB NF +inf/+inf FPCR'
0000CA70  00000000 F8000000                       2137  DC XL16'00000000F800000000000000F8000000'
0000CA80  D4C4C2D9 40D5C640                       2138  DC CL48'MDBR NF +inf/-QNaN FPCR'
0000CAB0  00000000 F8000000                       2139  DC XL16'00000000F800000000000000F8000000'
0000CAC0  D4C4C240 D5C6404E                       2140  DC CL48'MDB NF +inf/+SNaN FPCR'
0000CAF0  00800000 F8008000                       2141  DC XL16'00800000F800800000800000F8008000'
0000CB00  D4C4C2D9 40D5C640                       2142  DC CL48'MDBR NF -QNaN/-inf FPCR'
0000CB30  00000000 F8000000                       2143  DC XL16'00000000F800000000000000F8000000'
0000CB40  D4C4C240 D5C64060                       2144  DC CL48'MDB NF -QNaN/-2.0 FPCR'
0000CB70  00000000 F8000000                       2145  DC XL16'00000000F800000000000000F8000000'
0000CB80  D4C4C2D9 40D5C640                       2146  DC CL48'MDBR NF -QNaN/-0 FPCR'
0000CBB0  00000000 F8000000                       2147  DC XL16'00000000F800000000000000F8000000'
0000CBC0  D4C4C240 D5C64060                       2148  DC CL48'MDB NF -QNaN/+0 FPCR'
0000CBF0  00000000 F8000000                       2149  DC XL16'00000000F800000000000000F8000000'
0000CC00  D4C4C2D9 40D5C640                       2150  DC CL48'MDBR NF -QNaN/+2.0 FPCR'
0000CC30  00000000 F8000000                       2151  DC XL16'00000000F800000000000000F8000000'
0000CC40  D4C4C240 D5C64060                       2152  DC CL48'MDB NF -QNaN/+inf FPCR'
0000CC70  00000000 F8000000                       2153  DC XL16'00000000F800000000000000F8000000'
0000CC80  D4C4C2D9 40D5C640                       2154  DC CL48'MDBR NF -QNaN/-QNaN FPCR'
0000CCB0  00000000 F8000000                       2155  DC XL16'00000000F800000000000000F8000000'
0000CCC0  D4C4C240 D5C64060                       2156  DC CL48'MDB NF -QNaN/+SNaN FPCR'
0000CCF0  00800000 F8008000                       2157  DC XL16'00800000F800800000800000F8008000'
0000CD00  D4C4C2D9 40D5C640                       2158  DC CL48'MDBR NF +SNaN/-inf FPCR'
0000CD30  00800000 F8008000                       2159  DC XL16'00800000F800800000800000F8008000'
0000CD40  D4C4C240 D5C6404E                       2160  DC CL48'MDB NF +SNaN/-2.0 FPCR'
0000CD70  00800000 F8008000                       2161  DC XL16'00800000F800800000800000F8008000'
0000CD80  D4C4C2D9 40D5C640                       2162  DC CL48'MDBR NF +SNaN/-0 FPCR'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    46

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000CDB0  00800000 F8008000                       2163  DC XL16'00800000F800800000800000F8008000'
0000CDC0  D4C4C240 D5C6404E                       2164  DC CL48'MDB NF +SNaN/+0 FPCR'
0000CDF0  00800000 F8008000                       2165  DC XL16'00800000F800800000800000F8008000'
0000CE00  D4C4C2D9 40D5C640                       2166  DC CL48'MDBR NF +SNaN/+2.0 FPCR'
0000CE30  00800000 F8008000                       2167  DC XL16'00800000F800800000800000F8008000'
0000CE40  D4C4C240 D5C6404E                       2168  DC CL48'MDB NF +SNaN/+inf FPCR'
0000CE70  00800000 F8008000                       2169  DC XL16'00800000F800800000800000F8008000'
0000CE80  D4C4C2D9 40D5C640                       2170  DC CL48'MDBR NF +SNaN/-QNaN FPCR'
0000CEB0  00800000 F8008000                       2171  DC XL16'00800000F800800000800000F8008000'
0000CEC0  D4C4C240 D5C6404E                       2172  DC CL48'MDB NF +SNaN/+SNaN FPCR'
0000CEF0  00800000 F8008000                       2173  DC XL16'00800000F800800000800000F8008000'
                              00000040  00000001  2174 LBFPNFFL_NUM EQU (*-LBFPNFFL_GOOD)/64
                                                  2175 *
                                                  2176 *
                              0000CF00  00000001  2177 LBFPOUT_GOOD EQU *
0000CF00  D4C4C2D9 40C640D6                       2178  DC CL48'MDBR F Ovfl NT'
0000CF30  FFF00000 00000000                       2179  DC XL16'FFF0000000000000DFEFFFFFFFFFFFFE'
0000CF40  D4C4C240 C640D6A5                       2180  DC CL48'MDB F Ovfl Tr'
0000CF70  FFF00000 00000000                       2181  DC XL16'FFF0000000000000DFEFFFFFFFFFFFFE'
0000CF80  D4C4C2D9 40C640E4                       2182  DC CL48'MDBR F Ufl 1 NT'
0000CFB0  00000000 00000000                       2183  DC XL16'0000000000000000203FFFFFFFFFFFFF'
0000CFC0  D4C4C240 C640E486                       2184  DC CL48'MDB F Ufl 1 Tr'
0000CFF0  00000000 00000000                       2185  DC XL16'0000000000000000203FFFFFFFFFFFFF'
0000D000  D4C4C2D9 40C640E4                       2186  DC CL48'MDBR F Ufl 2 NT'
0000D030  00000000 00000000                       2187  DC XL16'00000000000000001FDE1E0000000000'
0000D040  D4C4C240 C640E486                       2188  DC CL48'MDB F Ufl 2 Tr'
0000D070  00000000 00000000                       2189  DC XL16'00000000000000001FDE1E0000000000'
0000D080  D4C4C2D9 40C640D5                       2190  DC CL48'MDBR F Nmin NT'
0000D0B0  001FFFFF FFFFFFFE                       2191  DC XL16'001FFFFFFFFFFFFE001FFFFFFFFFFFFE'
0000D0C0  D4C4C240 C640D594                       2192  DC CL48'MDB F Nmin Tr'
0000D0F0  001FFFFF FFFFFFFE                       2193  DC XL16'001FFFFFFFFFFFFE001FFFFFFFFFFFFE'
0000D100  D4C4C2D9 40C640C9                       2194  DC CL48'MDBR F Incr NT'
0000D130  3FF10000 0000000D                       2195  DC XL16'3FF100000000000D3FF100000000000D'
0000D140  D4C4C240 C640C995                       2196  DC CL48'MDB F Incr Tr'
0000D170  3FF10000 0000000D                       2197  DC XL16'3FF100000000000D3FF100000000000D'
0000D180  D4C4C2D9 40C640E3                       2198  DC CL48'MDBR F Trun NT'
0000D1B0  3FF10000 00000007                       2199  DC XL16'3FF10000000000073FF1000000000007'
0000D1C0  D4C4C240 C640E399                       2200  DC CL48'MDB F Trun Tr'
0000D1F0  3FF10000 00000007                       2201  DC XL16'3FF10000000000073FF1000000000007'
                              0000000C  00000001  2202 LBFPOUT_NUM EQU (*-LBFPOUT_GOOD)/64
                                                  2203 *
                                                  2204 *
                              0000D200  00000001  2205 LBFPFLGS_GOOD EQU *
0000D200  D4C4C2D9 61D4C4C2                       2206  DC CL48'MDBR/MDB F Ovfl FPCR'
0000D230  00280000 F8002800                       2207  DC XL16'00280000F800280000280000F8002800'
0000D240  D4C4C2D9 61D4C4C2                       2208  DC CL48'MDBR/MDB F Ufl 1 FPCR'
0000D270  00180000 F8001000                       2209  DC XL16'00180000F800100000180000F8001000'
0000D280  D4C4C2D9 61D4C4C2                       2210  DC CL48'MDBR/MDB F Ufl 2 FPCR'
0000D2B0  00180000 F8001000                       2211  DC XL16'00180000F800100000180000F8001000'
0000D2C0  D4C4C2D9 61D4C4C2                       2212  DC CL48'MDBR/MDB F Nmin FPCR'
0000D2F0  00000000 F8000000                       2213  DC XL16'00000000F800000000000000F8000000'
0000D300  D4C4C2D9 61D4C4C2                       2214  DC CL48'MDBR/MDB F Incr FPCR'
0000D330  00080000 F8000C00                       2215  DC XL16'00080000F8000C0000080000F8000C00'
0000D340  D4C4C2D9 61D4C4C2                       2216  DC CL48'MDBR/MDB F Trun FPCR'
0000D370  00080000 F8000800                       2217  DC XL16'00080000F800080000080000F8000800'
                              00000006  00000001  2218 LBFPFLGS_NUM EQU (*-LBFPFLGS_GOOD)/64
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    47

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  2219 *
                                                  2220 *
                              0000D380  00000001  2221 LBFPRMO_GOOD EQU *
0000D380  D4C4C2D9 40D9D440                       2222  DC CL48'MDBR RM +NZ RNTE'
0000D3B0  3FF10000 00000007                       2223  DC XL16'3FF10000000000073FF1000000000007'
0000D3C0  D4C4C240 D9D4404E                       2224  DC CL48'MDB RM +NZ RZ'
0000D3F0  3FF10000 00000007                       2225  DC XL16'3FF10000000000073FF1000000000007'
0000D400  D4C4C2D9 40D9D440                       2226  DC CL48'MDBR RM +NZ RP'
0000D430  3FF10000 00000008                       2227  DC XL16'3FF10000000000083FF1000000000008'
0000D440  D4C4C240 D9D4404E                       2228  DC CL48'MDB RM +NZ RM'
0000D470  3FF10000 00000007                       2229  DC XL16'3FF10000000000073FF1000000000007'
0000D480  D4C4C2D9 40D9D440                       2230  DC CL48'MDBR RM +NZ RFS'
0000D4B0  3FF10000 00000007                       2231  DC XL16'3FF10000000000073FF1000000000007'
0000D4C0  D4C4C240 D9D44060                       2232  DC CL48'MDB RM -NZ RNTE'
0000D4F0  BFF10000 00000007                       2233  DC XL16'BFF1000000000007BFF1000000000007'
0000D500  D4C4C2D9 40D9D440                       2234  DC CL48'MDBR RM -NZ RZ'
0000D530  BFF10000 00000007                       2235  DC XL16'BFF1000000000007BFF1000000000007'
0000D540  D4C4C240 D9D44060                       2236  DC CL48'MDB RM -NZ RP'
0000D570  BFF10000 00000007                       2237  DC XL16'BFF1000000000007BFF1000000000007'
0000D580  D4C4C2D9 40D9D440                       2238  DC CL48'MDBR RM -NZ RM'
0000D5B0  BFF10000 00000008                       2239  DC XL16'BFF1000000000008BFF1000000000008'
0000D5C0  D4C4C240 D9D44060                       2240  DC CL48'MDB RM -NZ RFS'
0000D5F0  BFF10000 00000007                       2241  DC XL16'BFF1000000000007BFF1000000000007'
0000D600  D4C4C2D9 40D9D440                       2242  DC CL48'MDBR RM +NA RNTE'
0000D630  3FF10000 0000000D                       2243  DC XL16'3FF100000000000D3FF100000000000D'
0000D640  D4C4C240 D9D4404E                       2244  DC CL48'MDB RM +NA RZ'
0000D670  3FF10000 0000000C                       2245  DC XL16'3FF100000000000C3FF100000000000C'
0000D680  D4C4C2D9 40D9D440                       2246  DC CL48'MDBR RM +NA RP'
0000D6B0  3FF10000 0000000D                       2247  DC XL16'3FF100000000000D3FF100000000000D'
0000D6C0  D4C4C240 D9D4404E                       2248  DC CL48'MDB RM +NA RM'
0000D6F0  3FF10000 0000000C                       2249  DC XL16'3FF100000000000C3FF100000000000C'
0000D700  D4C4C2D9 40D9D440                       2250  DC CL48'MDBR RM +NA RFS'
0000D730  3FF10000 0000000D                       2251  DC XL16'3FF100000000000D3FF100000000000D'
0000D740  D4C4C240 D9D44060                       2252  DC CL48'MDB RM -NA RNTE'
0000D770  BFF10000 0000000D                       2253  DC XL16'BFF100000000000DBFF100000000000D'
0000D780  D4C4C2D9 40D9D440                       2254  DC CL48'MDBR RM -NA RZ'
0000D7B0  BFF10000 0000000C                       2255  DC XL16'BFF100000000000CBFF100000000000C'
0000D7C0  D4C4C240 D9D44060                       2256  DC CL48'MDB RM -NA RP'
0000D7F0  BFF10000 0000000C                       2257  DC XL16'BFF100000000000CBFF100000000000C'
0000D800  D4C4C2D9 40D9D440                       2258  DC CL48'MDBR RM -NA RM'
0000D830  BFF10000 0000000D                       2259  DC XL16'BFF100000000000DBFF100000000000D'
0000D840  D4C4C240 D9D44060                       2260  DC CL48'MDB RM -NA RFS'
0000D870  BFF10000 0000000D                       2261  DC XL16'BFF100000000000DBFF100000000000D'
0000D880  D4C4C2D9 40D9D440                       2262  DC CL48'MDBR RM +TZ RNTE'
0000D8B0  3FF10000 00000008                       2263  DC XL16'3FF10000000000083FF1000000000008'
0000D8C0  D4C4C240 D9D4404E                       2264  DC CL48'MDB RM +TZ RZ'
0000D8F0  3FF10000 00000008                       2265  DC XL16'3FF10000000000083FF1000000000008'
0000D900  D4C4C2D9 40D9D440                       2266  DC CL48'MDBR RM +TZ RP'
0000D930  3FF10000 00000009                       2267  DC XL16'3FF10000000000093FF1000000000009'
0000D940  D4C4C240 D9D4404E                       2268  DC CL48'MDB RM +TZ RM'
0000D970  3FF10000 00000008                       2269  DC XL16'3FF10000000000083FF1000000000008'
0000D980  D4C4C2D9 40D9D440                       2270  DC CL48'MDBR RM +TZ RFS'
0000D9B0  3FF10000 00000009                       2271  DC XL16'3FF10000000000093FF1000000000009'
0000D9C0  D4C4C240 D9D44060                       2272  DC CL48'MDB RM -TZ RNTE'
0000D9F0  BFF10000 00000008                       2273  DC XL16'BFF1000000000008BFF1000000000008'
0000DA00  D4C4C2D9 40D9D440                       2274  DC CL48'MDBR RM -TZ RZ'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    48

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000DA30  BFF10000 00000008                       2275  DC XL16'BFF1000000000008BFF1000000000008'
0000DA40  D4C4C240 D9D44060                       2276  DC CL48'MDB RM -TZ RP'
0000DA70  BFF10000 00000008                       2277  DC XL16'BFF1000000000008BFF1000000000008'
0000DA80  D4C4C2D9 40D9D440                       2278  DC CL48'MDBR RM -TZ RM'
0000DAB0  BFF10000 00000009                       2279  DC XL16'BFF1000000000009BFF1000000000009'
0000DAC0  D4C4C240 D9D44060                       2280  DC CL48'MDB RM -TZ RFS'
0000DAF0  BFF10000 00000009                       2281  DC XL16'BFF1000000000009BFF1000000000009'
0000DB00  D4C4C2D9 40D9D440                       2282  DC CL48'MDBR RM +TA RNTE'
0000DB30  3FF10000 0000001A                       2283  DC XL16'3FF100000000001A3FF100000000001A'
0000DB40  D4C4C240 D9D4404E                       2284  DC CL48'MDB RM +TA RZ'
0000DB70  3FF10000 00000019                       2285  DC XL16'3FF10000000000193FF1000000000019'
0000DB80  D4C4C2D9 40D9D440                       2286  DC CL48'MDBR RM +TA RP'
0000DBB0  3FF10000 0000001A                       2287  DC XL16'3FF100000000001A3FF100000000001A'
0000DBC0  D4C4C240 D9D4404E                       2288  DC CL48'MDB RM +TA RM'
0000DBF0  3FF10000 00000019                       2289  DC XL16'3FF10000000000193FF1000000000019'
0000DC00  D4C4C2D9 40D9D440                       2290  DC CL48'MDBR RM +TA RFS'
0000DC30  3FF10000 00000019                       2291  DC XL16'3FF10000000000193FF1000000000019'
0000DC40  D4C4C240 D9D44060                       2292  DC CL48'MDB RM -TA RNTE'
0000DC70  BFF10000 0000001A                       2293  DC XL16'BFF100000000001ABFF100000000001A'
0000DC80  D4C4C2D9 40D9D440                       2294  DC CL48'MDBR RM -TA RZ'
0000DCB0  BFF10000 00000019                       2295  DC XL16'BFF1000000000019BFF1000000000019'
0000DCC0  D4C4C240 D9D44060                       2296  DC CL48'MDB RM -TA RP'
0000DCF0  BFF10000 00000019                       2297  DC XL16'BFF1000000000019BFF1000000000019'
0000DD00  D4C4C2D9 40D9D440                       2298  DC CL48'MDBR RM -TA RM'
0000DD30  BFF10000 0000001A                       2299  DC XL16'BFF100000000001ABFF100000000001A'
0000DD40  D4C4C240 D9D44060                       2300  DC CL48'MDB RM -TA RFS'
0000DD70  BFF10000 00000019                       2301  DC XL16'BFF1000000000019BFF1000000000019'
                              00000028  00000001  2302 LBFPRMO_NUM EQU (*-LBFPRMO_GOOD)/64
                                                  2303 *
                                                  2304 *
                              0000DD80  00000001  2305 LBFPRMOF_GOOD EQU *
0000DD80  D4C4C2D9 61D4C4C2                       2306  DC CL48'MDBR/MDB RM +NZ RNTE, RZ FPCR'
0000DDB0  00080000 00080000                       2307  DC XL16'00080000000800000008000100080001'
0000DDC0  D4C4C2D9 61D4C4C2                       2308  DC CL48'MDBR/MDB RM +NZ RP, RM FPCR'
0000DDF0  00080002 00080002                       2309  DC XL16'00080002000800020008000300080003'
0000DE00  D4C4C2D9 61D4C4C2                       2310  DC CL48'MDBR/MDB RM +NZ RFS FPCR'
0000DE30  00080007 00080007                       2311  DC XL16'00080007000800070000000000000000'
0000DE40  D4C4C2D9 61D4C4C2                       2312  DC CL48'MDBR/MDB RM +NZ RNTE, RZ FPCR'
0000DE70  00080000 00080000                       2313  DC XL16'00080000000800000008000100080001'
0000DE80  D4C4C2D9 61D4C4C2                       2314  DC CL48'MDBR/MDB RM +NZ RP, RM FPCR'
0000DEB0  00080002 00080002                       2315  DC XL16'00080002000800020008000300080003'
0000DEC0  D4C4C2D9 61D4C4C2                       2316  DC CL48'MDBR/MDB RM -NZ RFS FPCR'
0000DEF0  00080007 00080007                       2317  DC XL16'00080007000800070000000000000000'
0000DF00  D4C4C2D9 61D4C4C2                       2318  DC CL48'MDBR/MDB RM -NZ RNTE, RZ FPCR'
0000DF30  00080000 00080000                       2319  DC XL16'00080000000800000008000100080001'
0000DF40  D4C4C2D9 61D4C4C2                       2320  DC CL48'MDBR/MDB RM -NZ RP, RM FPCR'
0000DF70  00080002 00080002                       2321  DC XL16'00080002000800020008000300080003'
0000DF80  D4C4C2D9 61D4C4C2                       2322  DC CL48'MDBR/MDB RM -NZ RFS FPCR'
0000DFB0  00080007 00080007                       2323  DC XL16'00080007000800070000000000000000'
0000DFC0  D4C4C2D9 61D4C4C2                       2324  DC CL48'MDBR/MDB RM -NZ RNTE, RZ FPCR'
0000DFF0  00080000 00080000                       2325  DC XL16'00080000000800000008000100080001'
0000E000  D4C4C2D9 61D4C4C2                       2326  DC CL48'MDBR/MDB RM -NA RP, RM FPCR'
0000E030  00080002 00080002                       2327  DC XL16'00080002000800020008000300080003'
0000E040  D4C4C2D9 61D4C4C2                       2328  DC CL48'MDBR/MDB RM -NA RFS FPCR'
0000E070  00080007 00080007                       2329  DC XL16'00080007000800070000000000000000'
0000E080  D4C4C2D9 61D4C4C2                       2330  DC CL48'MDBR/MDB RM +TZ RNTE, RZ FPCR'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    49

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000E0B0  00080000 00080000                       2331  DC XL16'00080000000800000008000100080001'
0000E0C0  D4C4C2D9 61D4C4C2                       2332  DC CL48'MDBR/MDB RM +TZ RP, RM FPCR'
0000E0F0  00080002 00080002                       2333  DC XL16'00080002000800020008000300080003'
0000E100  D4C4C2D9 61D4C4C2                       2334  DC CL48'MDBR/MDB RM +TZ RFS FPCR'
0000E130  00080007 00080007                       2335  DC XL16'00080007000800070000000000000000'
0000E140  D4C4C2D9 61D4C4C2                       2336  DC CL48'MDBR/MDB RM -TZ RNTE, RZ FPCR'
0000E170  00080000 00080000                       2337  DC XL16'00080000000800000008000100080001'
0000E180  D4C4C2D9 61D4C4C2                       2338  DC CL48'MDBR/MDB RM -TZ RP, RM FPCR'
0000E1B0  00080002 00080002                       2339  DC XL16'00080002000800020008000300080003'
0000E1C0  D4C4C2D9 61D4C4C2                       2340  DC CL48'MDBR/MDB RM -TZ RFS FPCR'
0000E1F0  00080007 00080007                       2341  DC XL16'00080007000800070000000000000000'
0000E200  D4C4C2D9 61D4C4C2                       2342  DC CL48'MDBR/MDB RM +TA RNTE, RZ FPCR'
0000E230  00080000 00080000                       2343  DC XL16'00080000000800000008000100080001'
0000E240  D4C4C2D9 61D4C4C2                       2344  DC CL48'MDBR/MDB RM +TA RP, RM FPCR'
0000E270  00080002 00080002                       2345  DC XL16'00080002000800020008000300080003'
0000E280  D4C4C2D9 61D4C4C2                       2346  DC CL48'MDBR/MDB RM +TA RFS FPCR'
0000E2B0  00080007 00080007                       2347  DC XL16'00080007000800070000000000000000'
0000E2C0  D4C4C2D9 61D4C4C2                       2348  DC CL48'MDBR/MDB RM -TA RNTE, RZ FPCR'
0000E2F0  00080000 00080000                       2349  DC XL16'00080000000800000008000100080001'
0000E300  D4C4C2D9 61D4C4C2                       2350  DC CL48'MDBR/MDB RM -TA RP, RM FPCR'
0000E330  00080002 00080002                       2351  DC XL16'00080002000800020008000300080003'
0000E340  D4C4C2D9 61D4C4C2                       2352  DC CL48'MDBR/MDB RM -TA RFS FPCR'
0000E370  00080007 00080007                       2353  DC XL16'00080007000800070000000000000000'
                              00000018  00000001  2354 LBFPRMOF_NUM EQU (*-LBFPRMOF_GOOD)/64
                                                  2355 *
                                                  2356 *
                              0000E380  00000001  2357 XBFPNFOT_GOOD EQU *
0000E380  D4E7C2D9 40D5C640                       2358  DC CL48'MXBR NF -inf/-inf NT'
0000E3B0  7FFF0000 00000000                       2359  DC XL16'7FFF0000000000000000000000000000'
0000E3C0  D4E7C2D9 40D5C640                       2360  DC CL48'MXBR NF -inf/-inf Tr'
0000E3F0  7FFF0000 00000000                       2361  DC XL16'7FFF0000000000000000000000000000'
0000E400  D4E7C2D9 40D5C640                       2362  DC CL48'MXBR NF -inf/-2.0 NT'
0000E430  7FFF0000 00000000                       2363  DC XL16'7FFF0000000000000000000000000000'
0000E440  D4E7C2D9 40D5C640                       2364  DC CL48'MXBR NF -inf/-2.0 Tr'
0000E470  7FFF0000 00000000                       2365  DC XL16'7FFF0000000000000000000000000000'
0000E480  D4E7C2D9 40D5C640                       2366  DC CL48'MXBR NF -inf/-0 NT'
0000E4B0  7FFF8000 00000000                       2367  DC XL16'7FFF8000000000000000000000000000'
0000E4C0  D4E7C2D9 40D5C640                       2368  DC CL48'MXBR NF -inf/-0 Tr'
0000E4F0  FFFF0000 00000000                       2369  DC XL16'FFFF0000000000000000000000000000'
0000E500  D4E7C2D9 40D5C640                       2370  DC CL48'MXBR NF -inf/+0 NT'
0000E530  7FFF8000 00000000                       2371  DC XL16'7FFF8000000000000000000000000000'
0000E540  D4E7C2D9 40D5C640                       2372  DC CL48'MXBR NF -inf/+0 Tr'
0000E570  FFFF0000 00000000                       2373  DC XL16'FFFF0000000000000000000000000000'
0000E580  D4E7C2D9 40D5C640                       2374  DC CL48'MXBR NF -inf/+2.0 NT'
0000E5B0  FFFF0000 00000000                       2375  DC XL16'FFFF0000000000000000000000000000'
0000E5C0  D4E7C2D9 40D5C640                       2376  DC CL48'MXBR NF -inf/+2.0 Tr'
0000E5F0  FFFF0000 00000000                       2377  DC XL16'FFFF0000000000000000000000000000'
0000E600  D4E7C2D9 40D5C640                       2378  DC CL48'MXBR NF -inf/+inf NT'
0000E630  FFFF0000 00000000                       2379  DC XL16'FFFF0000000000000000000000000000'
0000E640  D4E7C2D9 40D5C640                       2380  DC CL48'MXBR NF -inf/+inf Tr'
0000E670  FFFF0000 00000000                       2381  DC XL16'FFFF0000000000000000000000000000'
0000E680  D4E7C2D9 40D5C640                       2382  DC CL48'MXBR NF -inf/-QNaN NT'
0000E6B0  FFFF8B00 00000000                       2383  DC XL16'FFFF8B00000000000000000000000000'
0000E6C0  D4E7C2D9 40D5C640                       2384  DC CL48'MXBR NF -inf/-QNaN Tr'
0000E6F0  FFFF8B00 00000000                       2385  DC XL16'FFFF8B00000000000000000000000000'
0000E700  D4E7C2D9 40D5C640                       2386  DC CL48'MXBR NF -inf/+SNaN NT'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    50

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000E730  7FFF8A00 00000000                       2387  DC XL16'7FFF8A00000000000000000000000000'
0000E740  D4E7C2D9 40D5C640                       2388  DC CL48'MXBR NF -inf/+SNaN Tr'
0000E770  FFFF0000 00000000                       2389  DC XL16'FFFF0000000000000000000000000000'
0000E780  D4E7C2D9 40D5C640                       2390  DC CL48'MXBR NF -2.0/-inf NT'
0000E7B0  7FFF0000 00000000                       2391  DC XL16'7FFF0000000000000000000000000000'
0000E7C0  D4E7C2D9 40D5C640                       2392  DC CL48'MXBR NF -2.0/-inf Tr'
0000E7F0  7FFF0000 00000000                       2393  DC XL16'7FFF0000000000000000000000000000'
0000E800  D4E7C2D9 40D5C640                       2394  DC CL48'MXBR NF -2.0/-2.0 NT'
0000E830  40010000 00000000                       2395  DC XL16'40010000000000000000000000000000'
0000E840  D4E7C2D9 40D5C640                       2396  DC CL48'MXBR NF -2.0/-2.0 Tr'
0000E870  40010000 00000000                       2397  DC XL16'40010000000000000000000000000000'
0000E880  D4E7C2D9 40D5C640                       2398  DC CL48'MXBR NF -2.0/-0 NT'
0000E8B0  00000000 00000000                       2399  DC XL16'00000000000000000000000000000000'
0000E8C0  D4E7C2D9 40D5C640                       2400  DC CL48'MXBR NF -2.0/-0 Tr'
0000E8F0  00000000 00000000                       2401  DC XL16'00000000000000000000000000000000'
0000E900  D4E7C2D9 40D5C640                       2402  DC CL48'MXBR NF -2.0/+0 NT'
0000E930  80000000 00000000                       2403  DC XL16'80000000000000000000000000000000'
0000E940  D4E7C2D9 40D5C640                       2404  DC CL48'MXBR NF -2.0/+0 Tr'
0000E970  80000000 00000000                       2405  DC XL16'80000000000000000000000000000000'
0000E980  D4E7C2D9 40D5C640                       2406  DC CL48'MXBR NF -2.0/+2.0 NT'
0000E9B0  C0010000 00000000                       2407  DC XL16'C0010000000000000000000000000000'
0000E9C0  D4E7C2D9 40D5C640                       2408  DC CL48'MXBR NF -2.0/+2.0 Tr'
0000E9F0  C0010000 00000000                       2409  DC XL16'C0010000000000000000000000000000'
0000EA00  D4E7C2D9 40D5C640                       2410  DC CL48'MXBR NF -2.0/+inf NT'
0000EA30  FFFF0000 00000000                       2411  DC XL16'FFFF0000000000000000000000000000'
0000EA40  D4E7C2D9 40D5C640                       2412  DC CL48'MXBR NF -2.0/+inf Tr'
0000EA70  FFFF0000 00000000                       2413  DC XL16'FFFF0000000000000000000000000000'
0000EA80  D4E7C2D9 40D5C640                       2414  DC CL48'MXBR NF -2.0/-QNaN NT'
0000EAB0  FFFF8B00 00000000                       2415  DC XL16'FFFF8B00000000000000000000000000'
0000EAC0  D4E7C2D9 40D5C640                       2416  DC CL48'MXBR NF -2.0/-QNaN Tr'
0000EAF0  FFFF8B00 00000000                       2417  DC XL16'FFFF8B00000000000000000000000000'
0000EB00  D4E7C2D9 40D5C640                       2418  DC CL48'MXBR NF -2.0/+SNaN NT'
0000EB30  7FFF8A00 00000000                       2419  DC XL16'7FFF8A00000000000000000000000000'
0000EB40  D4E7C2D9 40D5C640                       2420  DC CL48'MXBR NF -2.0/+SNaN Tr'
0000EB70  C0000000 00000000                       2421  DC XL16'C0000000000000000000000000000000'
0000EB80  D4E7C2D9 40D5C640                       2422  DC CL48'MXBR NF -0/-inf NT'
0000EBB0  7FFF8000 00000000                       2423  DC XL16'7FFF8000000000000000000000000000'
0000EBC0  D4E7C2D9 40D5C640                       2424  DC CL48'MXBR NF -0/-inf Tr'
0000EBF0  80000000 00000000                       2425  DC XL16'80000000000000000000000000000000'
0000EC00  D4E7C2D9 40D5C640                       2426  DC CL48'MXBR NF -0/-2.0 NT'
0000EC30  00000000 00000000                       2427  DC XL16'00000000000000000000000000000000'
0000EC40  D4E7C2D9 40D5C640                       2428  DC CL48'MXBR NF -0/-2.0 Tr'
0000EC70  00000000 00000000                       2429  DC XL16'00000000000000000000000000000000'
0000EC80  D4E7C2D9 40D5C640                       2430  DC CL48'MXBR NF -0/-0 NT'
0000ECB0  00000000 00000000                       2431  DC XL16'00000000000000000000000000000000'
0000ECC0  D4E7C2D9 40D5C640                       2432  DC CL48'MXBR NF -0/-0 Tr'
0000ECF0  00000000 00000000                       2433  DC XL16'00000000000000000000000000000000'
0000ED00  D4E7C2D9 40D5C640                       2434  DC CL48'MXBR NF -0/+0 NT'
0000ED30  80000000 00000000                       2435  DC XL16'80000000000000000000000000000000'
0000ED40  D4E7C2D9 40D5C640                       2436  DC CL48'MXBR NF -0/+0 Tr'
0000ED70  80000000 00000000                       2437  DC XL16'80000000000000000000000000000000'
0000ED80  D4E7C2D9 40D5C640                       2438  DC CL48'MXBR NF -0/+2.0 NT'
0000EDB0  80000000 00000000                       2439  DC XL16'80000000000000000000000000000000'
0000EDC0  D4E7C2D9 40D5C640                       2440  DC CL48'MXBR NF -0/+2.0 Tr'
0000EDF0  80000000 00000000                       2441  DC XL16'80000000000000000000000000000000'
0000EE00  D4E7C2D9 40D5C640                       2442  DC CL48'MXBR NF -0/+inf NT'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    51

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000EE30  7FFF8000 00000000                       2443  DC XL16'7FFF8000000000000000000000000000'
0000EE40  D4E7C2D9 40D5C640                       2444  DC CL48'MXBR NF -0/+inf Tr'
0000EE70  80000000 00000000                       2445  DC XL16'80000000000000000000000000000000'
0000EE80  D4E7C2D9 40D5C640                       2446  DC CL48'MXBR NF -0/-QNaN NT'
0000EEB0  FFFF8B00 00000000                       2447  DC XL16'FFFF8B00000000000000000000000000'
0000EEC0  D4E7C2D9 40D5C640                       2448  DC CL48'MXBR NF -0/-QNaN Tr'
0000EEF0  FFFF8B00 00000000                       2449  DC XL16'FFFF8B00000000000000000000000000'
0000EF00  D4E7C2D9 40D5C640                       2450  DC CL48'MXBR NF -0/+SNaN NT'
0000EF30  7FFF8A00 00000000                       2451  DC XL16'7FFF8A00000000000000000000000000'
0000EF40  D4E7C2D9 40D5C640                       2452  DC CL48'MXBR NF -0/+SNaN Tr'
0000EF70  80000000 00000000                       2453  DC XL16'80000000000000000000000000000000'
0000EF80  D4E7C2D9 40D5C640                       2454  DC CL48'MXBR NF +0/-inf NT'
0000EFB0  7FFF8000 00000000                       2455  DC XL16'7FFF8000000000000000000000000000'
0000EFC0  D4E7C2D9 40D5C640                       2456  DC CL48'MXBR NF +0/-inf Tr'
0000EFF0  00000000 00000000                       2457  DC XL16'00000000000000000000000000000000'
0000F000  D4E7C2D9 40D5C640                       2458  DC CL48'MXBR NF +0/-2.0 NT'
0000F030  80000000 00000000                       2459  DC XL16'80000000000000000000000000000000'
0000F040  D4E7C2D9 40D5C640                       2460  DC CL48'MXBR NF +0/-2.0 Tr'
0000F070  80000000 00000000                       2461  DC XL16'80000000000000000000000000000000'
0000F080  D4E7C2D9 40D5C640                       2462  DC CL48'MXBR NF +0/-0 NT'
0000F0B0  80000000 00000000                       2463  DC XL16'80000000000000000000000000000000'
0000F0C0  D4E7C2D9 40D5C640                       2464  DC CL48'MXBR NF +0/-0 Tr'
0000F0F0  80000000 00000000                       2465  DC XL16'80000000000000000000000000000000'
0000F100  D4E7C2D9 40D5C640                       2466  DC CL48'MXBR NF +0/+0 NT'
0000F130  00000000 00000000                       2467  DC XL16'00000000000000000000000000000000'
0000F140  D4E7C2D9 40D5C640                       2468  DC CL48'MXBR NF +0/+0 Tr'
0000F170  00000000 00000000                       2469  DC XL16'00000000000000000000000000000000'
0000F180  D4E7C2D9 40D5C640                       2470  DC CL48'MXBR NF +0/+2.0 NT'
0000F1B0  00000000 00000000                       2471  DC XL16'00000000000000000000000000000000'
0000F1C0  D4E7C2D9 40D5C640                       2472  DC CL48'MXBR NF +0/+2.0 Tr'
0000F1F0  00000000 00000000                       2473  DC XL16'00000000000000000000000000000000'
0000F200  D4E7C2D9 40D5C640                       2474  DC CL48'MXBR NF +0/+inf NT'
0000F230  7FFF8000 00000000                       2475  DC XL16'7FFF8000000000000000000000000000'
0000F240  D4E7C2D9 40D5C640                       2476  DC CL48'MXBR NF +0/+inf Tr'
0000F270  00000000 00000000                       2477  DC XL16'00000000000000000000000000000000'
0000F280  D4E7C2D9 40D5C640                       2478  DC CL48'MXBR NF +0/-QNaN NT'
0000F2B0  FFFF8B00 00000000                       2479  DC XL16'FFFF8B00000000000000000000000000'
0000F2C0  D4E7C2D9 40D5C640                       2480  DC CL48'MXBR NF +0/-QNaN Tr'
0000F2F0  FFFF8B00 00000000                       2481  DC XL16'FFFF8B00000000000000000000000000'
0000F300  D4E7C2D9 40D5C640                       2482  DC CL48'MXBR NF +0/+SNaN NT'
0000F330  7FFF8A00 00000000                       2483  DC XL16'7FFF8A00000000000000000000000000'
0000F340  D4E7C2D9 40D5C640                       2484  DC CL48'MXBR NF +0/+SNaN Tr'
0000F370  00000000 00000000                       2485  DC XL16'00000000000000000000000000000000'
0000F380  D4E7C2D9 40D5C640                       2486  DC CL48'MXBR NF +2.0/-inf NT'
0000F3B0  FFFF0000 00000000                       2487  DC XL16'FFFF0000000000000000000000000000'
0000F3C0  D4E7C2D9 40D5C640                       2488  DC CL48'MXBR NF +2.0/-inf Tr'
0000F3F0  FFFF0000 00000000                       2489  DC XL16'FFFF0000000000000000000000000000'
0000F400  D4E7C2D9 40D5C640                       2490  DC CL48'MXBR NF +2.0/-2.0 NT'
0000F430  C0010000 00000000                       2491  DC XL16'C0010000000000000000000000000000'
0000F440  D4E7C2D9 40D5C640                       2492  DC CL48'MXBR NF +2.0/-2.0 Tr'
0000F470  C0010000 00000000                       2493  DC XL16'C0010000000000000000000000000000'
0000F480  D4E7C2D9 40D5C640                       2494  DC CL48'MXBR NF +2.0/-0 NT'
0000F4B0  80000000 00000000                       2495  DC XL16'80000000000000000000000000000000'
0000F4C0  D4E7C2D9 40D5C640                       2496  DC CL48'MXBR NF +2.0/-0 Tr'
0000F4F0  80000000 00000000                       2497  DC XL16'80000000000000000000000000000000'
0000F500  D4E7C2D9 40D5C640                       2498  DC CL48'MXBR NF +2.0/+0 NT'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    52

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000F530  00000000 00000000                       2499  DC XL16'00000000000000000000000000000000'
0000F540  D4E7C2D9 40D5C640                       2500  DC CL48'MXBR NF +2.0/+0 Tr'
0000F570  00000000 00000000                       2501  DC XL16'00000000000000000000000000000000'
0000F580  D4E7C2D9 40D5C640                       2502  DC CL48'MXBR NF +2.0/+2.0 NT'
0000F5B0  40010000 00000000                       2503  DC XL16'40010000000000000000000000000000'
0000F5C0  D4E7C2D9 40D5C640                       2504  DC CL48'MXBR NF +2.0/+2.0 Tr'
0000F5F0  40010000 00000000                       2505  DC XL16'40010000000000000000000000000000'
0000F600  D4E7C2D9 40D5C640                       2506  DC CL48'MXBR NF +2.0/+inf NT'
0000F630  7FFF0000 00000000                       2507  DC XL16'7FFF0000000000000000000000000000'
0000F640  D4E7C2D9 40D5C640                       2508  DC CL48'MXBR NF +2.0/+inf Tr'
0000F670  7FFF0000 00000000                       2509  DC XL16'7FFF0000000000000000000000000000'
0000F680  D4E7C2D9 40D5C640                       2510  DC CL48'MXBR NF +2.0/-QNaN NT'
0000F6B0  FFFF8B00 00000000                       2511  DC XL16'FFFF8B00000000000000000000000000'
0000F6C0  D4E7C2D9 40D5C640                       2512  DC CL48'MXBR NF +2.0/-QNaN Tr'
0000F6F0  FFFF8B00 00000000                       2513  DC XL16'FFFF8B00000000000000000000000000'
0000F700  D4E7C2D9 40D5C640                       2514  DC CL48'MXBR NF +2.0/+SNaN NT'
0000F730  7FFF8A00 00000000                       2515  DC XL16'7FFF8A00000000000000000000000000'
0000F740  D4E7C2D9 40D5C640                       2516  DC CL48'MXBR NF +2.0/+SNaN Tr'
0000F770  40000000 00000000                       2517  DC XL16'40000000000000000000000000000000'
0000F780  D4E7C2D9 40D5C640                       2518  DC CL48'MXBR NF +inf/-inf NT'
0000F7B0  FFFF0000 00000000                       2519  DC XL16'FFFF0000000000000000000000000000'
0000F7C0  D4E7C2D9 40D5C640                       2520  DC CL48'MXBR NF +inf/-inf Tr'
0000F7F0  FFFF0000 00000000                       2521  DC XL16'FFFF0000000000000000000000000000'
0000F800  D4E7C2D9 40D5C640                       2522  DC CL48'MXBR NF +inf/-2.0 NT'
0000F830  FFFF0000 00000000                       2523  DC XL16'FFFF0000000000000000000000000000'
0000F840  D4E7C2D9 40D5C640                       2524  DC CL48'MXBR NF +inf/-2.0 Tr'
0000F870  FFFF0000 00000000                       2525  DC XL16'FFFF0000000000000000000000000000'
0000F880  D4E7C2D9 40D5C640                       2526  DC CL48'MXBR NF +inf/-0 NT'
0000F8B0  7FFF8000 00000000                       2527  DC XL16'7FFF8000000000000000000000000000'
0000F8C0  D4E7C2D9 40D5C640                       2528  DC CL48'MXBR NF +inf/-0 Tr'
0000F8F0  7FFF0000 00000000                       2529  DC XL16'7FFF0000000000000000000000000000'
0000F900  D4E7C2D9 40D5C640                       2530  DC CL48'MXBR NF +inf/+0 NT'
0000F930  7FFF8000 00000000                       2531  DC XL16'7FFF8000000000000000000000000000'
0000F940  D4E7C2D9 40D5C640                       2532  DC CL48'MXBR NF +inf/+0 Tr'
0000F970  7FFF0000 00000000                       2533  DC XL16'7FFF0000000000000000000000000000'
0000F980  D4E7C2D9 40D5C640                       2534  DC CL48'MXBR NF +inf/+2.0 NT'
0000F9B0  7FFF0000 00000000                       2535  DC XL16'7FFF0000000000000000000000000000'
0000F9C0  D4E7C2D9 40D5C640                       2536  DC CL48'MXBR NF +inf/+2.0 Tr'
0000F9F0  7FFF0000 00000000                       2537  DC XL16'7FFF0000000000000000000000000000'
0000FA00  D4E7C2D9 40D5C640                       2538  DC CL48'MXBR NF +inf/+inf NT'
0000FA30  7FFF0000 00000000                       2539  DC XL16'7FFF0000000000000000000000000000'
0000FA40  D4E7C2D9 40D5C640                       2540  DC CL48'MXBR NF +inf/+inf Tr'
0000FA70  7FFF0000 00000000                       2541  DC XL16'7FFF0000000000000000000000000000'
0000FA80  D4E7C2D9 40D5C640                       2542  DC CL48'MXBR NF +inf/-QNaN NT'
0000FAB0  FFFF8B00 00000000                       2543  DC XL16'FFFF8B00000000000000000000000000'
0000FAC0  D4E7C2D9 40D5C640                       2544  DC CL48'MXBR NF +inf/-QNaN Tr'
0000FAF0  FFFF8B00 00000000                       2545  DC XL16'FFFF8B00000000000000000000000000'
0000FB00  D4E7C2D9 40D5C640                       2546  DC CL48'MXBR NF +inf/+SNaN NT'
0000FB30  7FFF8A00 00000000                       2547  DC XL16'7FFF8A00000000000000000000000000'
0000FB40  D4E7C2D9 40D5C640                       2548  DC CL48'MXBR NF +inf/+SNaN Tr'
0000FB70  7FFF0000 00000000                       2549  DC XL16'7FFF0000000000000000000000000000'
0000FB80  D4E7C2D9 40D5C640                       2550  DC CL48'MXBR NF -QNaN/-inf NT'
0000FBB0  FFFF8B00 00000000                       2551  DC XL16'FFFF8B00000000000000000000000000'
0000FBC0  D4E7C2D9 40D5C640                       2552  DC CL48'MXBR NF -QNaN/-inf Tr'
0000FBF0  FFFF8B00 00000000                       2553  DC XL16'FFFF8B00000000000000000000000000'
0000FC00  D4E7C2D9 40D5C640                       2554  DC CL48'MXBR NF -QNaN/-2.0 NT'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    53

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000FC30  FFFF8B00 00000000                       2555  DC XL16'FFFF8B00000000000000000000000000'
0000FC40  D4E7C2D9 40D5C640                       2556  DC CL48'MXBR NF -QNaN/-2.0 Tr'
0000FC70  FFFF8B00 00000000                       2557  DC XL16'FFFF8B00000000000000000000000000'
0000FC80  D4E7C2D9 40D5C640                       2558  DC CL48'MXBR NF -QNaN/-0 NT'
0000FCB0  FFFF8B00 00000000                       2559  DC XL16'FFFF8B00000000000000000000000000'
0000FCC0  D4E7C2D9 40D5C640                       2560  DC CL48'MXBR NF -QNaN/-0 Tr'
0000FCF0  FFFF8B00 00000000                       2561  DC XL16'FFFF8B00000000000000000000000000'
0000FD00  D4E7C2D9 40D5C640                       2562  DC CL48'MXBR NF -QNaN/+0 NT'
0000FD30  FFFF8B00 00000000                       2563  DC XL16'FFFF8B00000000000000000000000000'
0000FD40  D4E7C2D9 40D5C640                       2564  DC CL48'MXBR NF -QNaN/+0 Tr'
0000FD70  FFFF8B00 00000000                       2565  DC XL16'FFFF8B00000000000000000000000000'
0000FD80  D4E7C2D9 40D5C640                       2566  DC CL48'MXBR NF -QNaN/+2.0 NT'
0000FDB0  FFFF8B00 00000000                       2567  DC XL16'FFFF8B00000000000000000000000000'
0000FDC0  D4E7C2D9 40D5C640                       2568  DC CL48'MXBR NF -QNaN/+2.0 Tr'
0000FDF0  FFFF8B00 00000000                       2569  DC XL16'FFFF8B00000000000000000000000000'
0000FE00  D4E7C2D9 40D5C640                       2570  DC CL48'MXBR NF -QNaN/+inf NT'
0000FE30  FFFF8B00 00000000                       2571  DC XL16'FFFF8B00000000000000000000000000'
0000FE40  D4E7C2D9 40D5C640                       2572  DC CL48'MXBR NF -QNaN/+inf Tr'
0000FE70  FFFF8B00 00000000                       2573  DC XL16'FFFF8B00000000000000000000000000'
0000FE80  D4E7C2D9 40D5C640                       2574  DC CL48'MXBR NF -QNaN/-QNaN NT'
0000FEB0  FFFF8B00 00000000                       2575  DC XL16'FFFF8B00000000000000000000000000'
0000FEC0  D4E7C2D9 40D5C640                       2576  DC CL48'MXBR NF -QNaN/-QNaN Tr'
0000FEF0  FFFF8B00 00000000                       2577  DC XL16'FFFF8B00000000000000000000000000'
0000FF00  D4E7C2D9 40D5C640                       2578  DC CL48'MXBR NF -QNaN/+SNaN NT'
0000FF30  7FFF8A00 00000000                       2579  DC XL16'7FFF8A00000000000000000000000000'
0000FF40  D4E7C2D9 40D5C640                       2580  DC CL48'MXBR NF -QNaN/+SNaN Tr'
0000FF70  FFFF8B00 00000000                       2581  DC XL16'FFFF8B00000000000000000000000000'
0000FF80  D4E7C2D9 40D5C640                       2582  DC CL48'MXBR NF +SNaN/-inf NT'
0000FFB0  7FFF8A00 00000000                       2583  DC XL16'7FFF8A00000000000000000000000000'
0000FFC0  D4E7C2D9 40D5C640                       2584  DC CL48'MXBR NF +SNaN/-inf Tr'
0000FFF0  7FFF0A00 00000000                       2585  DC XL16'7FFF0A00000000000000000000000000'
00010000  D4E7C2D9 40D5C640                       2586  DC CL48'MXBR NF +SNaN/-2.0 NT'
00010030  7FFF8A00 00000000                       2587  DC XL16'7FFF8A00000000000000000000000000'
00010040  D4E7C2D9 40D5C640                       2588  DC CL48'MXBR NF +SNaN/-2.0 Tr'
00010070  7FFF0A00 00000000                       2589  DC XL16'7FFF0A00000000000000000000000000'
00010080  D4E7C2D9 40D5C640                       2590  DC CL48'MXBR NF +SNaN/-0 NT'
000100B0  7FFF8A00 00000000                       2591  DC XL16'7FFF8A00000000000000000000000000'
000100C0  D4E7C2D9 40D5C640                       2592  DC CL48'MXBR NF +SNaN/-0 Tr'
000100F0  7FFF0A00 00000000                       2593  DC XL16'7FFF0A00000000000000000000000000'
00010100  D4E7C2D9 40D5C640                       2594  DC CL48'MXBR NF +SNaN/+0 NT'
00010130  7FFF8A00 00000000                       2595  DC XL16'7FFF8A00000000000000000000000000'
00010140  D4E7C2D9 40D5C640                       2596  DC CL48'MXBR NF +SNaN/+0 Tr'
00010170  7FFF0A00 00000000                       2597  DC XL16'7FFF0A00000000000000000000000000'
00010180  D4E7C2D9 40D5C640                       2598  DC CL48'MXBR NF +SNaN/+2.0 NT'
000101B0  7FFF8A00 00000000                       2599  DC XL16'7FFF8A00000000000000000000000000'
000101C0  D4E7C2D9 40D5C640                       2600  DC CL48'MXBR NF +SNaN/+2.0 Tr'
000101F0  7FFF0A00 00000000                       2601  DC XL16'7FFF0A00000000000000000000000000'
00010200  D4E7C2D9 40D5C640                       2602  DC CL48'MXBR NF +SNaN/+inf NT'
00010230  7FFF8A00 00000000                       2603  DC XL16'7FFF8A00000000000000000000000000'
00010240  D4E7C2D9 40D5C640                       2604  DC CL48'MXBR NF +SNaN/+inf Tr'
00010270  7FFF0A00 00000000                       2605  DC XL16'7FFF0A00000000000000000000000000'
00010280  D4E7C2D9 40D5C640                       2606  DC CL48'MXBR NF +SNaN/-QNaN NT'
000102B0  7FFF8A00 00000000                       2607  DC XL16'7FFF8A00000000000000000000000000'
000102C0  D4E7C2D9 40D5C640                       2608  DC CL48'MXBR NF +SNaN/-QNaN Tr'
000102F0  7FFF0A00 00000000                       2609  DC XL16'7FFF0A00000000000000000000000000'
00010300  D4E7C2D9 40D5C640                       2610  DC CL48'MXBR NF +SNaN/+SNaN NT'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    54

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00010330  7FFF8A00 00000000                       2611  DC XL16'7FFF8A00000000000000000000000000'
00010340  D4E7C2D9 40D5C640                       2612  DC CL48'MXBR NF +SNaN/+SNaN Tr'
00010370  7FFF0A00 00000000                       2613  DC XL16'7FFF0A00000000000000000000000000'
                              00000080  00000001  2614 XBFPNFOT_NUM EQU (*-XBFPNFOT_GOOD)/64
                                                  2615 *
                                                  2616 *
                              00010380  00000001  2617 XBFPNFFL_GOOD EQU *
00010380  D4E7C2D9 40D5C640                       2618  DC CL48'MXBR NF -inf/-inf FPCR'
000103B0  00000000 F8000000                       2619  DC XL16'00000000F80000000000000000000000'
000103C0  D4E7C2D9 40D5C640                       2620  DC CL48'MXBR NF -inf/-2.0 FPCR'
000103F0  00000000 F8000000                       2621  DC XL16'00000000F80000000000000000000000'
00010400  D4E7C2D9 40D5C640                       2622  DC CL48'MXBR NF -inf/-0 FPCR'
00010430  00800000 F8008000                       2623  DC XL16'00800000F80080000000000000000000'
00010440  D4E7C2D9 40D5C640                       2624  DC CL48'MXBR NF -inf/+0 FPCR'
00010470  00800000 F8008000                       2625  DC XL16'00800000F80080000000000000000000'
00010480  D4E7C2D9 40D5C640                       2626  DC CL48'MXBR NF -inf/+2.0 FPCR'
000104B0  00000000 F8000000                       2627  DC XL16'00000000F80000000000000000000000'
000104C0  D4E7C2D9 40D5C640                       2628  DC CL48'MXBR NF -inf/+inf FPCR'
000104F0  00000000 F8000000                       2629  DC XL16'00000000F80000000000000000000000'
00010500  D4E7C2D9 40D5C640                       2630  DC CL48'MXBR NF -inf/-QNaN FPCR'
00010530  00000000 F8000000                       2631  DC XL16'00000000F80000000000000000000000'
00010540  D4E7C2D9 40D5C640                       2632  DC CL48'MXBR NF -inf/+SNaN FPCR'
00010570  00800000 F8008000                       2633  DC XL16'00800000F80080000000000000000000'
00010580  D4E7C2D9 40D5C640                       2634  DC CL48'MXBR NF -2.0/-inf FPCR'
000105B0  00000000 F8000000                       2635  DC XL16'00000000F80000000000000000000000'
000105C0  D4E7C2D9 40D5C640                       2636  DC CL48'MXBR NF -2.0/-2.0 FPCR'
000105F0  00000000 F8000000                       2637  DC XL16'00000000F80000000000000000000000'
00010600  D4E7C2D9 40D5C640                       2638  DC CL48'MXBR NF -2.0/-0 FPCR'
00010630  00000000 F8000000                       2639  DC XL16'00000000F80000000000000000000000'
00010640  D4E7C2D9 40D5C640                       2640  DC CL48'MXBR NF -2.0/+0 FPCR'
00010670  00000000 F8000000                       2641  DC XL16'00000000F80000000000000000000000'
00010680  D4E7C2D9 40D5C640                       2642  DC CL48'MXBR NF -2.0/+2.0 FPCR'
000106B0  00000000 F8000000                       2643  DC XL16'00000000F80000000000000000000000'
000106C0  D4E7C2D9 40D5C640                       2644  DC CL48'MXBR NF -2.0/+inf FPCR'
000106F0  00000000 F8000000                       2645  DC XL16'00000000F80000000000000000000000'
00010700  D4E7C2D9 40D5C640                       2646  DC CL48'MXBR NF -2.0/-QNaN FPCR'
00010730  00000000 F8000000                       2647  DC XL16'00000000F80000000000000000000000'
00010740  D4E7C2D9 40D5C640                       2648  DC CL48'MXBR NF -2.0/+SNaN FPCR'
00010770  00800000 F8008000                       2649  DC XL16'00800000F80080000000000000000000'
00010780  D4E7C2D9 40D5C640                       2650  DC CL48'MXBR NF -0/-inf FPCR'
000107B0  00800000 F8008000                       2651  DC XL16'00800000F80080000000000000000000'
000107C0  D4E7C2D9 40D5C640                       2652  DC CL48'MXBR NF -0/-2.0 FPCR'
000107F0  00000000 F8000000                       2653  DC XL16'00000000F80000000000000000000000'
00010800  D4E7C2D9 40D5C640                       2654  DC CL48'MXBR NF -0/-0 FPCR'
00010830  00000000 F8000000                       2655  DC XL16'00000000F80000000000000000000000'
00010840  D4E7C2D9 40D5C640                       2656  DC CL48'MXBR NF -0/+0 FPCR'
00010870  00000000 F8000000                       2657  DC XL16'00000000F80000000000000000000000'
00010880  D4E7C2D9 40D5C640                       2658  DC CL48'MXBR NF -0/+2.0 FPCR'
000108B0  00000000 F8000000                       2659  DC XL16'00000000F80000000000000000000000'
000108C0  D4E7C2D9 40D5C640                       2660  DC CL48'MXBR NF -0/+inf FPCR'
000108F0  00800000 F8008000                       2661  DC XL16'00800000F80080000000000000000000'
00010900  D4E7C2D9 40D5C640                       2662  DC CL48'MXBR NF -0/-QNaN FPCR'
00010930  00000000 F8000000                       2663  DC XL16'00000000F80000000000000000000000'
00010940  D4E7C2D9 40D5C640                       2664  DC CL48'MXBR NF -0/+SNaN FPCR'
00010970  00800000 F8008000                       2665  DC XL16'00800000F80080000000000000000000'
00010980  D4E7C2D9 40D5C640                       2666  DC CL48'MXBR NF +0/-inf FPCR'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    55

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000109B0  00800000 F8008000                       2667  DC XL16'00800000F80080000000000000000000'
000109C0  D4E7C2D9 40D5C640                       2668  DC CL48'MXBR NF +0/-2.0 FPCR'
000109F0  00000000 F8000000                       2669  DC XL16'00000000F80000000000000000000000'
00010A00  D4E7C2D9 40D5C640                       2670  DC CL48'MXBR NF +0/-0 FPCR'
00010A30  00000000 F8000000                       2671  DC XL16'00000000F80000000000000000000000'
00010A40  D4E7C2D9 40D5C640                       2672  DC CL48'MXBR NF +0/+0 FPCR'
00010A70  00000000 F8000000                       2673  DC XL16'00000000F80000000000000000000000'
00010A80  D4E7C2D9 40D5C640                       2674  DC CL48'MXBR NF +0/+2.0 FPCR'
00010AB0  00000000 F8000000                       2675  DC XL16'00000000F80000000000000000000000'
00010AC0  D4E7C2D9 40D5C640                       2676  DC CL48'MXBR NF +0/+inf FPCR'
00010AF0  00800000 F8008000                       2677  DC XL16'00800000F80080000000000000000000'
00010B00  D4E7C2D9 40D5C640                       2678  DC CL48'MXBR NF +0/-QNaN FPCR'
00010B30  00000000 F8000000                       2679  DC XL16'00000000F80000000000000000000000'
00010B40  D4E7C2D9 40D5C640                       2680  DC CL48'MXBR NF +0/+SNaN FPCR'
00010B70  00800000 F8008000                       2681  DC XL16'00800000F80080000000000000000000'
00010B80  D4E7C2D9 40D5C640                       2682  DC CL48'MXBR NF +2.0/-inf FPCR'
00010BB0  00000000 F8000000                       2683  DC XL16'00000000F80000000000000000000000'
00010BC0  D4E7C2D9 40D5C640                       2684  DC CL48'MXBR NF +2.0/-2.0 FPCR'
00010BF0  00000000 F8000000                       2685  DC XL16'00000000F80000000000000000000000'
00010C00  D4E7C2D9 40D5C640                       2686  DC CL48'MXBR NF +2.0/-0 FPCR'
00010C30  00000000 F8000000                       2687  DC XL16'00000000F80000000000000000000000'
00010C40  D4E7C2D9 40D5C640                       2688  DC CL48'MXBR NF +2.0/+0 FPCR'
00010C70  00000000 F8000000                       2689  DC XL16'00000000F80000000000000000000000'
00010C80  D4E7C2D9 40D5C640                       2690  DC CL48'MXBR NF +2.0/+2.0 FPCR'
00010CB0  00000000 F8000000                       2691  DC XL16'00000000F80000000000000000000000'
00010CC0  D4E7C2D9 40D5C640                       2692  DC CL48'MXBR NF +2.0/+inf FPCR'
00010CF0  00000000 F8000000                       2693  DC XL16'00000000F80000000000000000000000'
00010D00  D4E7C2D9 40D5C640                       2694  DC CL48'MXBR NF +2.0/-QNaN FPCR'
00010D30  00000000 F8000000                       2695  DC XL16'00000000F80000000000000000000000'
00010D40  D4E7C2D9 40D5C640                       2696  DC CL48'MXBR NF +2.0/+SNaN FPCR'
00010D70  00800000 F8008000                       2697  DC XL16'00800000F80080000000000000000000'
00010D80  D4E7C2D9 40D5C640                       2698  DC CL48'MXBR NF +inf/-inf FPCR'
00010DB0  00000000 F8000000                       2699  DC XL16'00000000F80000000000000000000000'
00010DC0  D4E7C2D9 40D5C640                       2700  DC CL48'MXBR NF +inf/-2.0 FPCR'
00010DF0  00000000 F8000000                       2701  DC XL16'00000000F80000000000000000000000'
00010E00  D4E7C2D9 40D5C640                       2702  DC CL48'MXBR NF +inf/-0 FPCR'
00010E30  00800000 F8008000                       2703  DC XL16'00800000F80080000000000000000000'
00010E40  D4E7C2D9 40D5C640                       2704  DC CL48'MXBR NF +inf/+0 FPCR'
00010E70  00800000 F8008000                       2705  DC XL16'00800000F80080000000000000000000'
00010E80  D4E7C2D9 40D5C640                       2706  DC CL48'MXBR NF +inf/+2.0 FPCR'
00010EB0  00000000 F8000000                       2707  DC XL16'00000000F80000000000000000000000'
00010EC0  D4E7C2D9 40D5C640                       2708  DC CL48'MXBR NF +inf/+inf FPCR'
00010EF0  00000000 F8000000                       2709  DC XL16'00000000F80000000000000000000000'
00010F00  D4E7C2D9 40D5C640                       2710  DC CL48'MXBR NF +inf/-QNaN FPCR'
00010F30  00000000 F8000000                       2711  DC XL16'00000000F80000000000000000000000'
00010F40  D4E7C2D9 40D5C640                       2712  DC CL48'MXBR NF +inf/+SNaN FPCR'
00010F70  00800000 F8008000                       2713  DC XL16'00800000F80080000000000000000000'
00010F80  D4E7C2D9 40D5C640                       2714  DC CL48'MXBR NF -QNaN/-inf FPCR'
00010FB0  00000000 F8000000                       2715  DC XL16'00000000F80000000000000000000000'
00010FC0  D4E7C2D9 40D5C640                       2716  DC CL48'MXBR NF -QNaN/-2.0 FPCR'
00010FF0  00000000 F8000000                       2717  DC XL16'00000000F80000000000000000000000'
00011000  D4E7C2D9 40D5C640                       2718  DC CL48'MXBR NF -QNaN/-0 FPCR'
00011030  00000000 F8000000                       2719  DC XL16'00000000F80000000000000000000000'
00011040  D4E7C2D9 40D5C640                       2720  DC CL48'MXBR NF -QNaN/+0 FPCR'
00011070  00000000 F8000000                       2721  DC XL16'00000000F80000000000000000000000'
00011080  D4E7C2D9 40D5C640                       2722  DC CL48'MXBR NF -QNaN/+2.0 FPCR'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    56

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000110B0  00000000 F8000000                       2723  DC XL16'00000000F80000000000000000000000'
000110C0  D4E7C2D9 40D5C640                       2724  DC CL48'MXBR NF -QNaN/+inf FPCR'
000110F0  00000000 F8000000                       2725  DC XL16'00000000F80000000000000000000000'
00011100  D4E7C2D9 40D5C640                       2726  DC CL48'MXBR NF -QNaN/-QNaN FPCR'
00011130  00000000 F8000000                       2727  DC XL16'00000000F80000000000000000000000'
00011140  D4E7C2D9 40D5C640                       2728  DC CL48'MXBR NF -QNaN/+SNaN FPCR'
00011170  00800000 F8008000                       2729  DC XL16'00800000F80080000000000000000000'
00011180  D4E7C2D9 40D5C640                       2730  DC CL48'MXBR NF +SNaN/-inf FPCR'
000111B0  00800000 F8008000                       2731  DC XL16'00800000F80080000000000000000000'
000111C0  D4E7C2D9 40D5C640                       2732  DC CL48'MXBR NF +SNaN/-2.0 FPCR'
000111F0  00800000 F8008000                       2733  DC XL16'00800000F80080000000000000000000'
00011200  D4E7C2D9 40D5C640                       2734  DC CL48'MXBR NF +SNaN/-0 FPCR'
00011230  00800000 F8008000                       2735  DC XL16'00800000F80080000000000000000000'
00011240  D4E7C2D9 40D5C640                       2736  DC CL48'MXBR NF +SNaN/+0 FPCR'
00011270  00800000 F8008000                       2737  DC XL16'00800000F80080000000000000000000'
00011280  D4E7C2D9 40D5C640                       2738  DC CL48'MXBR NF +SNaN/+2.0 FPCR'
000112B0  00800000 F8008000                       2739  DC XL16'00800000F80080000000000000000000'
000112C0  D4E7C2D9 40D5C640                       2740  DC CL48'MXBR NF +SNaN/+inf FPCR'
000112F0  00800000 F8008000                       2741  DC XL16'00800000F80080000000000000000000'
00011300  D4E7C2D9 40D5C640                       2742  DC CL48'MXBR NF +SNaN/-QNaN FPCR'
00011330  00800000 F8008000                       2743  DC XL16'00800000F80080000000000000000000'
00011340  D4E7C2D9 40D5C640                       2744  DC CL48'MXBR NF +SNaN/+SNaN FPCR'
00011370  00800000 F8008000                       2745  DC XL16'00800000F80080000000000000000000'
                              00000040  00000001  2746 XBFPNFFL_NUM EQU (*-XBFPNFFL_GOOD)/64
                                                  2747 *
                                                  2748 *
                              00011380  00000001  2749 XBFPOUT_GOOD EQU *
00011380  D4E7C2D9 40C640D6                       2750  DC CL48'MXBR F Ovfl NT'
000113B0  FFFF0000 00000000                       2751  DC XL16'FFFF0000000000000000000000000000'
000113C0  D4E7C2D9 40C640D6                       2752  DC CL48'MXBR F Ovfl Tr'
000113F0  DFFEFFFF FFFFFFFF                       2753  DC XL16'DFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFE'
00011400  D4E7C2D9 40C640E4                       2754  DC CL48'MXBR F Ufl 1 NT'
00011430  00000000 00000000                       2755  DC XL16'00000000000000000000000000000000'
00011440  D4E7C2D9 40C640E4                       2756  DC CL48'MXBR F Ufl 1 Tr'
00011470  2003FFFF FFFFFFFF                       2757  DC XL16'2003FFFFFFFFFFFFFFFFFFFFFFFFFFFF'
00011480  D4E7C2D9 40C640E4                       2758  DC CL48'MXBR F Ufl 2 NT'
000114B0  00000000 00000000                       2759  DC XL16'00000000000000000000000000000000'
000114C0  D4E7C2D9 40C640E4                       2760  DC CL48'MXBR F Ufl 2 Tr'
000114F0  1FFDE1E0 00000000                       2761  DC XL16'1FFDE1E0000000000000000000000000'
00011500  D4E7C2D9 40C640D5                       2762  DC CL48'MXBR F Nmin NT'
00011530  00020000 00000000                       2763  DC XL16'00020000000000000000000000000000'
00011540  D4E7C2D9 40C640D5                       2764  DC CL48'MXBR F Nmin Tr'
00011570  00020000 00000000                       2765  DC XL16'00020000000000000000000000000000'
00011580  D4E7C2D9 40C640C9                       2766  DC CL48'MXBR F Incr NT'
000115B0  3FFF1000 00000000                       2767  DC XL16'3FFF100000000000000000000000000D'
000115C0  D4E7C2D9 40C640C9                       2768  DC CL48'MXBR F Incr Tr'
000115F0  3FFF1000 00000000                       2769  DC XL16'3FFF100000000000000000000000000D'
00011600  D4E7C2D9 40C640E3                       2770  DC CL48'MXBR F Trun NT'
00011630  3FFF1000 00000000                       2771  DC XL16'3FFF1000000000000000000000000007'
00011640  D4E7C2D9 40C640E3                       2772  DC CL48'MXBR F Trun Tr'
00011670  3FFF1000 00000000                       2773  DC XL16'3FFF1000000000000000000000000007'
                              0000000C  00000001  2774 XBFPOUT_NUM EQU (*-XBFPOUT_GOOD)/64
                                                  2775 *
                                                  2776 *
                              00011680  00000001  2777 XBFPFLGS_GOOD EQU *
00011680  D4E7C2D9 40C640D6                       2778  DC CL48'MXBR F Ovfl FPCR'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    57

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000116B0  00280000 F8002800                       2779  DC XL16'00280000F80028000000000000000000'
000116C0  D4E7C2D9 40C640E4                       2780  DC CL48'MXBR F Ufl 1 FPCR'
000116F0  00180000 F8001000                       2781  DC XL16'00180000F80010000000000000000000'
00011700  D4E7C2D9 40C640E4                       2782  DC CL48'MXBR F Ufl 2 FPCR'
00011730  00180000 F8001000                       2783  DC XL16'00180000F80010000000000000000000'
00011740  D4E7C2D9 40C640D5                       2784  DC CL48'MXBR F Nmin FPCR'
00011770  00080000 F8000C00                       2785  DC XL16'00080000F8000C000000000000000000'
00011780  D4E7C2D9 40C640C9                       2786  DC CL48'MXBR F Incr FPCR'
000117B0  00080000 F8000C00                       2787  DC XL16'00080000F8000C000000000000000000'
000117C0  D4E7C2D9 40C640E3                       2788  DC CL48'MXBR F Trun FPCR'
000117F0  00080000 F8000800                       2789  DC XL16'00080000F80008000000000000000000'
                              00000006  00000001  2790 XBFPFLGS_NUM EQU (*-XBFPFLGS_GOOD)/64
                                                  2791 *
                                                  2792 *
                              00011800  00000001  2793 XBFPRMO_GOOD EQU *
00011800  D4E7C2D9 40D9D440                       2794  DC CL48'MXBR RM +NZ RNTE'
00011830  3FFF1000 00000000                       2795  DC XL16'3FFF1000000000000000000000000007'
00011840  D4E7C2D9 40D9D440                       2796  DC CL48'MXBR RM +NZ RZ'
00011870  3FFF1000 00000000                       2797  DC XL16'3FFF1000000000000000000000000007'
00011880  D4E7C2D9 40D9D440                       2798  DC CL48'MXBR RM +NZ RP'
000118B0  3FFF1000 00000000                       2799  DC XL16'3FFF1000000000000000000000000008'
000118C0  D4E7C2D9 40D9D440                       2800  DC CL48'MXBR RM +NZ RM'
000118F0  3FFF1000 00000000                       2801  DC XL16'3FFF1000000000000000000000000007'
00011900  D4E7C2D9 40D9D440                       2802  DC CL48'MXBR RM +NZ RFS'
00011930  3FFF1000 00000000                       2803  DC XL16'3FFF1000000000000000000000000007'
00011940  D4E7C2D9 40D9D440                       2804  DC CL48'MXBR RM -NZ RNTE'
00011970  BFFF1000 00000000                       2805  DC XL16'BFFF1000000000000000000000000007'
00011980  D4E7C2D9 40D9D440                       2806  DC CL48'MXBR RM -NZ RZ'
000119B0  BFFF1000 00000000                       2807  DC XL16'BFFF1000000000000000000000000007'
000119C0  D4E7C2D9 40D9D440                       2808  DC CL48'MXBR RM -NZ RP'
000119F0  BFFF1000 00000000                       2809  DC XL16'BFFF1000000000000000000000000007'
00011A00  D4E7C2D9 40D9D440                       2810  DC CL48'MXBR RM -NZ RM'
00011A30  BFFF1000 00000000                       2811  DC XL16'BFFF1000000000000000000000000008'
00011A40  D4E7C2D9 40D9D440                       2812  DC CL48'MXBR RM -NZ RFS'
00011A70  BFFF1000 00000000                       2813  DC XL16'BFFF1000000000000000000000000007'
00011A80  D4E7C2D9 40D9D440                       2814  DC CL48'MXBR RM +NA RNTE'
00011AB0  3FFF1000 00000000                       2815  DC XL16'3FFF100000000000000000000000000D'
00011AC0  D4E7C2D9 40D9D440                       2816  DC CL48'MXBR RM +NA RZ'
00011AF0  3FFF1000 00000000                       2817  DC XL16'3FFF100000000000000000000000000C'
00011B00  D4E7C2D9 40D9D440                       2818  DC CL48'MXBR RM +NA RP'
00011B30  3FFF1000 00000000                       2819  DC XL16'3FFF100000000000000000000000000D'
00011B40  D4E7C2D9 40D9D440                       2820  DC CL48'MXBR RM +NA RM'
00011B70  3FFF1000 00000000                       2821  DC XL16'3FFF100000000000000000000000000C'
00011B80  D4E7C2D9 40D9D440                       2822  DC CL48'MXBR RM +NA RFS'
00011BB0  3FFF1000 00000000                       2823  DC XL16'3FFF100000000000000000000000000D'
00011BC0  D4E7C2D9 40D9D440                       2824  DC CL48'MXBR RM -NA RNTE'
00011BF0  BFFF1000 00000000                       2825  DC XL16'BFFF100000000000000000000000000D'
00011C00  D4E7C2D9 40D9D440                       2826  DC CL48'MXBR RM -NA RZ'
00011C30  BFFF1000 00000000                       2827  DC XL16'BFFF100000000000000000000000000C'
00011C40  D4E7C2D9 40D9D440                       2828  DC CL48'MXBR RM -NA RP'
00011C70  BFFF1000 00000000                       2829  DC XL16'BFFF100000000000000000000000000C'
00011C80  D4E7C2D9 40D9D440                       2830  DC CL48'MXBR RM -NA RM'
00011CB0  BFFF1000 00000000                       2831  DC XL16'BFFF100000000000000000000000000D'
00011CC0  D4E7C2D9 40D9D440                       2832  DC CL48'MXBR RM -NA RFS'
00011CF0  BFFF1000 00000000                       2833  DC XL16'BFFF100000000000000000000000000D'
00011D00  D4E7C2D9 40D9D440                       2834  DC CL48'MXBR RM +TZ RNTE'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    58

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00011D30  3FFF1000 00000000                       2835  DC XL16'3FFF1000000000000000000000000008'
00011D40  D4E7C2D9 40D9D440                       2836  DC CL48'MXBR RM +TZ RZ'
00011D70  3FFF1000 00000000                       2837  DC XL16'3FFF1000000000000000000000000008'
00011D80  D4E7C2D9 40D9D440                       2838  DC CL48'MXBR RM +TZ RP'
00011DB0  3FFF1000 00000000                       2839  DC XL16'3FFF1000000000000000000000000009'
00011DC0  D4E7C2D9 40D9D440                       2840  DC CL48'MXBR RM +TZ RM'
00011DF0  3FFF1000 00000000                       2841  DC XL16'3FFF1000000000000000000000000008'
00011E00  D4E7C2D9 40D9D440                       2842  DC CL48'MXBR RM +TZ RFS'
00011E30  3FFF1000 00000000                       2843  DC XL16'3FFF1000000000000000000000000009'
00011E40  D4E7C2D9 40D9D440                       2844  DC CL48'MXBR RM -TZ RNTE'
00011E70  BFFF1000 00000000                       2845  DC XL16'BFFF1000000000000000000000000008'
00011E80  D4E7C2D9 40D9D440                       2846  DC CL48'MXBR RM -TZ RZ'
00011EB0  BFFF1000 00000000                       2847  DC XL16'BFFF1000000000000000000000000008'
00011EC0  D4E7C2D9 40D9D440                       2848  DC CL48'MXBR RM -TZ RP'
00011EF0  BFFF1000 00000000                       2849  DC XL16'BFFF1000000000000000000000000008'
00011F00  D4E7C2D9 40D9D440                       2850  DC CL48'MXBR RM -TZ RM'
00011F30  BFFF1000 00000000                       2851  DC XL16'BFFF1000000000000000000000000009'
00011F40  D4E7C2D9 40D9D440                       2852  DC CL48'MXBR RM -TZ RFS'
00011F70  BFFF1000 00000000                       2853  DC XL16'BFFF1000000000000000000000000009'
00011F80  D4E7C2D9 40D9D440                       2854  DC CL48'MXBR RM +TA RNTE'
00011FB0  3FFF1000 00000000                       2855  DC XL16'3FFF100000000000000000000000001A'
00011FC0  D4E7C2D9 40D9D440                       2856  DC CL48'MXBR RM +TA RZ'
00011FF0  3FFF1000 00000000                       2857  DC XL16'3FFF1000000000000000000000000019'
00012000  D4E7C2D9 40D9D440                       2858  DC CL48'MXBR RM +TA RP'
00012030  3FFF1000 00000000                       2859  DC XL16'3FFF100000000000000000000000001A'
00012040  D4E7C2D9 40D9D440                       2860  DC CL48'MXBR RM +TA RM'
00012070  3FFF1000 00000000                       2861  DC XL16'3FFF1000000000000000000000000019'
00012080  D4E7C2D9 40D9D440                       2862  DC CL48'MXBR RM +TA RFS'
000120B0  3FFF1000 00000000                       2863  DC XL16'3FFF1000000000000000000000000019'
000120C0  D4E7C2D9 40D9D440                       2864  DC CL48'MXBR RM -TA RNTE'
000120F0  BFFF1000 00000000                       2865  DC XL16'BFFF100000000000000000000000001A'
00012100  D4E7C2D9 40D9D440                       2866  DC CL48'MXBR RM -TA RZ'
00012130  BFFF1000 00000000                       2867  DC XL16'BFFF1000000000000000000000000019'
00012140  D4E7C2D9 40D9D440                       2868  DC CL48'MXBR RM -TA RP'
00012170  BFFF1000 00000000                       2869  DC XL16'BFFF1000000000000000000000000019'
00012180  D4E7C2D9 40D9D440                       2870  DC CL48'MXBR RM -TA RM'
000121B0  BFFF1000 00000000                       2871  DC XL16'BFFF100000000000000000000000001A'
000121C0  D4E7C2D9 40D9D440                       2872  DC CL48'MXBR RM -TA RFS'
000121F0  BFFF1000 00000000                       2873  DC XL16'BFFF1000000000000000000000000019'
                              00000028  00000001  2874 XBFPRMO_NUM EQU (*-XBFPRMO_GOOD)/64
                                                  2875 *
                                                  2876 *
                              00012200  00000001  2877 XBFPRMOF_GOOD EQU *
00012200  D4E7C2D9 40D9D440                       2878  DC CL48'MXBR RM +NZ RNTE, RZ,RP,RM FPCR'
00012230  00080000 00080001                       2879  DC XL16'00080000000800010008000200080003'
00012240  D4E7C2D9 40D9D440                       2880  DC CL48'MXBR RM +NZ RFS FPCR'
00012270  00080007 00000000                       2881  DC XL16'00080007000000000000000000000000'
00012280  D4E7C2D9 40D9D440                       2882  DC CL48'MXBR RM -NZ RNTE, RZ,RP,RM FPCR'
000122B0  00080000 00080001                       2883  DC XL16'00080000000800010008000200080003'
000122C0  D4E7C2D9 40D9D440                       2884  DC CL48'MXBR RM -NZ RFS FPCR'
000122F0  00080007 00000000                       2885  DC XL16'00080007000000000000000000000000'
00012300  D4E7C2D9 40D9D440                       2886  DC CL48'MXBR RM +NA RNTE, RZ,RP,RM FPCR'
00012330  00080000 00080001                       2887  DC XL16'00080000000800010008000200080003'
00012340  D4E7C2D9 40D9D440                       2888  DC CL48'MXBR RM +NA RFS FPCR'
00012370  00080007 00000000                       2889  DC XL16'00080007000000000000000000000000'
00012380  D4E7C2D9 40D9D440                       2890  DC CL48'MXBR RM -NA RNTE, RZ,RP,RM FPCR'
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    59

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000123B0  00080000 00080001                       2891  DC XL16'00080000000800010008000200080003'
000123C0  D4E7C2D9 40D9D440                       2892  DC CL48'MXBR RM -NA RFS FPCR'
000123F0  00080007 00000000                       2893  DC XL16'00080007000000000000000000000000'
00012400  D4E7C2D9 40D9D440                       2894  DC CL48'MXBR RM +TZ RNTE, RZ,RP,RM FPCR'
00012430  00080000 00080001                       2895  DC XL16'00080000000800010008000200080003'
00012440  D4E7C2D9 40D9D440                       2896  DC CL48'MXBR RM +TZ RFS FPCR'
00012470  00080007 00000000                       2897  DC XL16'00080007000000000000000000000000'
00012480  D4E7C2D9 40D9D440                       2898  DC CL48'MXBR RM -TZ RNTE, RZ,RP,RM FPCR'
000124B0  00080000 00080001                       2899  DC XL16'00080000000800010008000200080003'
000124C0  D4E7C2D9 40D9D440                       2900  DC CL48'MXBR RM -TZ RFS FPCR'
000124F0  00080007 00000000                       2901  DC XL16'00080007000000000000000000000000'
00012500  D4E7C2D9 40D9D440                       2902  DC CL48'MXBR RM +TA RNTE, RZ,RP,RM FPCR'
00012530  00080000 00080001                       2903  DC XL16'00080000000800010008000200080003'
00012540  D4E7C2D9 40D9D440                       2904  DC CL48'MXBR RM +TA RFS FPCR'
00012570  00080007 00000000                       2905  DC XL16'00080007000000000000000000000000'
00012580  D4E7C2D9 40D9D440                       2906  DC CL48'MXBR RM -TA RNTE, RZ,RP,RM FPCR'
000125B0  00080000 00080001                       2907  DC XL16'00080000000800010008000200080003'
000125C0  D4E7C2D9 40D9D440                       2908  DC CL48'MXBR RM -TA RFS FPCR'
000125F0  00080007 00000000                       2909  DC XL16'00080007000000000000000000000000'
                              00000010  00000001  2910 XBFPRMOF_NUM EQU (*-XBFPRMOF_GOOD)/64
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    60

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00012600                                          2912 HELPERS  DS    0H       (R12 base of helper subroutines)

                                                  2914 ***********************************************************************
                                                  2915 *               REPORT UNEXPECTED PROGRAM CHECK
                                                  2916 ***********************************************************************

00012600                                          2918 PGMCK    DS    0H
00012600  F342 C072 F08E      00012672  0000008E  2919          UNPK  PROGCODE(L'PROGCODE+1),PCINTCD(L'PCINTCD+1)
00012606  926B C076                     00012676  2920          MVI   PGMCOMMA,C','
0001260A  DC03 C072 C178      00012672  00012778  2921          TR    PROGCODE,HEXTRTAB

00012610  F384 C07C F150      0001267C  00000150  2923          UNPK  PGMPSW+(0*9)(9),PCOLDPSW+(0*4)(5)
00012616  9240 C084                     00012684  2924          MVI   PGMPSW+(0*9)+8,C' '
0001261A  DC07 C07C C178      0001267C  00012778  2925          TR    PGMPSW+(0*9)(8),HEXTRTAB

00012620  F384 C085 F154      00012685  00000154  2927          UNPK  PGMPSW+(1*9)(9),PCOLDPSW+(1*4)(5)
00012626  9240 C08D                     0001268D  2928          MVI   PGMPSW+(1*9)+8,C' '
0001262A  DC07 C085 C178      00012685  00012778  2929          TR    PGMPSW+(1*9)(8),HEXTRTAB

00012630  F384 C08E F158      0001268E  00000158  2931          UNPK  PGMPSW+(2*9)(9),PCOLDPSW+(2*4)(5)
00012636  9240 C096                     00012696  2932          MVI   PGMPSW+(2*9)+8,C' '
0001263A  DC07 C08E C178      0001268E  00012778  2933          TR    PGMPSW+(2*9)(8),HEXTRTAB

00012640  F384 C097 F15C      00012697  0000015C  2935          UNPK  PGMPSW+(3*9)(9),PCOLDPSW+(3*4)(5)
00012646  9240 C09F                     0001269F  2936          MVI   PGMPSW+(3*9)+8,C' '
0001264A  DC07 C097 C178      00012697  00012778  2937          TR    PGMPSW+(3*9)(8),HEXTRTAB

00012650  4100 0042                     00000042  2939          LA    R0,L'PROGMSG     R0 <== length of message
00012654  4110 C05E                     0001265E  2940          LA    R1,PROGMSG       R1 --> the message text itself
00012658  4520 C27A                     0001287A  2941          BAL   R2,MSG           Go display this message
                                                  2942
0001265C  07FD                                    2943          BR    R13              Return to caller




0001265E                                          2945 PROGMSG  DS   0CL66
0001265E  D7D9D6C7 D9C1D440                       2946          DC    CL20'PROGRAM CHECK! CODE '
00012672  88888888                                2947 PROGCODE DC    CL4'hhhh'
00012676  6B                                      2948 PGMCOMMA DC    CL1','
00012677  40D7E2E6 40                             2949          DC    CL5' PSW '
0001267C  88888888 88888888                       2950 PGMPSW   DC    CL36'hhhhhhhh hhhhhhhh hhhhhhhh hhhhhhhh '
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    61

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  2952 ***********************************************************************
                                                  2953 *                    VERIFICATION ROUTINE
                                                  2954 ***********************************************************************

000126A0                                          2956 VERISUB  DS    0H
                                                  2957 *
                                                  2958 **       Loop through the VERIFY TABLE...
                                                  2959 *

000126A0  4110 C32C                     0001292C  2961          LA    R1,VERIFTAB      R1 --> Verify table
000126A4  4120 0012                     00000012  2962          LA    R2,VERIFLEN      R2 <== Number of entries
000126A8  0D30                                    2963          BASR  R3,0             Set top of loop

000126AA  9846 1000                     00000000  2965          LM    R4,R6,0(R1)      Load verify table values
000126AE  4D70 C0C2                     000126C2  2966          BAS   R7,VERIFY        Verify results
000126B2  4110 100C                     0000000C  2967          LA    R1,12(,R1)       Next verify table entry
000126B6  0623                                    2968          BCTR  R2,R3            Loop through verify table

000126B8  9500 C278                     00012878  2970          CLI   FAILFLAG,X'00'   Did all tests verify okay?
000126BC  078D                                    2971          BER   R13              Yes, return to caller
000126BE  47F0 F238                     00000238  2972          B     FAIL             No, load FAILURE disabled wait PSW






                                                  2974 *
                                                  2975 **       Loop through the ACTUAL / EXPECTED results...
                                                  2976 *

000126C2  0D80                                    2978 VERIFY   BASR  R8,0             Set top of loop

000126C4  D50F 4000 5030      00000000  00000030  2980          CLC   0(16,R4),48(R5)  Actual results == Expected results?
000126CA  4770 C0DA                     000126DA  2981          BNE   VERIFAIL         No, show failure
000126CE  4140 4010                     00000010  2982 VERINEXT LA    R4,16(,R4)       Next actual result
000126D2  4150 5040                     00000040  2983          LA    R5,64(,R5)       Next expected result
000126D6  0668                                    2984          BCTR  R6,R8            Loop through results

000126D8  07F7                                    2986          BR    R7               Return to caller
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    62

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  2988 ***********************************************************************
                                                  2989 *                    Report the failure...
                                                  2990 ***********************************************************************

000126DA  9005 C250                     00012850  2992 VERIFAIL STM   R0,R5,SAVER0R5   Save registers
000126DE  92FF C278                     00012878  2993          MVI   FAILFLAG,X'FF'   Remember verification failure
                                                  2994 *
                                                  2995 **       First, show them the description...
                                                  2996 *
000126E2  D22F C1E0 5000      000127E0  00000000  2997          MVC   FAILDESC,0(R5)   Save results/test description
000126E8  4100 0044                     00000044  2998          LA    R0,L'FAILMSG1    R0 <== length of message
000126EC  4110 C1CC                     000127CC  2999          LA    R1,FAILMSG1      R1 --> the message text itself
000126F0  4520 C27A                     0001287A  3000          BAL   R2,MSG           Go display this message
                                                  3001 *
                                                  3002 **       Save address of actual and expected results
                                                  3003 *
000126F4  5040 C24C                     0001284C  3004          ST    R4,AACTUAL       Save A(actual results)
000126F8  4150 5030                     00000030  3005          LA    R5,48(,R5)       R5 ==> expected results
000126FC  5050 C248                     00012848  3006          ST    R5,AEXPECT       Save A(expected results)
                                                  3007 *
                                                  3008 **       Format and show them the EXPECTED ("Want") results...
                                                  3009 *
00012700  D205 C210 C408      00012810  00012A08  3010          MVC   WANTGOT,=CL6'Want: '
00012706  F384 C216 C248      00012816  00012848  3011          UNPK  FAILADR(L'FAILADR+1),AEXPECT(L'AEXPECT+1)
0001270C  9240 C21E                     0001281E  3012          MVI   BLANKEQ,C' '
00012710  DC07 C216 C178      00012816  00012778  3013          TR    FAILADR,HEXTRTAB

00012716  F384 C221 5000      00012821  00000000  3015          UNPK  FAILVALS+(0*9)(9),(0*4)(5,R5)
0001271C  9240 C229                     00012829  3016          MVI   FAILVALS+(0*9)+8,C' '
00012720  DC07 C221 C178      00012821  00012778  3017          TR    FAILVALS+(0*9)(8),HEXTRTAB

00012726  F384 C22A 5004      0001282A  00000004  3019          UNPK  FAILVALS+(1*9)(9),(1*4)(5,R5)
0001272C  9240 C232                     00012832  3020          MVI   FAILVALS+(1*9)+8,C' '
00012730  DC07 C22A C178      0001282A  00012778  3021          TR    FAILVALS+(1*9)(8),HEXTRTAB

00012736  F384 C233 5008      00012833  00000008  3023          UNPK  FAILVALS+(2*9)(9),(2*4)(5,R5)
0001273C  9240 C23B                     0001283B  3024          MVI   FAILVALS+(2*9)+8,C' '
00012740  DC07 C233 C178      00012833  00012778  3025          TR    FAILVALS+(2*9)(8),HEXTRTAB

00012746  F384 C23C 500C      0001283C  0000000C  3027          UNPK  FAILVALS+(3*9)(9),(3*4)(5,R5)
0001274C  9240 C244                     00012844  3028          MVI   FAILVALS+(3*9)+8,C' '
00012750  DC07 C23C C178      0001283C  00012778  3029          TR    FAILVALS+(3*9)(8),HEXTRTAB

00012756  4100 0035                     00000035  3031          LA    R0,L'FAILMSG2    R0 <== length of message
0001275A  4110 C210                     00012810  3032          LA    R1,FAILMSG2      R1 --> the message text itself
0001275E  4520 C27A                     0001287A  3033          BAL   R2,MSG           Go display this message
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    63

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  3035 *
                                                  3036 **       Format and show them the ACTUAL ("Got") results...
                                                  3037 *
00012762  D205 C210 C40E      00012810  00012A0E  3038          MVC   WANTGOT,=CL6'Got:  '
00012768  F384 C216 C24C      00012816  0001284C  3039          UNPK  FAILADR(L'FAILADR+1),AACTUAL(L'AACTUAL+1)
0001276E  9240 C21E                     0001281E  3040          MVI   BLANKEQ,C' '
00012772  DC07 C216 C178      00012816  00012778  3041          TR    FAILADR,HEXTRTAB

00012778  F384 C221 4000      00012821  00000000  3043          UNPK  FAILVALS+(0*9)(9),(0*4)(5,R4)
0001277E  9240 C229                     00012829  3044          MVI   FAILVALS+(0*9)+8,C' '
00012782  DC07 C221 C178      00012821  00012778  3045          TR    FAILVALS+(0*9)(8),HEXTRTAB

00012788  F384 C22A 4004      0001282A  00000004  3047          UNPK  FAILVALS+(1*9)(9),(1*4)(5,R4)
0001278E  9240 C232                     00012832  3048          MVI   FAILVALS+(1*9)+8,C' '
00012792  DC07 C22A C178      0001282A  00012778  3049          TR    FAILVALS+(1*9)(8),HEXTRTAB

00012798  F384 C233 4008      00012833  00000008  3051          UNPK  FAILVALS+(2*9)(9),(2*4)(5,R4)
0001279E  9240 C23B                     0001283B  3052          MVI   FAILVALS+(2*9)+8,C' '
000127A2  DC07 C233 C178      00012833  00012778  3053          TR    FAILVALS+(2*9)(8),HEXTRTAB

000127A8  F384 C23C 400C      0001283C  0000000C  3055          UNPK  FAILVALS+(3*9)(9),(3*4)(5,R4)
000127AE  9240 C244                     00012844  3056          MVI   FAILVALS+(3*9)+8,C' '
000127B2  DC07 C23C C178      0001283C  00012778  3057          TR    FAILVALS+(3*9)(8),HEXTRTAB

000127B8  4100 0035                     00000035  3059          LA    R0,L'FAILMSG2    R0 <== length of message
000127BC  4110 C210                     00012810  3060          LA    R1,FAILMSG2      R1 --> the message text itself
000127C0  4520 C27A                     0001287A  3061          BAL   R2,MSG           Go display this message

000127C4  9805 C250                     00012850  3063          LM    R0,R5,SAVER0R5   Restore registers
000127C8  47F0 C0CE                     000126CE  3064          B     VERINEXT         Continue with verification...



000127CC                                          3066 FAILMSG1 DS   0CL68
000127CC  C3D6D4D7 C1D9C9E2                       3067          DC    CL20'COMPARISON FAILURE! '
000127E0  4D8485A2 83998997                       3068 FAILDESC DC    CL48'(description)'


00012810                                          3070 FAILMSG2 DS   0CL53
00012810  40404040 4040                           3071 WANTGOT  DC    CL6' '           'Want: ' -or- 'Got:  '
00012816  C1C1C1C1 C1C1C1C1                       3072 FAILADR  DC    CL8'AAAAAAAA'
0001281E  407E40                                  3073 BLANKEQ  DC    CL3' = '
00012821  88888888 88888888                       3074 FAILVALS DC    CL36'hhhhhhhh hhhhhhhh hhhhhhhh hhhhhhhh '


00012848  00000000                                3076 AEXPECT  DC    F'0'             ==> Expected ("Want") results
0001284C  00000000                                3077 AACTUAL  DC    F'0'             ==> Actual ("Got") results
00012850  00000000 00000000                       3078 SAVER0R5 DC    6F'0'            Registers R0 - R5 save area
00012868  F0F1F2F3 F4F5F6F7                       3079 CHARHEX  DC    CL16'0123456789ABCDEF'
                              00012778  00000010  3080 HEXTRTAB EQU   CHARHEX-X'F0'    Hexadecimal translation table
00012878  00                                      3081 FAILFLAG DC    X'00'            FF = Fail, 00 = Success
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    64

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  3083 ***********************************************************************
                                                  3084 *        Issue HERCULES MESSAGE pointed to by R1, length in R0
                                                  3085 ***********************************************************************

0001287A  4900 C404                     00012A04  3087 MSG      CH    R0,=H'0'               Do we even HAVE a message?
0001287E  07D2                                    3088          BNHR  R2                     No, ignore

00012880  9002 C2B0                     000128B0  3090          STM   R0,R2,MSGSAVE          Save registers

00012884  4900 C406                     00012A06  3092          CH    R0,=AL2(L'MSGMSG)      Message length within limits?
00012888  47D0 C290                     00012890  3093          BNH   MSGOK                  Yes, continue
0001288C  4100 005F                     0000005F  3094          LA    R0,L'MSGMSG            No, set to maximum

00012890  1820                                    3096 MSGOK    LR    R2,R0                  Copy length to work register
00012892  0620                                    3097          BCTR  R2,0                   Minus-1 for execute
00012894  4420 C2BC                     000128BC  3098          EX    R2,MSGMVC              Copy message to O/P buffer

00012898  4120 200A                     0000000A  3100          LA    R2,1+L'MSGCMD(,R2)     Calculate true command length
0001289C  4110 C2C2                     000128C2  3101          LA    R1,MSGCMD              Point to true command

000128A0  83120008                                3103          DC    X'83',X'12',X'0008'    Issue Hercules Diagnose X'008'
000128A4  4780 C2AA                     000128AA  3104          BZ    MSGRET                 Return if successful
000128A8  0000                                    3105          DC    H'0'                   CRASH for debugging purposes

000128AA  9802 C2B0                     000128B0  3107 MSGRET   LM    R0,R2,MSGSAVE          Restore registers
000128AE  07F2                                    3108          BR    R2                     Return to caller






000128B0  00000000 00000000                       3110 MSGSAVE  DC    3F'0'                  Registers save area
000128BC  D200 C2CB 1000      000128CB  00000000  3111 MSGMVC   MVC   MSGMSG(0),0(R1)        Executed instruction


000128C2  D4E2C7D5 D6C8405C                       3113 MSGCMD   DC    C'MSGNOH * '           *** HERCULES MESSAGE COMMAND ***
000128CB  40404040 40404040                       3114 MSGMSG   DC    CL95' '                The message text to be displayed
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    65

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  3116 ***********************************************************************
                                                  3117 *                         VERIFY TABLE
                                                  3118 ***********************************************************************
                                                  3119 *
                                                  3120 *        A(actual results), A(expected results), A(#of results)
                                                  3121 *
                                                  3122 ***********************************************************************

0001292C                                          3124 VERIFTAB DC    0F'0'
0001292C  00001000                                3125          DC    A(SBFPNFOT)
00012930  00007000                                3126          DC    A(SBFPNFOT_GOOD)
00012934  00000040                                3127          DC    A(SBFPNFOT_NUM)
                                                  3128 *
00012938  00001400                                3129          DC    A(SBFPNFFL)
0001293C  00008000                                3130          DC    A(SBFPNFFL_GOOD)
00012940  00000040                                3131          DC    A(SBFPNFFL_NUM)
                                                  3132 *
00012944  00001800                                3133          DC    A(SBFPOUT)
00012948  00009000                                3134          DC    A(SBFPOUT_GOOD)
0001294C  00000006                                3135          DC    A(SBFPOUT_NUM)
                                                  3136 *
00012950  00001900                                3137          DC    A(SBFPFLGS)
00012954  00009180                                3138          DC    A(SBFPFLGS_GOOD)
00012958  00000006                                3139          DC    A(SBFPFLGS_NUM)
                                                  3140 *
0001295C  00001A00                                3141          DC    A(SBFPRMO)
00012960  00009300                                3142          DC    A(SBFPRMO_GOOD)
00012964  00000018                                3143          DC    A(SBFPRMO_NUM)
                                                  3144 *
00012968  00001D00                                3145          DC    A(SBFPRMOF)
0001296C  00009900                                3146          DC    A(SBFPRMOF_GOOD)
00012970  00000018                                3147          DC    A(SBFPRMOF_NUM)
                                                  3148 *
00012974  00003000                                3149          DC    A(LBFPNFOT)
00012978  00009F00                                3150          DC    A(LBFPNFOT_GOOD)
0001297C  00000080                                3151          DC    A(LBFPNFOT_NUM)
                                                  3152 *
00012980  00003800                                3153          DC    A(LBFPNFFL)
00012984  0000BF00                                3154          DC    A(LBFPNFFL_GOOD)
00012988  00000040                                3155          DC    A(LBFPNFFL_NUM)
                                                  3156 *
0001298C  00003C00                                3157          DC    A(LBFPOUT)
00012990  0000CF00                                3158          DC    A(LBFPOUT_GOOD)
00012994  0000000C                                3159          DC    A(LBFPOUT_NUM)
                                                  3160 *
00012998  00003E00                                3161          DC    A(LBFPFLGS)
0001299C  0000D200                                3162          DC    A(LBFPFLGS_GOOD)
000129A0  00000006                                3163          DC    A(LBFPFLGS_NUM)
                                                  3164 *
000129A4  00004000                                3165          DC    A(LBFPRMO)
000129A8  0000D380                                3166          DC    A(LBFPRMO_GOOD)
000129AC  00000028                                3167          DC    A(LBFPRMO_NUM)
                                                  3168 *
000129B0  00004500                                3169          DC    A(LBFPRMOF)
000129B4  0000DD80                                3170          DC    A(LBFPRMOF_GOOD)
000129B8  00000018                                3171          DC    A(LBFPRMOF_NUM)
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    66

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  3172 *
000129BC  00005000                                3173          DC    A(XBFPNFOT)
000129C0  0000E380                                3174          DC    A(XBFPNFOT_GOOD)
000129C4  00000080                                3175          DC    A(XBFPNFOT_NUM)
                                                  3176 *
000129C8  00005800                                3177          DC    A(XBFPNFFL)
000129CC  00010380                                3178          DC    A(XBFPNFFL_GOOD)
000129D0  00000040                                3179          DC    A(XBFPNFFL_NUM)
                                                  3180 *
000129D4  00005C00                                3181          DC    A(XBFPOUT)
000129D8  00011380                                3182          DC    A(XBFPOUT_GOOD)
000129DC  0000000C                                3183          DC    A(XBFPOUT_NUM)
                                                  3184 *
000129E0  00005E00                                3185          DC    A(XBFPFLGS)
000129E4  00011680                                3186          DC    A(XBFPFLGS_GOOD)
000129E8  00000006                                3187          DC    A(XBFPFLGS_NUM)
                                                  3188 *
000129EC  00006000                                3189          DC    A(XBFPRMO)
000129F0  00011800                                3190          DC    A(XBFPRMO_GOOD)
000129F4  00000028                                3191          DC    A(XBFPRMO_NUM)
                                                  3192 *
000129F8  00006500                                3193          DC    A(XBFPRMOF)
000129FC  00012200                                3194          DC    A(XBFPRMOF_GOOD)
00012A00  00000010                                3195          DC    A(XBFPRMOF_NUM)
                                                  3196 *
                              00000012  00000001  3197 VERIFLEN EQU   (*-VERIFTAB)/12    #of entries in verify table
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    67

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00012A04                                          3199          END
00012A04  0000                                    3200                =H'0'
00012A06  005F                                    3201                =AL2(L'MSGMSG)
00012A08  E68195A3 7A40                           3202                =CL6'Want: '
00012A0E  C796A37A 4040                           3203                =CL6'Got:  '
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    68

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

AACTUAL             F    01284C       4  3077  3004  3039
AEXPECT             F    012848       4  3076  3006  3011
AHELPERS            A    00027C       4   196   186   234
BFPMUL              J    000000   76308   112
BLANKEQ             C    01281E       3  3073  3012  3040
CHARHEX             C    012868      16  3079  3080
CTLR0               F    000308       4   244   205   206   207
FAIL                I    000238       4   194  2972
FAILADR             C    012816       8  3072  3011  3013  3039  3041
FAILDESC            C    0127E0      48  3068  2997
FAILFLAG            X    012878       1  3081  2970  2993
FAILMSG1            C    0127CC      68  3066  2998  2999
FAILMSG2            C    012810      53  3070  3031  3032  3059  3060
FAILPSW             X    0002F8       8   242   194
FAILVALS            C    012821      36  3074  3015  3016  3017  3019  3020  3021  3023  3024  3025  3027  3028  3029  3043  3044
                                               3045  3047  3048  3049  3051  3052  3053  3055  3056  3057
FPCMCT              U    000005       1   844   449   625   789
FPCMODES            C    000798       1   838   844   452   628   792
FPCREGNT            X    00030C       4   245   338   352   393   407   454   462   515   528   569   583   630   638   692   739
                                                794
FPCREGTR            X    000310       4   246   345   358   400   413   522   534   576   589   702   749
FPR0                U    000000       1   133
FPR1                U    000001       1   134   337   339   344   346   351   395   396   403   457   458   514   516   521   523
                                                571   572   579   633   634   690   693   700   703   742   744   753   798   800
FPR10               U    00000A       1   143   689   695   699   705   741   746   751   755   797   802
FPR11               U    00000B       1   144
FPR12               U    00000C       1   145
FPR13               U    00000D       1   146
FPR14               U    00000E       1   147
FPR15               U    00000F       1   148
FPR2                U    000002       1   135
FPR3                U    000003       1   136   691   701   743   799
FPR4                U    000004       1   137
FPR5                U    000005       1   138
FPR6                U    000006       1   139
FPR7                U    000007       1   140
FPR8                U    000008       1   141   336   339   340   343   346   347   350   353   354   357   359   360   394   396
                                                397   401   403   404   408   409   410   414   415   416   456   458   459   464
                                                465   466   513   516   517   520   523   524   527   529   530   533   535   536
                                                570   572   573   577   579   580   584   585   586   590   591   592   632   634
                                                635   640   641   642   688   693   694   698   703   704   740   744   745   750
                                                753   754   796   800   801
FPR9                U    000009       1   142
GOODPSW             X    0002E8       8   241   238
HELPERS             H    012600       2  2912   151   196
HEXTRTAB            U    012778      16  3080  2921  2925  2929  2933  2937  3013  3017  3021  3025  3029  3041  3045  3049  3053
                                               3057
IMAGE               1    000000   76308     0
LBFPCT              U    000006       1  1106   279
LBFPF               I    000594       4   563   219
LBFPFLGS            U    003E00       1  1353   282  3161
LBFPFLGS_GOOD       U    00D200       1  2205  2218  3162
LBFPFLGS_NUM        U    000006       1  2218  3163
LBFPIN              D    000870       8  1067  1106   280
LBFPINRM            F    0008D0       4  1132  1163   286
LBFPNF              H    00050E       2   502   217
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    69

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

LBFPNFCT            U    000008       1  1047   273
LBFPNFFL            U    003800       1  1348   276  3153
LBFPNFFL_GOOD       U    00BF00       1  2045  2174  3154
LBFPNFFL_NUM        U    000040       1  2174  3155
LBFPNFIN            F    000830       4  1038  1047   274
LBFPNFOT            U    003000       1  1346   275  3149
LBFPNFOT_GOOD       U    009F00       1  1785  2042  3150
LBFPNFOT_NUM        U    000080       1  2042  3151
LBFPOUT             U    003C00       1  1351   281  3157
LBFPOUT_GOOD        U    00CF00       1  2177  2202  3158
LBFPOUT_NUM         U    00000C       1  2202  3159
LBFPRM              I    00060A       4   618   221
LBFPRMCT            U    000008       1  1163   285
LBFPRMO             U    004000       1  1356   287  3165
LBFPRMOF            U    004500       1  1358   288  3169
LBFPRMOF_GOOD       U    00DD80       1  2305  2354  3170
LBFPRMOF_NUM        U    000018       1  2354  3171
LBFPRMO_GOOD        U    00D380       1  2221  2302  3166
LBFPRMO_NUM         U    000028       1  2302  3167
LONGF               F    000354       4   278   218
LONGNF              F    000344       4   272   216
MSG                 I    01287A       4  3087  2941  3000  3033  3061
MSGCMD              C    0128C2       9  3113  3100  3101
MSGMSG              C    0128CB      95  3114  3094  3111  3092
MSGMVC              I    0128BC       6  3111  3098
MSGOK               I    012890       2  3096  3093
MSGRET              I    0128AA       4  3107  3104
MSGSAVE             F    0128B0       4  3110  3090  3107
PCINTCD             H    00008E       2   164   181  2919
PCNOTDTA            I    00020C       4   185   182
PCOLDPSW            U    000150       1   166   183  2923  2927  2931  2935
PGMCK               H    012600       2  2918   187
PGMCOMMA            C    012676       1  2948  2920
PGMPSW              C    01267C      36  2950  2923  2924  2925  2927  2928  2929  2931  2932  2933  2935  2936  2937
PROGCHK             H    000200       2   180   172
PROGCODE            C    012672       4  2947  2919  2921
PROGMSG             C    01265E      66  2945  2939  2940
PROGPSW             D    000228       8   193   192
R0                  U    000000       1   114   185   188   205   207  2939  2992  2998  3031  3059  3063  3087  3090  3092  3094
                                               3096  3107
R1                  U    000001       1   115   446   452   455   463   622   628   631   639   786   792   795  2940  2961  2965
                                               2967  2999  3032  3060  3101  3111
R10                 U    00000A       1   124   209   211   213   216   218   220   223   225   227   326   327   332   387   388
                                                442   443   503   504   509   563   564   618   619   678   679   684   733   734
                                                782   783
R11                 U    00000B       1   125
R12                 U    00000C       1   126   151   186   234   330   369   391   422   447   482   507   545   567   598   623
                                                657   682   714   737   761   787   817
R13                 U    00000D       1   127   187   210   212   214   217   219   221   224   226   228   235   329   370   390
                                                423   445   484   506   546   566   599   621   659   681   715   736   763   785
                                                819  2943  2971
R14                 U    00000E       1   128   190   191   236   237
R15                 U    00000F       1   129   150   185   188
R2                  U    000002       1   116   326   328   369   387   389   422   442   444   482   503   505   545   563   565
                                                598   618   620   657   678   680   714   733   735   761   782   784   817  2941
                                               2962  2968  3000  3033  3061  3088  3090  3096  3097  3098  3100  3107  3108
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    70

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

R3                  U    000003       1   117   326   336   343   350   357   368   387   394   395   401   408   409   414   415
                                                419   442   456   457   464   465   479   503   513   520   527   533   544   563
                                                570   571   577   584   585   590   591   595   618   632   633   640   641   655
                                                678   688   689   698   699   713   733   740   741   742   743   750   751   758
                                                782   796   797   798   799   815  2963  2968
R4                  U    000004       1   118   332   366   509   542   684   711  2965  2980  2982  3004  3043  3047  3051  3055
R5                  U    000005       1   119   332   337   344   351   353   359   363   449   452   472   509   514   521   529
                                                535   539   625   628   648   684   690   691   700   701   708   789   792   808
                                               2980  2983  2992  2997  3005  3006  3015  3019  3023  3027  3063
R6                  U    000006       1   120   334   366   511   542   686   711  2965  2984
R7                  U    000007       1   121   327   340   347   354   360   364   388   397   404   410   416   420   443   459
                                                466   469   480   504   517   524   530   536   540   564   573   580   586   592
                                                596   619   635   642   645   679   694   695   704   705   709   734   745   746
                                                754   755   759   783   801   802   805  2966  2986
R8                  U    000008       1   122   327   341   348   355   361   365   388   398   405   411   417   421   443   460
                                                467   470   481   504   518   525   531   537   541   564   574   581   587   593
                                                597   619   636   643   646   656   679   696   706   710   734   747   756   760
                                                783   803   806   816  2978  2984
R9                  U    000009       1   123   450   472   626   648   790   808
RMLONGS             F    000364       4   284   220
RMSHORTS            F    000334       4   266   213
RMXTNDS             F    000394       4   302   227
SAVER0R5            F    012850       4  3078  2992  3063
SAVEREGS            F    00023C       4   195   185   188
SBFPCT              U    000006       1   949   261
SBFPF               I    00042E       4   387   212
SBFPFLGS            U    001900       1  1337   264  3137
SBFPFLGS_GOOD       U    009180       1  1665  1678  3138
SBFPFLGS_NUM        U    000006       1  1678  3139
SBFPIN              F    0007C0       4   910   949   262
SBFPINRM            F    0007F0       4   975  1006   268
SBFPNF              H    0003A4       2   325   210
SBFPNFCT            U    000008       1   890   255
SBFPNFFL            U    001400       1  1332   258  3129
SBFPNFFL_GOOD       U    008000       1  1517  1646  3130
SBFPNFFL_NUM        U    000040       1  1646  3131
SBFPNFIN            F    0007A0       4   881   890   256
SBFPNFOT            U    001000       1  1330   257  3125
SBFPNFOT_GOOD       U    007000       1  1385  1514  3126
SBFPNFOT_NUM        U    000040       1  1514  3127
SBFPOUT             U    001800       1  1335   263  3133
SBFPOUT_GOOD        U    009000       1  1649  1662  3134
SBFPOUT_NUM         U    000006       1  1662  3135
SBFPRM              I    0004A4       4   442   214
SBFPRMCT            U    000008       1  1006   267
SBFPRMO             U    001A00       1  1340   269  3141
SBFPRMOF            U    001D00       1  1342   270  3145
SBFPRMOF_GOOD       U    009900       1  1733  1782  3146
SBFPRMOF_NUM        U    000018       1  1782  3147
SBFPRMO_GOOD        U    009300       1  1681  1730  3142
SBFPRMO_NUM         U    000018       1  1730  3143
SHORTF              F    000324       4   260   211
SHORTNF             F    000314       4   254   209
START               H    000280       2   204   169
STRTLABL            U    000000       1   113   163   166   168   171   179  1330  1332  1335  1337  1340  1342  1346  1348  1351
                                               1353  1356  1358  1362  1364  1367  1369  1372  1374  1383
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    71

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

VERIFAIL            I    0126DA       4  2992  2981
VERIFLEN            U    000012       1  3197  2962
VERIFTAB            F    01292C       4  3124  3197  2961
VERIFY              I    0126C2       2  2978  2966
VERINEXT            I    0126CE       4  2982  3064
VERISUB             H    0126A0       2  2956   235
WANTGOT             C    012810       6  3071  3010  3038
XBFPCT              U    000006       1  1265   297
XBFPF               I    0006E2       4   733   226
XBFPFLGS            U    005E00       1  1369   300  3185
XBFPFLGS_GOOD       U    011680       1  2777  2790  3186
XBFPFLGS_NUM        U    000006       1  2790  3187
XBFPIN              F    0009D0       4  1225  1265   298
XBFPINRM            D    000A90       8  1291  1322   304
XBFPNF              H    000670       2   677   224
XBFPNFCT            U    000008       1  1204   291
XBFPNFFL            U    005800       1  1364   294  3177
XBFPNFFL_GOOD       U    010380       1  2617  2746  3178
XBFPNFFL_NUM        U    000040       1  2746  3179
XBFPNFIN            F    000950       4  1195  1204   292
XBFPNFOT            U    005000       1  1362   293  3173
XBFPNFOT_GOOD       U    00E380       1  2357  2614  3174
XBFPNFOT_NUM        U    000080       1  2614  3175
XBFPOUT             U    005C00       1  1367   299  3181
XBFPOUT_GOOD        U    011380       1  2749  2774  3182
XBFPOUT_NUM         U    00000C       1  2774  3183
XBFPRM              I    000740       4   782   228
XBFPRMCT            U    000008       1  1322   303
XBFPRMO             U    006000       1  1372   305  3189
XBFPRMOF            U    006500       1  1374   306  3193
XBFPRMOF_GOOD       U    012200       1  2877  2910  3194
XBFPRMOF_NUM        U    000010       1  2910  3195
XBFPRMO_GOOD        U    011800       1  2793  2874  3190
XBFPRMO_NUM         U    000028       1  2874  3191
XTNDF               F    000384       4   296   225
XTNDNF              F    000374       4   290   223
=AL2(L'MSGMSG)      R    012A06       2  3201  3092
=CL6'Got:  '        C    012A0E       6  3203  3038
=CL6'Want: '        C    012A08       6  3202  3010
=H'0'               H    012A04       2  3200  3087
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    72

MACRO  DEFN  REFERENCES

No defined macros
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    73

   DESC    SYMBOL   SIZE      POS          ADDR

Entry: 0

Image      IMAGE   76308  00000-12A13  00000-12A13
  Region           76308  00000-12A13  00000-12A13
    CSECT  BFPMUL  76308  00000-12A13  00000-12A13
ASMA Ver. 0.2.1  bfp-019-multiply: Test IEEE Multiply                                               17 Aug 2022 12:24:41  Page    74

   STMT                                                   FILE NAME

1     c:\Users\Fish\Documents\Visual Studio 2008\Projects\MyProjects\ASMA-0\bfp-019-multiply\bfp-019-multiply.asm


** NO ERRORS FOUND **

