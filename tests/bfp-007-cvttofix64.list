ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page     1

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                     2 ***********************************************************************
                                                     3 *
                                                     4 *Testcase IEEE CONVERT TO FIXED 64
                                                     5 *  Test case capability includes ieee exceptions trappable and
                                                     6 *  otherwise.  Test result, FPCR flags, and DXC saved for all tests.
                                                     7 *
                                                     8 *
                                                     9 *                      ********************
                                                    10 *                      **   IMPORTANT!   **
                                                    11 *                      ********************
                                                    12 *
                                                    13 *        This test uses the Hercules Diagnose X'008' interface
                                                    14 *        to display messages and thus your .tst runtest script
                                                    15 *        MUST contain a "DIAG8CMD ENABLE" statement within it!
                                                    16 *
                                                    17 *
                                                    18 ***********************************************************************


                                                    20 ***********************************************************************
                                                    21 *
                                                    22 *                      bfp-007-cvttofix64.asm
                                                    23 *
                                                    24 *        This assembly-language source file is part of the
                                                    25 *        Hercules Binary Floating Point Validation Package
                                                    26 *                        by Stephen R. Orso
                                                    27 *
                                                    28 * Copyright 2016 by Stephen R Orso.
                                                    29 * Runtest *Compare dependency removed by Fish on 2022-08-16
                                                    30 * PADCSECT macro/usage removed by Fish on 2022-08-16
                                                    31 *
                                                    32 * Redistribution and use in source and binary forms, with or without
                                                    33 * modification, are permitted provided that the following conditions
                                                    34 * are met:
                                                    35 *
                                                    36 * 1. Redistributions of source code must retain the above copyright
                                                    37 *    notice, this list of conditions and the following disclaimer.
                                                    38 *
                                                    39 * 2. Redistributions in binary form must reproduce the above copyright
                                                    40 *    notice, this list of conditions and the following disclaimer in
                                                    41 *    the documentation and/or other materials provided  with the
                                                    42 *    distribution.
                                                    43 *
                                                    44 * 3. The name of the author may not be used to endorse or promote
                                                    45 *    products derived from this software without specific prior written
                                                    46 *    permission.
                                                    47 *
                                                    48 * DISCLAMER: THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER "AS IS"
                                                    49 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
                                                    50 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
                                                    51 * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
                                                    52 * HOLDER BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
                                                    53 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
                                                    54 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
                                                    55 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
                                                    56 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page     2

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                    57 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
                                                    58 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                                                    59 *
                                                    60 ***********************************************************************


                                                    62 ***********************************************************************
                                                    63 *
                                                    64 * Tests the following six conversion instructions
                                                    65 *   CONVERT TO FIXED (short BFP to int-64, RRE)
                                                    66 *   CONVERT TO FIXED (long BFP to int-64, RRE)
                                                    67 *   CONVERT TO FIXED (extended BFP to int-64, RRE)
                                                    68 *   CONVERT TO FIXED (short BFP to int-64, RRF-e)
                                                    69 *   CONVERT TO FIXED (long BFP to int-64, RRF-e)
                                                    70 *   CONVERT TO FIXED (extended BFP to int-64, RRF-e)
                                                    71 *
                                                    72 * Test data is compiled into this program.  The test script that runs
                                                    73 * this program can provide alternative test data through Hercules R
                                                    74 * commands.
                                                    75 *
                                                    76 * Test Case Order
                                                    77 * 1) Short BFP to Int-64
                                                    78 * 2) Short BFP to Int-64 with all rounding modes
                                                    79 * 3) Long BFP Int-64
                                                    80 * 3) Long BFP Int-64 with all rounding modes
                                                    81 * 4) Extended BFP to Int-64
                                                    82 * 4) Extended BFP to Int-64 with all rounding modes
                                                    83 *
                                                    84 * Provided test data is:
                                                    85 *       1, 2, 4, -2, QNaN, SNaN, 2 147 483 648, -2 147 483 648.
                                                    86 *   The last two values will trigger inexact exceptions when converted
                                                    87 *   to int-64.  Underflow does not get raised during Convert To Fixed.
                                                    88 * Provided test data for rounding tests:
                                                    89 *   -9.5, -5.5, -2.5, -1.5, -0.5, +0.5, +1.5, +2.5, +5.5, +9.5
                                                    90 *   This data is taken from Table 9-11 on page 9-16 of SA22-7832-10.
                                                    91 *   While the table illustrates LOAD FP INTEGER, the same results
                                                    92 *   should be generated when creating an int-32 or int-64 integer.
                                                    93 *   Additional rounding test cases are provided to test boundary cases.
                                                    94 *
                                                    95 * Note that three input test data sets are provided, one each for
                                                    96 *   short, long, and extended precision BFP.  All are converted to
                                                    97 *   int-64.
                                                    98 *
                                                    99 * Also tests the following floating point support instructions
                                                   100 *   LOAD  (Short)
                                                   101 *   LOAD  (Long)
                                                   102 *   LOAD FPC
                                                   103 *   SET BFP ROUNDING MODE 2-BIT
                                                   104 *   SET BFP ROUNDING MODE 3-BIT
                                                   105 *   STORE (Short)
                                                   106 *   STORE (Long)
                                                   107 *   STORE FPC
                                                   108 *
                                                   109 ***********************************************************************
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page     3

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   111 *
                                                   112 *  Note: for compatibility with the z/CMS test rig, do not change
                                                   113 *  or use R11, R14, or R15.  Everything else is fair game.
                                                   114 *
                              00000000  0000B44B   115 BFPCVTTF START 0
                              00000000  00000001   116 R0       EQU   0
                              00000001  00000001   117 R1       EQU   1
                              00000002  00000001   118 R2       EQU   2
                              00000003  00000001   119 R3       EQU   3
                              00000004  00000001   120 R4       EQU   4
                              00000005  00000001   121 R5       EQU   5
                              00000006  00000001   122 R6       EQU   6
                              00000007  00000001   123 R7       EQU   7
                              00000008  00000001   124 R8       EQU   8
                              00000009  00000001   125 R9       EQU   9
                              0000000A  00000001   126 R10      EQU   10
                              0000000B  00000001   127 R11      EQU   11
                              0000000C  00000001   128 R12      EQU   12
                              0000000D  00000001   129 R13      EQU   13
                              0000000E  00000001   130 R14      EQU   14
                              0000000F  00000001   131 R15      EQU   15
                                                   132 *
                                                   133 * Floating Point Register equates to keep the cross reference clean
                                                   134 *
                              00000000  00000001   135 FPR0     EQU   0
                              00000001  00000001   136 FPR1     EQU   1
                              00000002  00000001   137 FPR2     EQU   2
                              00000003  00000001   138 FPR3     EQU   3
                              00000004  00000001   139 FPR4     EQU   4
                              00000005  00000001   140 FPR5     EQU   5
                              00000006  00000001   141 FPR6     EQU   6
                              00000007  00000001   142 FPR7     EQU   7
                              00000008  00000001   143 FPR8     EQU   8
                              00000009  00000001   144 FPR9     EQU   9
                              0000000A  00000001   145 FPR10    EQU   10
                              0000000B  00000001   146 FPR11    EQU   11
                              0000000C  00000001   147 FPR12    EQU   12
                              0000000D  00000001   148 FPR13    EQU   13
                              0000000E  00000001   149 FPR14    EQU   14
                              0000000F  00000001   150 FPR15    EQU   15
                                                   151 *
00000000                      00000000             152          USING *,R15
00000000                      0000B080             153          USING HELPERS,R12
                                                   154 *
                                                   155 * Above works on real iron (R15=0 after sysclear)
                                                   156 * and in z/CMS (R15 points to start of load module)
                                                   157 *


                                                   159 ***********************************************************************
                                                   160 *
                                                   161 * Low core definitions, Restart PSW, and Program Check Routine.
                                                   162 *
                                                   163 ***********************************************************************
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page     4

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000000                      00000000  0000008E   165          ORG   BFPCVTTF+X'8E'      Program check interrution code
0000008E  0000                                     166 PCINTCD  DS    H
                                                   167 *
                              00000150  00000000   168 PCOLDPSW EQU   BFPCVTTF+X'150'     z/Arch Program check old PSW
                                                   169 *
00000090                      00000090  000001A0   170          ORG   BFPCVTTF+X'1A0'     z/Arch Restart PSW
000001A0  00000001 80000000                        171          DC    X'0000000180000000',AD(START)
                                                   172 *
000001B0                      000001B0  000001D0   173          ORG   BFPCVTTF+X'1D0'     z/Arch Program check NEW PSW
000001D0  00000000 00000000                        174          DC    X'0000000000000000',AD(PROGCHK)
                                                   175 *
                                                   176 * Program check routine.  If Data Exception, continue execution at
                                                   177 * the instruction following the program check.  Otherwise, hard wait.
                                                   178 * No need to collect data.  All interesting DXC stuff is captured
                                                   179 * in the FPCR.
                                                   180 *
000001E0                      000001E0  00000200   181          ORG   BFPCVTTF+X'200'
00000200                                           182 PROGCHK  DS    0H             Program check occured...
00000200  9507 F08F                     0000008F   183          CLI   PCINTCD+1,X'07'  Data Exception?
00000204  A774 0004                     0000020C   184          JNE   PCNOTDTA       ..no, hardwait (not sure if R15 is ok)
00000208  B2B2 F150                     00000150   185          LPSWE PCOLDPSW       ..yes, resume program execution

0000020C  900F F23C                     0000023C   187 PCNOTDTA STM   R0,R15,SAVEREGS  Save registers
00000210  58C0 F27C                     0000027C   188          L     R12,AHELPERS     Get address of helper subroutines
00000214  4DD0 C000                     0000B080   189          BAS   R13,PGMCK        Report this unexpected program check
00000218  980F F23C                     0000023C   190          LM    R0,R15,SAVEREGS  Restore registers

0000021C  12EE                                     192          LTR   R14,R14        Return address provided?
0000021E  077E                                     193          BNZR  R14            Yes, return to z/CMS test rig.
00000220  B2B2 F228                     00000228   194          LPSWE PROGPSW        Not data exception, enter disabled wait
00000228  00020000 00000000                        195 PROGPSW  DC    0D'0',X'0002000000000000',XL6'00',X'DEAD' Abnormal end
00000238  B2B2 F2E0                     000002E0   196 FAIL     LPSWE FAILPSW        Not data exception, enter disabled wait
0000023C  00000000 00000000                        197 SAVEREGS DC    16F'0'         Registers save area
0000027C  0000B080                                 198 AHELPERS DC    A(HELPERS)     Address of helper subroutines
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page     5

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   200 ***********************************************************************
                                                   201 *
                                                   202 *  Main program.  Enable Advanced Floating Point, process test cases.
                                                   203 *
                                                   204 ***********************************************************************


00000280  B600 F2F0                     000002F0   206 START    STCTL R0,R0,CTLR0    Store CR0 to enable AFP
00000284  9604 F2F1                     000002F1   207          OI    CTLR0+1,X'04'  Turn on AFP bit
00000288  B700 F2F0                     000002F0   208          LCTL  R0,R0,CTLR0    Reload updated CR0
                                                   209 *
                                                   210 * Short BFP Input testing
                                                   211 *
0000028C  41A0 F2FC                     000002FC   212          LA    R10,SHORTS     Point to short BFP test inputs
00000290  4DD0 F35C                     0000035C   213          BAS   R13,CGEBR      Convert values to fixed from short BFP
00000294  41A0 F32C                     0000032C   214          LA    R10,RMSHORTS   Point to inputs for rounding mode tests
00000298  4DD0 F3C0                     000003C0   215          BAS   R13,CGEBRA     Convert using all rounding mode options
                                                   216 *
                                                   217 * Short BFP Input testing
                                                   218 *
0000029C  41A0 F30C                     0000030C   219          LA    R10,LONGS      Point to long BFP test inputs
000002A0  4DD0 F51E                     0000051E   220          BAS   R13,CGDBR      Convert values to fixed from long BFP
000002A4  41A0 F33C                     0000033C   221          LA    R10,RMLONGS    Point to inputs for rounding mode tests
000002A8  4DD0 F582                     00000582   222          BAS   R13,CGDBRA     Convert using all rounding mode options
                                                   223 *
                                                   224 * Short BFP Input testing
                                                   225 *
000002AC  41A0 F31C                     0000031C   226          LA    R10,EXTDS      Point to extended BFP test inputs
000002B0  4DD0 F6E0                     000006E0   227          BAS   R13,CGXBR      Convert values to fixed from extended
000002B4  41A0 F34C                     0000034C   228          LA    R10,RMEXTDS    Point to inputs for rounding mode tests
000002B8  4DD0 F748                     00000748   229          BAS   R13,CGXBRA     Convert using all rounding mode options
                                                   230 *
                                                   231 ***********************************************************************
                                                   232 *                   Verify test results...
                                                   233 ***********************************************************************
                                                   234 *
000002BC  58C0 F27C                     0000027C   235          L     R12,AHELPERS     Get address of helper subroutines
000002C0  4DD0 C0A0                     0000B120   236          BAS   R13,VERISUB      Go verify results
000002C4  12EE                                     237          LTR   R14,R14          Was return address provided?
000002C6  077E                                     238          BNZR  R14              Yes, return to z/CMS test rig.
000002C8  B2B2 F2D0                     000002D0   239          LPSWE GOODPSW          Load SUCCESS PSW
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page     6

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000002D0                                           241          DS    0D            Ensure correct alignment for PSW
000002D0  00020000 00000000                        242 GOODPSW  DC    X'0002000000000000',AD(0)  Normal end - disabled wait
000002E0  00020000 00000000                        243 FAILPSW  DC    X'0002000000000000',XL6'00',X'0BAD' Abnormal end
                                                   244 *
000002F0  00000000                                 245 CTLR0    DS    F
000002F4  00000000                                 246 FPCREGNT DC    X'00000000'  FPCR, trap all IEEE exceptions, zero flags
000002F8  F8000000                                 247 FPCREGTR DC    X'F8000000'  FPCR, trap no IEEE exceptions, zero flags
                                                   248 *
                                                   249 * Input values parameter list, four fullwords:
                                                   250 *      1) Count,
                                                   251 *      2) Address of inputs,
                                                   252 *      3) Address to place results, and
                                                   253 *      4) Address to place DXC/Flags/cc values.
                                                   254 *
000002FC                                           255 SHORTS   DS    0F           Inputs for short BFP testing
000002FC  00000009                                 256          DC    A(SBFPCT/4)
00000300  000008AC                                 257          DC    A(SBFPIN)
00000304  00001000                                 258          DC    A(SINTOUT)
00000308  00001200                                 259          DC    A(SINTFLGS)
                                                   260 *
0000030C                                           261 LONGS    DS    0F           Inputs for long BFP testing
0000030C  00000009                                 262          DC    A(LBFPCT/8)
00000310  00000908                                 263          DC    A(LBFPIN)
00000314  00002000                                 264          DC    A(LINTOUT)
00000318  00002200                                 265          DC    A(LINTFLGS)
                                                   266 *
0000031C                                           267 EXTDS    DS    0F           Inputs for Extended BFP testing
0000031C  00000009                                 268          DC    A(XBFPCT/16)
00000320  000009C0                                 269          DC    A(XBFPIN)
00000324  00003000                                 270          DC    A(XINTOUT)
00000328  00003200                                 271          DC    A(XINTFLGS)
                                                   272 *
0000032C  0000000E                                 273 RMSHORTS DC    A(SBFPRMCT/4)
00000330  000008D0                                 274          DC    A(SBFPINRM)  Short BFP rounding mode test inputs
00000334  00001300                                 275          DC    A(SINTRMO)   Short BFP rounding mode test results
00000338  00001800                                 276          DC    A(SINTRMOF)  Short BFP rounding mode test flags
                                                   277 *
0000033C  0000000E                                 278 RMLONGS  DC    A(LBFPRMCT/8)
00000340  00000950                                 279          DC    A(LBFPINRM)  Long BFP rounding mode test inputs
00000344  00002300                                 280          DC    A(LINTRMO)   Long BFP rounding mode test results
00000348  00002800                                 281          DC    A(LINTRMOF)  Long BFP rounding mode test flags
                                                   282 *
0000034C  0000000F                                 283 RMEXTDS  DC    A(XBFPRMCT/16)
00000350  00000A50                                 284          DC    A(XBFPINRM)  Extended BFP rounding mode test inputs
00000354  00003300                                 285          DC    A(XINTRMO)   Extended BFP rounding mode test results
00000358  00003800                                 286          DC    A(XINTRMOF)  Space for rounding mode test flags
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page     7

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   288 ***********************************************************************
                                                   289 *
                                                   290 * Convert short BFP to integer-64 format.  A pair of results is
                                                   291 * generated for each input: one with all exceptions non-trappable, and
                                                   292 * the second with all exceptions trappable.   The FPCR and condition
                                                   293 * code is stored for each result.
                                                   294 *
                                                   295 ***********************************************************************


0000035C  9823 A000                     00000000   297 CGEBR    LM    R2,R3,0(R10)  Get count and address of test input values
00000360  9878 A008                     00000008   298          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000364  1222                                     299          LTR   R2,R2         Any test cases?
00000366  078D                                     300          BZR   R13           ..No, return to caller
00000368  0DC0                                     301          BASR  R12,0         Set top of loop
                                                   302 *
0000036A  7880 3000                     00000000   303          LE    FPR8,0(,R3)   Get short BFP test value
0000036E  B29D F2F4                     000002F4   304          LFPC  FPCREGNT      Set exceptions non-trappable
00000372  B3A8 0018                                305          CGEBR R1,0,FPR8     Cvt float in FPR8 to Int in GPR1
00000376  E310 7000 0024                00000000   306          STG   R1,0(,R7)     Store int-64 result
0000037C  B29C 8000                     00000000   307          STFPC 0*4(R8)       Store resulting FPCR flags and DXC
00000380  B222 0010                                308          IPM   R1            Get condition code and program mask
00000384  8810 001C                     0000001C   309          SRL   R1,28         Isolate CC in low order byte
00000388  4210 8003                     00000003   310          STC   R1,(0*4)+3(,R8)  Save CC as low byte of FPCR
                                                   311 *
0000038C  B29D F2F8                     000002F8   312          LFPC  FPCREGTR      Set exceptions trappable
00000390  B982 0011                                313          XGR   R1,R1         Clear any residual result in R1
00000394  0410                                     314          SPM   R1            Clear out any residual nz condition code
00000396  B3A8 0018                                315          CGEBR R1,0,FPR8     Cvt float in FPR8 to Int in GPR1
0000039A  E310 7008 0024                00000008   316          STG   R1,8(,R7)     Store short BFP result
000003A0  B29C 8004                     00000004   317          STFPC 4(R8)         Store resulting FPCR flags and DXC
000003A4  B222 0010                                318          IPM   R1            Get condition code and program mask
000003A8  8810 001C                     0000001C   319          SRL   R1,28         Isolate CC in low order byte
000003AC  4210 8007                     00000007   320          STC   R1,(1*4)+3(,R8)  Save CC as low byte of FPCR
                                                   321 *
000003B0  4130 3004                     00000004   322          LA    R3,4(,R3)     Point to next input value
000003B4  4170 7010                     00000010   323          LA    R7,2*8(,R7)   Point to next int-64 converted value pair
000003B8  4180 8008                     00000008   324          LA    R8,2*4(,R8)   Point to next FPCR/CC result area
000003BC  062C                                     325          BCTR  R2,R12        Convert next input value.
000003BE  07FD                                     326          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page     8

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   328 ***********************************************************************
                                                   329 *
                                                   330 * Convert short BFP to integers using each possible rounding mode.
                                                   331 * Ten test results are generated for each input.  A 48-byte test result
                                                   332 * section is used to keep results sets aligned on a quad-double word.
                                                   333 *
                                                   334 * The first four tests use rounding modes specified in the FPC with the
                                                   335 * IEEE Inexact exception supressed.  SRNM (2-bit) is used  for the
                                                   336 * first two FPCR-controlled tests and SRNMB (3-bit) is used for the
                                                   337 * last two To get full coverage of that instruction pair.
                                                   338 *
                                                   339 * The next six results use instruction-specified rounding modes.
                                                   340 *
                                                   341 * The default rounding mode (0 for RNTE) is not tested in this section;
                                                   342 * prior tests used the default rounding mode.  RNTE is tested
                                                   343 * explicitly as a rounding mode in this section.
                                                   344 *
                                                   345 ***********************************************************************


000003C0  9823 A000                     00000000   347 CGEBRA   LM    R2,R3,0(R10)  Get count and address of test input values
000003C4  9878 A008                     00000008   348          LM    R7,R8,8(R10)  Get address of result area and flag area.
000003C8  1222                                     349          LTR   R2,R2         Any test cases?
000003CA  078D                                     350          BZR   R13           ..No, return to caller
000003CC  0DC0                                     351          BASR  R12,0         Set top of loop
                                                   352 *
000003CE  7880 3000                     00000000   353          LE    FPR8,0(,R3)   Get short BFP test value
                                                   354 *
                                                   355 * Test cases using rounding mode specified in the FPCR
                                                   356 *
000003D2  B29D F2F4                     000002F4   357          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000003D6  B2B8 0001                     00000001   358          SRNMB 1             SET FPCR to RZ, towards zero.
000003DA  B3A8 0418                                359          CGEBRA R1,0,FPR8,B'0100'  FPCR ctl'd rounding, inexact masked
000003DE  E310 7000 0024                00000000   360          STG   R1,0*8(,R7)   Store integer-64 result
000003E4  B29C 8000                     00000000   361          STFPC 0(R8)         Store resulting FPCR flags and DXC
000003E8  B222 0010                                362          IPM   R1            Get condition code and program mask
000003EC  8810 001C                     0000001C   363          SRL   R1,28         Isolate CC in low order byte
000003F0  4210 8003                     00000003   364          STC   R1,3(,R8)     Save CC as low byte of FPCR
                                                   365 *
000003F4  B29D F2F4                     000002F4   366          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000003F8  B2B8 0002                     00000002   367          SRNMB 2             SET FPCR to RP, to +infinity
000003FC  B3A8 0418                                368          CGEBRA R1,0,FPR8,B'0100'  FPCR ctl'd rounding, inexact masked
00000400  E310 7008 0024                00000008   369          STG   R1,1*8(,R7)   Store integer-64 result
00000406  B29C 8004                     00000004   370          STFPC 1*4(R8)       Store resulting FPCR flags and DXC
0000040A  B222 0010                                371          IPM   R1            Get condition code and program mask
0000040E  8810 001C                     0000001C   372          SRL   R1,28         Isolate CC in low order byte
00000412  4210 8007                     00000007   373          STC   R1,(1*4)+3(,R8)  Save cccas low byte of FPCR
                                                   374 *
00000416  B29D F2F4                     000002F4   375          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000041A  B2B8 0003                     00000003   376          SRNMB 3             SET FPCR to RM, to -infinity
0000041E  B3A8 0418                                377          CGEBRA R1,0,FPR8,B'0100'  FPCR ctl'd rounding, inexact masked
00000422  E310 7010 0024                00000010   378          STG   R1,2*8(,R7)   Store integer-64 result
00000428  B29C 8008                     00000008   379          STFPC 2*4(R8)       Store resulting FPCR flags and DXC
0000042C  B222 0010                                380          IPM   R1            Get condition code and program mask
00000430  8810 001C                     0000001C   381          SRL   R1,28         Isolate CC in low order byte
00000434  4210 800B                     0000000B   382          STC   R1,(2*4)+3(,R8)  Save cccas low byte of FPCR
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page     9

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   383 *
00000438  B29D F2F4                     000002F4   384          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000043C  B2B8 0007                     00000007   385          SRNMB 7             RPS, Prepare for Shorter Precision
00000440  B3A8 0418                                386          CGEBRA R1,0,FPR8,B'0100'  FPCR ctl'd rounding, inexact masked
00000444  E310 7018 0024                00000018   387          STG   R1,3*8(,R7)   Store integer-64 result
0000044A  B29C 800C                     0000000C   388          STFPC 3*4(R8)       Store resulting FPCR flags and DXC
0000044E  B222 0010                                389          IPM   R1            Get condition code and program mask
00000452  8810 001C                     0000001C   390          SRL   R1,28         Isolate CC in low order byte
00000456  4210 800F                     0000000F   391          STC   R1,(3*4)+3(,R8)  Save cccas low byte of FPCR
                                                   392 *
0000045A  B29D F2F4                     000002F4   393          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000045E  B3A8 1018                                394          CGEBRA R1,1,FPR8,B'0000'  RNTA, to nearest, ties away
00000462  E310 7020 0024                00000020   395          STG   R1,4*8(,R7)   Store integer-64 result
00000468  B29C 8010                     00000010   396          STFPC 4*4(R8)       Store resulting FPCR flags and DXC
0000046C  B222 0010                                397          IPM   R1            Get condition code and program mask
00000470  8810 001C                     0000001C   398          SRL   R1,28         Isolate CC in low order byte
00000474  4210 8013                     00000013   399          STC   R1,(4*4)+3(,R8)  Save CC as low byte of FPCR
                                                   400 *
00000478  B29D F2F4                     000002F4   401          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000047C  B3A8 3018                                402          CGEBRA R1,3,FPR8,B'0000'  RFS, prepare for shorter precision
00000480  E310 7028 0024                00000028   403          STG   R1,5*8(,R7)   Store integer-64 result
00000486  B29C 8014                     00000014   404          STFPC 5*4(R8)       Store resulting FPCR flags and DXC
0000048A  B222 0010                                405          IPM   R1            Get condition code and program mask
0000048E  8810 001C                     0000001C   406          SRL   R1,28         Isolate CC in low order byte
00000492  4210 8017                     00000017   407          STC   R1,(5*4)+3(,R8)  Save CC as low byte of FPCR
                                                   408 *
00000496  B29D F2F4                     000002F4   409          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000049A  B3A8 4018                                410          CGEBRA R1,4,FPR8,B'0000'  RNTE, to nearest, ties to even
0000049E  E310 7030 0024                00000030   411          STG   R1,6*8(,R7)   Store integer-64 result
000004A4  B29C 8018                     00000018   412          STFPC 6*4(R8)       Store resulting FPCR flags and DXC
000004A8  B222 0010                                413          IPM   R1            Get condition code and program mask
000004AC  8810 001C                     0000001C   414          SRL   R1,28         Isolate CC in low order byte
000004B0  4210 801B                     0000001B   415          STC   R1,(6*4)+3(,R8)  Save CC as low byte of FPCR
                                                   416 *
000004B4  B29D F2F4                     000002F4   417          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000004B8  B3A8 5018                                418          CGEBRA R1,5,FPR8,B'0000'  RZ, toward zero
000004BC  E310 7038 0024                00000038   419          STG   R1,7*8(,R7)   Store integer-64 result
000004C2  B29C 801C                     0000001C   420          STFPC 7*4(R8)       Store resulting FPCR flags and DXC
000004C6  B222 0010                                421          IPM   R1            Get condition code and program mask
000004CA  8810 001C                     0000001C   422          SRL   R1,28         Isolate CC in low order byte
000004CE  4210 801F                     0000001F   423          STC   R1,(7*4)+3(,R8)  Save CC as low byte of FPCR
                                                   424 *
000004D2  B29D F2F4                     000002F4   425          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000004D6  B3A8 6018                                426          CGEBRA R1,6,FPR8,B'0000'  RP, to +inf
000004DA  E310 7040 0024                00000040   427          STG   R1,8*8(,R7)   Store integer-64 result
000004E0  B29C 8020                     00000020   428          STFPC 8*4(R8)       Store resulting FPCR flags and DXC
000004E4  B222 0010                                429          IPM   R1            Get condition code and program mask
000004E8  8810 001C                     0000001C   430          SRL   R1,28         Isolate CC in low order byte
000004EC  4210 8023                     00000023   431          STC   R1,(8*4)+3(,R8)  Save CC as low byte of FPCR
                                                   432 *
000004F0  B29D F2F4                     000002F4   433          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000004F4  B3A8 7018                                434          CGEBRA R1,7,FPR8,B'0000'  RM, to -inf
000004F8  E310 7048 0024                00000048   435          STG   R1,9*8(,R7)   Store integer-64 result
000004FE  B29C 8024                     00000024   436          STFPC 9*4(R8)       Store resulting FPCR flags and DXC
00000502  B222 0010                                437          IPM   R1            Get condition code and program mask
00000506  8810 001C                     0000001C   438          SRL   R1,28         Isolate CC in low order byte
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    10

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000050A  4210 8027                     00000027   439          STC   R1,(9*4)+3(,R8)  Save CC as low byte of FPCR
                                                   440 *
0000050E  4130 3004                     00000004   441          LA    R3,4(,R3)     Point to next input value
00000512  4170 7050                     00000050   442          LA    R7,10*8(,R7)  Point to next short BFP converted values
00000516  4180 8030                     00000030   443          LA    R8,12*4(,R8)  Point to next FPCR/CC result area
0000051A  062C                                     444          BCTR  R2,R12        Convert next input value.
0000051C  07FD                                     445          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    11

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   447 ***********************************************************************
                                                   448 *
                                                   449 * Convert long BFP inputs to integer-64.  A pair of results is
                                                   450 * generated for each input: one with all exceptions non-trappable, and
                                                   451 * the second with all exceptions trappable.   The FPCR and condition
                                                   452 * code is stored for each result.
                                                   453 *
                                                   454 ***********************************************************************


0000051E  9823 A000                     00000000   456 CGDBR    LM    R2,R3,0(R10)  Get count and address of test input values
00000522  9878 A008                     00000008   457          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000526  1222                                     458          LTR   R2,R2         Any test cases?
00000528  078D                                     459          BZR   R13           ..No, return to caller
0000052A  0DC0                                     460          BASR  R12,0         Set top of loop
                                                   461 *
0000052C  6880 3000                     00000000   462          LD    FPR8,0(,R3)   Get long BFP test value
00000530  B29D F2F4                     000002F4   463          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000534  B3A9 0018                                464          CGDBR R1,0,FPR8     Cvt float in FPR8 to Int in GPR1
00000538  E310 7000 0024                00000000   465          STG   R1,0(,R7)     Store integer-64 result
0000053E  B29C 8000                     00000000   466          STFPC 0*4(R8)       Store resulting FPCR flags and DXC
00000542  B222 0010                                467          IPM   R1            Get condition code and program mask
00000546  8810 001C                     0000001C   468          SRL   R1,28         Isolate CC in low order byte
0000054A  4210 8003                     00000003   469          STC   R1,(0*4)+3(,R8)  Save CC as low byte of FPCR
                                                   470 *
0000054E  B29D F2F8                     000002F8   471          LFPC  FPCREGTR      Set exceptions trappable, clear flags
00000552  B982 0011                                472          XGR   R1,R1         Clear any residual result in R1
00000556  0410                                     473          SPM   R1            Clear out any residual nz condition code
00000558  B3A9 0018                                474          CGDBR R1,0,FPR8     Cvt float in FPR8 to Int in GPR1
0000055C  E310 7008 0024                00000008   475          STG   R1,8(,R7)     Store integer-64 result
00000562  B29C 8004                     00000004   476          STFPC 1*4(R8)       Store resulting FPCR flags and DXC
00000566  B222 0010                                477          IPM   R1            Get condition code and program mask
0000056A  8810 001C                     0000001C   478          SRL   R1,28         Isolate CC in low order byte
0000056E  4210 8007                     00000007   479          STC   R1,(1*4)+3(,R8)  Save CC as low byte of FPCR
                                                   480 *
00000572  4130 3008                     00000008   481          LA    R3,8(,R3)     Point to next input values
00000576  4170 7010                     00000010   482          LA    R7,16(,R7)    Point to next int-64 converted value pair
0000057A  4180 8008                     00000008   483          LA    R8,8(,R8)     Point to next FPCR/CC result area
0000057E  062C                                     484          BCTR  R2,R12        Convert next input value.
00000580  07FD                                     485          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    12

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   487 ***********************************************************************
                                                   488 *
                                                   489 * Convert long BFP to integers using each possible rounding mode.
                                                   490 * Ten test results are generated for each input.  A 48-byte test result
                                                   491 * section is used to keep results sets aligned on a quad-double word.
                                                   492 *
                                                   493 * The first four tests use rounding modes specified in the FPC with the
                                                   494 * IEEE Inexact exception supressed.  SRNM (2-bit) is used  for the
                                                   495 * first two FPCR-controlled tests and SRNMB (3-bit) is used for the
                                                   496 * last two To get full coverage of that instruction pair.
                                                   497 *
                                                   498 * The next six results use instruction-specified rounding modes.
                                                   499 *
                                                   500 * The default rounding mode (0 for RNTE) is not tested in this section;
                                                   501 * prior tests used the default rounding mode.  RNTE is tested
                                                   502 * explicitly as a rounding mode in this section.
                                                   503 *
                                                   504 ***********************************************************************


00000582  9823 A000                     00000000   506 CGDBRA   LM    R2,R3,0(R10)  Get count and address of test input values
00000586  9878 A008                     00000008   507          LM    R7,R8,8(R10)  Get address of result area and flag area.
0000058A  1222                                     508          LTR   R2,R2         Any test cases?
0000058C  078D                                     509          BZR   R13           ..No, return to caller
0000058E  0DC0                                     510          BASR  R12,0         Set top of loop
                                                   511 *
00000590  6880 3000                     00000000   512          LD    FPR8,0(,R3)   Get long BFP test value
                                                   513 *
                                                   514 *  Cvt float in FPFPR8 to integer-64
                                                   515 *
                                                   516 * Test cases using rounding mode specified in the FPCR
                                                   517 *
00000594  B29D F2F4                     000002F4   518          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000598  B2B8 0001                     00000001   519          SRNMB 1             SET FPCR to RZ, towards zero.
0000059C  B3A9 0418                                520          CGDBRA R1,0,FPR8,B'0100'  FPCR ctl'd rounding, inexact masked
000005A0  E310 7000 0024                00000000   521          STG   R1,0*8(,R7)   Store integer-64 result
000005A6  B29C 8000                     00000000   522          STFPC 0(R8)         Store resulting FPCR flags and DXC
000005AA  B222 0010                                523          IPM   R1            Get condition code and program mask
000005AE  8810 001C                     0000001C   524          SRL   R1,28         Isolate CC in low order byte
000005B2  4210 8003                     00000003   525          STC   R1,3(,R8)     Save CC as low byte of FPCR
                                                   526 *
000005B6  B29D F2F4                     000002F4   527          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000005BA  B2B8 0002                     00000002   528          SRNMB 2             SET FPCR to RP, to +infinity
000005BE  B3A9 0418                                529          CGDBRA R1,0,FPR8,B'0100'  FPCR ctl'd rounding, inexact masked
000005C2  E310 7008 0024                00000008   530          STG   R1,1*8(,R7)   Store integer-64 result
000005C8  B29C 8004                     00000004   531          STFPC 1*4(R8)       Store resulting FPCR flags and DXC
000005CC  B222 0010                                532          IPM   R1            Get condition code and program mask
000005D0  8810 001C                     0000001C   533          SRL   R1,28         Isolate CC in low order byte
000005D4  4210 8007                     00000007   534          STC   R1,(1*4)+3(,R8)  Save CC as low byte of FPCR
                                                   535 *
000005D8  B29D F2F4                     000002F4   536          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000005DC  B2B8 0003                     00000003   537          SRNMB 3             SET FPCR to RM, to -infinity
000005E0  B3A9 0418                                538          CGDBRA R1,0,FPR8,B'0100'  FPCR ctl'd rounding, inexact masked
000005E4  E310 7010 0024                00000010   539          STG   R1,2*8(,R7)   Store integer-64 result
000005EA  B29C 8008                     00000008   540          STFPC 2*4(R8)       Store resulting FPCR flags and DXC
000005EE  B222 0010                                541          IPM   R1            Get condition code and program mask
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    13

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000005F2  8810 001C                     0000001C   542          SRL   R1,28         Isolate CC in low order byte
000005F6  4210 800B                     0000000B   543          STC   R1,(2*4)+3(,R8)  Save CC as low byte of FPCR
                                                   544 *
000005FA  B29D F2F4                     000002F4   545          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000005FE  B2B8 0007                     00000007   546          SRNMB 7             RPS, Prepare for Shorter Precision
00000602  B3A9 0418                                547          CGDBRA R1,0,FPR8,B'0100'  FPCR ctl'd rounding, inexact masked
00000606  E310 7018 0024                00000018   548          STG   R1,3*8(,R7)   Store integer-64 result
0000060C  B29C 800C                     0000000C   549          STFPC 3*4(R8)       Store resulting FPCR flags and DXC
00000610  B222 0010                                550          IPM   R1            Get condition code and program mask
00000614  8810 001C                     0000001C   551          SRL   R1,28         Isolate CC in low order byte
00000618  4210 800F                     0000000F   552          STC   R1,(3*4)+3(,R8)  Save CC as low byte of FPCR
                                                   553 *
0000061C  B29D F2F4                     000002F4   554          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000620  B3A9 1018                                555          CGDBRA R1,1,FPR8,B'0000'  RNTA, to nearest, ties away
00000624  E310 7020 0024                00000020   556          STG   R1,4*8(,R7)   Store integer-64 result
0000062A  B29C 8010                     00000010   557          STFPC 4*4(R8)       Store resulting FPCR flags and DXC
0000062E  B222 0010                                558          IPM   R1            Get condition code and program mask
00000632  8810 001C                     0000001C   559          SRL   R1,28         Isolate CC in low order byte
00000636  4210 8013                     00000013   560          STC   R1,(4*4)+3(,R8)  Save CC as low byte of FPCR
                                                   561 *
0000063A  B29D F2F4                     000002F4   562          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000063E  B3A9 3018                                563          CGDBRA R1,3,FPR8,B'0000'  RFS, prepare for shorter precision
00000642  E310 7028 0024                00000028   564          STG   R1,5*8(,R7)   Store integer-64 result
00000648  B29C 8014                     00000014   565          STFPC 5*4(R8)       Store resulting FPCR flags and DXC
0000064C  B222 0010                                566          IPM   R1            Get condition code and program mask
00000650  8810 001C                     0000001C   567          SRL   R1,28         Isolate CC in low order byte
00000654  4210 8017                     00000017   568          STC   R1,(5*4)+3(,R8)  Save CC as low byte of FPCR
                                                   569 *
00000658  B29D F2F4                     000002F4   570          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000065C  B3A9 4018                                571          CGDBRA R1,4,FPR8,B'0000'  RNTE, to nearest, ties to even
00000660  E310 7030 0024                00000030   572          STG   R1,6*8(,R7)   Store integer-64 result
00000666  B29C 8018                     00000018   573          STFPC 6*4(R8)       Store resulting FPCR flags and DXC
0000066A  B222 0010                                574          IPM   R1            Get condition code and program mask
0000066E  8810 001C                     0000001C   575          SRL   R1,28         Isolate CC in low order byte
00000672  4210 801B                     0000001B   576          STC   R1,(6*4)+3(,R8)  Save CC as low byte of FPCR
                                                   577 *
00000676  B29D F2F4                     000002F4   578          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
0000067A  B3A9 5018                                579          CGDBRA R1,5,FPR8,B'0000'  RZ, toward zero
0000067E  E310 7038 0024                00000038   580          STG   R1,7*8(,R7)   Store integer-64 result
00000684  B29C 801C                     0000001C   581          STFPC 7*4(R8)       Store resulting FPCR flags and DXC
00000688  B222 0010                                582          IPM   R1            Get condition code and program mask
0000068C  8810 001C                     0000001C   583          SRL   R1,28         Isolate CC in low order byte
00000690  4210 801F                     0000001F   584          STC   R1,(7*4)+3(,R8)  Save CC as low byte of FPCR
                                                   585 *
00000694  B29D F2F4                     000002F4   586          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000698  B3A9 6018                                587          CGDBRA R1,6,FPR8,B'0000'  RP, to +inf
0000069C  E310 7040 0024                00000040   588          STG   R1,8*8(,R7)   Store integer-64 result
000006A2  B29C 8020                     00000020   589          STFPC 8*4(R8)       Store resulting FPCR flags and DXC
000006A6  B222 0010                                590          IPM   R1            Get condition code and program mask
000006AA  8810 001C                     0000001C   591          SRL   R1,28         Isolate CC in low order byte
000006AE  4210 8023                     00000023   592          STC   R1,(8*4)+3(,R8)  Save CC as low byte of FPCR
                                                   593 *
000006B2  B29D F2F4                     000002F4   594          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000006B6  B3A9 7018                                595          CGDBRA R1,7,FPR8,B'0000'  RM, to -inf
000006BA  E310 7048 0024                00000048   596          STG   R1,9*8(,R7)   Store integer-64 result
000006C0  B29C 8024                     00000024   597          STFPC 9*4(R8)       Store resulting FPCR flags and DXC
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    14

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000006C4  B222 0010                                598          IPM   R1            Get condition code and program mask
000006C8  8810 001C                     0000001C   599          SRL   R1,28         Isolate CC in low order byte
000006CC  4210 8027                     00000027   600          STC   R1,(9*4)+3(,R8)  Save CC as low byte of FPCR
                                                   601 *
000006D0  4130 3008                     00000008   602          LA    R3,8(,R3)     Point to next input value
000006D4  4170 7050                     00000050   603          LA    R7,10*8(,R7)  Point to next long BFP converted values
000006D8  4180 8030                     00000030   604          LA    R8,12*4(,R8)  Point to next FPCR/CC result area
000006DC  062C                                     605          BCTR  R2,R12        Convert next input value.
000006DE  07FD                                     606          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    15

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   608 ***********************************************************************
                                                   609 *
                                                   610 * Convert extended BFP to integer-64.  A pair of results is generated
                                                   611 * for each input: one with all exceptions non-trappable, and the
                                                   612 * second with all exceptions trappable.   The FPCR and condition code
                                                   613 * are stored for each result.
                                                   614 *
                                                   615 ***********************************************************************


000006E0  9823 A000                     00000000   617 CGXBR    LM    R2,R3,0(R10)  Get count and address of test input values
000006E4  9878 A008                     00000008   618          LM    R7,R8,8(R10)  Get address of result area and flag area.
000006E8  1222                                     619          LTR   R2,R2         Any test cases?
000006EA  078D                                     620          BZR   R13           ..No, return to caller
000006EC  0DC0                                     621          BASR  R12,0         Set top of loop
                                                   622 *
000006EE  6880 3000                     00000000   623          LD    FPR8,0(,R3)   Get extended BFP test value part 1
000006F2  68A0 3008                     00000008   624          LD    FPR10,8(,R3)  Get extended BFP test value part 1
000006F6  B29D F2F4                     000002F4   625          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000006FA  B3AA 0018                                626          CGXBR R1,0,FPR8     Cvt float in FPR8-FPR10 to Int-64 in GPR1
000006FE  E310 7000 0024                00000000   627          STG   R1,0(,R7)     Store integer-64 result
00000704  B29C 8000                     00000000   628          STFPC (0*4)(R8)     Store resulting FPCR flags and DXC
00000708  B222 0010                                629          IPM   R1            Get condition code and program mask
0000070C  8810 001C                     0000001C   630          SRL   R1,28         Isolate CC in low order byte
00000710  4210 8003                     00000003   631          STC   R1,(0*4)+3(,R8)  Save CC as low byte of FPCR
                                                   632 *
00000714  B29D F2F8                     000002F8   633          LFPC  FPCREGTR      Set exceptions trappable, clear flags
00000718  B982 0011                                634          XGR   R1,R1         Clear any residual result in R1
0000071C  0410                                     635          SPM   R1            Clear out any residual nz condition code
0000071E  B3AA 0018                                636          CGXBR R1,0,FPR8     Cvt float in FPR8-FPR10 to Int-64 in GPR1
00000722  E310 7008 0024                00000008   637          STG   R1,8(,R7)     Store integer-64 result
00000728  B29C 8004                     00000004   638          STFPC (1*4)(R8)     Store resulting FPCR flags and DXC
0000072C  B222 0010                                639          IPM   R1            Get condition code and program mask
00000730  8810 001C                     0000001C   640          SRL   R1,28         Isolate CC in low order byte
00000734  4210 8007                     00000007   641          STC   R1,(1*4)+3(,R8)  Save CC as low byte of FPCR
                                                   642 *
00000738  4130 3010                     00000010   643          LA    R3,16(,R3)    Point to next extended BFP input value
0000073C  4170 7010                     00000010   644          LA    R7,16(,R7)    Point to next int-64 converted value pair
00000740  4180 8008                     00000008   645          LA    R8,8(,R8)     Point to next FPCR/CC result area
00000744  062C                                     646          BCTR  R2,R12        Convert next input value.
00000746  07FD                                     647          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    16

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   649 ***********************************************************************
                                                   650 *
                                                   651 * Convert extended BFP to integers using each possible rounding mode.
                                                   652 * Ten test results are generated for each input.  A 48-byte test result
                                                   653 * section is used to keep results sets aligned on a quad-double word.
                                                   654 *
                                                   655 * The first four tests use rounding modes specified in the FPC with the
                                                   656 * IEEE Inexact exception supressed.  SRNM (2-bit) is used  for the
                                                   657 * first two FPCR-controlled tests and SRNMB (3-bit) is used for the
                                                   658 * last two To get full coverage of that instruction pair.
                                                   659 *
                                                   660 * The next six results use instruction-specified rounding modes.
                                                   661 *
                                                   662 * The default rounding mode (0 for RNTE) is not tested in this section;
                                                   663 * prior tests used the default rounding mode.  RNTE is tested
                                                   664 * explicitly as a rounding mode in this section.
                                                   665 *
                                                   666 ***********************************************************************


00000748  9823 A000                     00000000   668 CGXBRA   LM    R2,R3,0(R10)  Get count and address of test input values
0000074C  9878 A008                     00000008   669          LM    R7,R8,8(R10)  Get address of result area and flag area.
00000750  1222                                     670          LTR   R2,R2         Any test cases?
00000752  078D                                     671          BZR   R13           ..No, return to caller
00000754  0DC0                                     672          BASR  R12,0         Set top of loop
                                                   673 *
00000756  6880 3000                     00000000   674          LD    FPR8,0(,R3)    Get extended BFP test value part 1
0000075A  68A0 3008                     00000008   675          LD    FPR10,8(,R3)    Get extended BFP test value part 2
                                                   676 *
                                                   677 * Test cases using rounding mode specified in the FPCR
                                                   678 *
0000075E  B29D F2F4                     000002F4   679          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000762  B2B8 0001                     00000001   680          SRNMB 1             SET FPCR to RZ,  towards zero.
00000766  B3AA 0418                                681          CGXBRA R1,0,FPR8,B'0100'  FPCR ctl'd rounding, inexact masked
0000076A  E310 7000 0024                00000000   682          STG   R1,0*8(,R7)   Store integer-64 result
00000770  B29C 8000                     00000000   683          STFPC 0(R8)         Store resulting FPCR flags and DXC
00000774  B222 0010                                684          IPM   R1            Get condition code and program mask
00000778  8810 001C                     0000001C   685          SRL   R1,28         Isolate CC in low order byte
0000077C  4210 8003                     00000003   686          STC   R1,3(,R8)     Save CC as low byte of FPCR
                                                   687 *
00000780  B29D F2F4                     000002F4   688          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000784  B2B8 0002                     00000002   689          SRNMB 2             SET FPCR to RP,  to +infinity
00000788  B3AA 0418                                690          CGXBRA R1,0,FPR8,B'0100'  FPCR ctl'd rounding, inexact masked
0000078C  E310 7008 0024                00000008   691          STG   R1,1*8(,R7)   Store integer-64 result
00000792  B29C 8004                     00000004   692          STFPC 1*4(R8)       Store resulting FPCR flags and DXC
00000796  B222 0010                                693          IPM   R1            Get condition code and program mask
0000079A  8810 001C                     0000001C   694          SRL   R1,28         Isolate CC in low order byte
0000079E  4210 8007                     00000007   695          STC   R1,(1*4)+3(,R8)  Save CC as low byte of FPCR
                                                   696 *
000007A2  B29D F2F4                     000002F4   697          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000007A6  B2B8 0003                     00000003   698          SRNMB 3             SET FPCR to RM, to -infinity
000007AA  B3AA 0418                                699          CGXBRA R1,0,FPR8,B'0100'  FPCR ctl'd rounding, inexact masked
000007AE  E310 7010 0024                00000010   700          STG   R1,2*8(,R7)   Store integer-64 result
000007B4  B29C 8008                     00000008   701          STFPC 2*4(R8)       Store resulting FPCR flags and DXC
000007B8  B222 0010                                702          IPM   R1            Get condition code and program mask
000007BC  8810 001C                     0000001C   703          SRL   R1,28         Isolate CC in low order byte
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    17

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000007C0  4210 800B                     0000000B   704          STC   R1,(2*4)+3(,R8)  Save CC as low byte of FPCR
                                                   705 *
000007C4  B29D F2F4                     000002F4   706          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000007C8  B2B8 0007                     00000007   707          SRNMB 7             RPS, Prepare for Shorter Precision
000007CC  B3AA 0418                                708          CGXBRA R1,0,FPR8,B'0100'  FPCR ctl'd rounding, inexact masked
000007D0  E310 7018 0024                00000018   709          STG   R1,3*8(,R7)   Store integer-64 result
000007D6  B29C 800C                     0000000C   710          STFPC 3*4(R8)       Store resulting FPCR flags and DXC
000007DA  B222 0010                                711          IPM   R1            Get condition code and program mask
000007DE  8810 001C                     0000001C   712          SRL   R1,28         Isolate CC in low order byte
000007E2  4210 800F                     0000000F   713          STC   R1,(3*4)+3(,R8)  Save CC as low byte of FPCR
                                                   714 *
000007E6  B29D F2F4                     000002F4   715          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
000007EA  B3AA 1018                                716          CGXBRA R1,1,FPR8,B'0000'  RNTA, to nearest, ties away
000007EE  E310 7020 0024                00000020   717          STG   R1,4*8(,R7)   Store integer-64 result
000007F4  B29C 8010                     00000010   718          STFPC 4*4(R8)       Store resulting FPCR flags and DXC
000007F8  B222 0010                                719          IPM   R1            Get condition code and program mask
000007FC  8810 001C                     0000001C   720          SRL   R1,28         Isolate CC in low order byte
00000800  4210 8013                     00000013   721          STC   R1,(4*4)+3(,R8)  Save CC as low byte of FPCR
                                                   722 *
00000804  B29D F2F4                     000002F4   723          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000808  B3AA 3018                                724          CGXBRA R1,3,FPR8,B'0000'  RFS, prepare for shorter precision
0000080C  E310 7028 0024                00000028   725          STG   R1,5*8(,R7)   Store integer-64 result
00000812  B29C 8014                     00000014   726          STFPC 5*4(R8)       Store resulting FPCR flags and DXC
00000816  B222 0010                                727          IPM   R1            Get condition code and program mask
0000081A  8810 001C                     0000001C   728          SRL   R1,28         Isolate CC in low order byte
0000081E  4210 8017                     00000017   729          STC   R1,(5*4)+3(,R8)  Save CC as low byte of FPCR
                                                   730 *
00000822  B29D F2F4                     000002F4   731          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000826  B3AA 4018                                732          CGXBRA R1,4,FPR8,B'0000'  RNTE to nearest, ties to even
0000082A  E310 7030 0024                00000030   733          STG   R1,6*8(,R7)   Store integer-64 result
00000830  B29C 8018                     00000018   734          STFPC 6*4(R8)       Store resulting FPCR flags and DXC
00000834  B222 0010                                735          IPM   R1            Get condition code and program mask
00000838  8810 001C                     0000001C   736          SRL   R1,28         Isolate CC in low order byte
0000083C  4210 801B                     0000001B   737          STC   R1,(6*4)+3(,R8)  Save CC as low byte of FPCR
                                                   738 *
00000840  B29D F2F4                     000002F4   739          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000844  B3AA 5018                                740          CGXBRA R1,5,FPR8,B'0000'  RZ toward zero
00000848  E310 7038 0024                00000038   741          STG   R1,7*8(,R7)   Store integer-64 result
0000084E  B29C 801C                     0000001C   742          STFPC 7*4(R8)       Store resulting FPCR flags and DXC
00000852  B222 0010                                743          IPM   R1            Get condition code and program mask
00000856  8810 001C                     0000001C   744          SRL   R1,28         Isolate CC in low order byte
0000085A  4210 801F                     0000001F   745          STC   R1,(7*4)+3(,R8)  Save CC as low byte of FPCR
                                                   746 *
0000085E  B29D F2F4                     000002F4   747          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000862  B3AA 6018                                748          CGXBRA R1,6,FPR8,B'0000'  to +inf
00000866  E310 7040 0024                00000040   749          STG   R1,8*8(,R7)   Store integer-64 result
0000086C  B29C 8020                     00000020   750          STFPC 8*4(R8)       Store resulting FPCR flags and DXC
00000870  B222 0010                                751          IPM   R1            Get condition code and program mask
00000874  8810 001C                     0000001C   752          SRL   R1,28         Isolate CC in low order byte
00000878  4210 8023                     00000023   753          STC   R1,(8*4)+3(,R8)  Save CC as low byte of FPCR
                                                   754 *
0000087C  B29D F2F4                     000002F4   755          LFPC  FPCREGNT      Set exceptions non-trappable, clear flags
00000880  B3AA 7018                                756          CGXBRA R1,7,FPR8,B'0000'  to -inf
00000884  E310 7048 0024                00000048   757          STG   R1,9*8(,R7)   Store integer-64 result
0000088A  B29C 8024                     00000024   758          STFPC 9*4(R8)       Store resulting FPCR flags and DXC
0000088E  B222 0010                                759          IPM   R1            Get condition code and program mask
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    18

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000892  8810 001C                     0000001C   760          SRL   R1,28         Isolate CC in low order byte
00000896  4210 8027                     00000027   761          STC   R1,(9*4)+3(,R8)  Save CC as low byte of FPCR
                                                   762 *
0000089A  4130 3010                     00000010   763          LA    R3,16(,R3)   Point to next input value
0000089E  4170 7050                     00000050   764          LA    R7,10*8(,R7) Point to next long BFP converted values
000008A2  4180 8030                     00000030   765          LA    R8,12*4(,R8) Point to next FPCR/CC result area
000008A6  062C                                     766          BCTR  R2,R12        Convert next input value.
000008A8  07FD                                     767          BR    R13           All converted; return.
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    19

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   769 ***********************************************************************
                                                   770 *
                                                   771 * Floating point inputs for Convert From Fixed testing.  The same test
                                                   772 * values in the appropriate input format are used for short, long,
                                                   773 * and extended format tests.  The last four values should generate
                                                   774 * exceptions.
                                                   775 *
                                                   776 ***********************************************************************


                                                   778 *
                                                   779 * Inputs for basic tests of short BFP to int-64
                                                   780 *
000008AC                                           781 SBFPIN   DS    0F                Inputs for short BFP testing
000008AC  3F800000                                 782          DC    X'3F800000'  +1.0
000008B0  40000000                                 783          DC    X'40000000'  +2.0
000008B4  40800000                                 784          DC    X'40800000'  +4.0
000008B8  C0000000                                 785          DC    X'C0000000'  -2.0
000008BC  7F810000                                 786          DC    X'7F810000'  SNaN
000008C0  7FC10000                                 787          DC    X'7FC10000'  QNaN
000008C4  5F000000                                 788          DC    X'5F000000'  +max int-64 + 1
                                                   789 *                                  +9,223,372,036,854,775,807 + 1
000008C8  DF000001                                 790          DC    X'DF000001'  -max int-64 - 2
                                                   791 *                                  -9,223,372,036,854,775,807 - 2
000008CC  5EFFFFFF                                 792          DC    X'5EFFFFFF'  Largest short BFP that fits in int-64
                                                   793 *                                  +9,223,371,487,098,961,920
                                                   794 *                                  = 0x7FFFFF80000000000
                              00000024  00000001   795 SBFPCT   EQU   *-SBFPIN     Count of short BFP in list * 4
                                                   796 *
                                                   797 * Inputs for exhaustive rounding mode tests of short BFP to int-64
                                                   798 *
000008D0                                           799 SBFPINRM DS    0F
000008D0  C1180000                                 800          DC    X'C1180000'         -9.5
000008D4  C0B00000                                 801          DC    X'C0B00000'         -5.5
000008D8  C0200000                                 802          DC    X'C0200000'         -2.5
000008DC  BFC00000                                 803          DC    X'BFC00000'         -1.5
000008E0  BF000000                                 804          DC    X'BF000000'         -0.5
000008E4  3F000000                                 805          DC    X'3F000000'         +0.5
000008E8  3FC00000                                 806          DC    X'3FC00000'         +1.5
000008EC  40200000                                 807          DC    X'40200000'         +2.5
000008F0  40B00000                                 808          DC    X'40B00000'         +5.5
000008F4  41180000                                 809          DC    X'41180000'         +9.5
000008F8  3F400000                                 810          DC    X'3F400000'         +0.75
000008FC  3E800000                                 811          DC    X'3E800000'         +0.25
00000900  BF400000                                 812          DC    X'BF400000'         -0.75
00000904  BE800000                                 813          DC    X'BE800000'         -0.25
                              00000038  00000001   814 SBFPRMCT EQU   *-SBFPINRM   Count of short BFP * 4 for rounding tests
                                                   815 *
                                                   816 * Inputs for basic tests of long BFP to int-64
                                                   817 *
00000908                                           818 LBFPIN   DS    0F                Inputs for long BFP testing
00000908  3FF00000 00000000                        819          DC    X'3FF0000000000000'    +1.0
00000910  40000000 00000000                        820          DC    X'4000000000000000'    +2.0
00000918  40100000 00000000                        821          DC    X'4010000000000000'    +4.0
00000920  C0000000 00000000                        822          DC    X'C000000000000000'    -2.0
00000928  7FF01000 00000000                        823          DC    X'7FF0100000000000'    SNaN
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    20

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000930  7FF81000 00000000                        824          DC    X'7FF8100000000000'    QNaN
00000938  43E00000 00000000                        825          DC    X'43E0000000000000'   +max int-64 + 1.
                                                   826 *                          (+9,223,372,036,854,775,807 + 1)
00000940  C3E00000 00100000                        827          DC    X'C3E0000000100000'   -max int-64 - 2
                                                   828 *                          (-9,223,372,036,854,775,807 - 2)
00000948  43DFFFFF FFFFFFFF                        829          DC    X'43DFFFFFFFFFFFFF'    Largest long BFP that fits in
                                                   830 *                          ..int-64: 9,223,372,036,854,774,784,
                                                   831 *                          .. 0x7FFFFFFFFFFFF800
                              00000048  00000001   832 LBFPCT   EQU   *-LBFPIN     Count of long BFP in list * 8
                                                   833 *
                                                   834 * Inputs for exhaustive rounding mode tests of long BFP to int-64
                                                   835 *
00000950                                           836 LBFPINRM DS    0F
00000950  C0230000 00000000                        837          DC    X'C023000000000000'         -9.5
00000958  C0160000 00000000                        838          DC    X'C016000000000000'         -5.5
00000960  C0040000 00000000                        839          DC    X'C004000000000000'         -2.5
00000968  BFF80000 00000000                        840          DC    X'BFF8000000000000'         -1.5
00000970  BFE00000 00000000                        841          DC    X'BFE0000000000000'         -0.5
00000978  3FE00000 00000000                        842          DC    X'3FE0000000000000'         +0.5
00000980  3FF80000 00000000                        843          DC    X'3FF8000000000000'         +1.5
00000988  40040000 00000000                        844          DC    X'4004000000000000'         +2.5
00000990  40160000 00000000                        845          DC    X'4016000000000000'         +5.5
00000998  40230000 00000000                        846          DC    X'4023000000000000'         +9.5
000009A0  3FE80000 00000000                        847          DC    X'3FE8000000000000'         +0.75
000009A8  3FD00000 00000000                        848          DC    X'3FD0000000000000'         +0.25
000009B0  BFE80000 00000000                        849          DC    X'BFE8000000000000'         -0.75
000009B8  BFD00000 00000000                        850          DC    X'BFD0000000000000'         -0.25
                              00000070  00000001   851 LBFPRMCT EQU   *-LBFPINRM   Count of long BFP * 8 for rounding tests
                                                   852 *
                                                   853 * Inputs for basic tests of extended BFP to int-64
                                                   854 *
000009C0                                           855 XBFPIN   DS    0D                Inputs for long BFP testing
000009C0  3FFF0000 00000000                        856          DC    X'3FFF0000000000000000000000000000'    +1.0
000009D0  40000000 00000000                        857          DC    X'40000000000000000000000000000000'    +2.0
000009E0  40010000 00000000                        858          DC    X'40010000000000000000000000000000'    +4.0
000009F0  C0000000 00000000                        859          DC    X'C0000000000000000000000000000000'    -2.0
00000A00  7FFF0100 00000000                        860          DC    X'7FFF0100000000000000000000000000'    SNaN
00000A10  7FFF8100 00000000                        861          DC    X'7FFF8100000000000000000000000000'    QNaN
00000A20  403E0000 00000000                        862          DC    X'403E0000000000000000000000000000'   +max int-64 + 1
                                                   863 *                                          (+9223372036854775807 + 1)
00000A30  C03E0000 00010000                        864          DC    X'C03E0000000100000000000000000000'   -max int-64 - 2
                                                   865 *                                          (-9223372036854775807 - 2)
00000A40  403DFFFF FFFFFFFF                        866          DC    X'403DFFFFFFFFFFFFFFFC000000000000'   +max int-64
                              00000090  00000001   867 XBFPCT   EQU   *-XBFPIN     Count of extended BFP in list * 16
                                                   868 *
                                                   869 * Inputs for exhaustive rounding mode tests of extended BFP to int-64
                                                   870 *
00000A50                                           871 XBFPINRM DS    0D
00000A50  C0023000 00000000                        872          DC    X'C0023000000000000000000000000000'         -9.5
00000A60  C0016000 00000000                        873          DC    X'C0016000000000000000000000000000'         -5.5
00000A70  C0004000 00000000                        874          DC    X'C0004000000000000000000000000000'         -2.5
00000A80  BFFF8000 00000000                        875          DC    X'BFFF8000000000000000000000000000'         -1.5
00000A90  BFFE0000 00000000                        876          DC    X'BFFE0000000000000000000000000000'         -0.5
00000AA0  3FFE0000 00000000                        877          DC    X'3FFE0000000000000000000000000000'         +0.5
00000AB0  3FFF8000 00000000                        878          DC    X'3FFF8000000000000000000000000000'         +1.5
00000AC0  40004000 00000000                        879          DC    X'40004000000000000000000000000000'         +2.5
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    21

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00000AD0  40016000 00000000                        880          DC    X'40016000000000000000000000000000'         +5.5
00000AE0  40023000 00000000                        881          DC    X'40023000000000000000000000000000'         +9.5
00000AF0  3FFE8000 00000000                        882          DC    X'3FFE8000000000000000000000000000'         +0.75
00000B00  3FFD0000 00000000                        883          DC    X'3FFD0000000000000000000000000000'         +0.25
00000B10  BFFE8000 00000000                        884          DC    X'BFFE8000000000000000000000000000'         -0.75
00000B20  BFFD0000 00000000                        885          DC    X'BFFD0000000000000000000000000000'         -0.25
00000B30  403DFFFF FFFFFFFF                        886          DC    X'403DFFFFFFFFFFFFFFFE000000000000'   max int-64 + 0.5
                                                   887 *                     9,223,372,036,854,775,807.5, overflows on some
                                                   888 *                     ..but not all rounding modes
                              000000F0  00000001   889 XBFPRMCT EQU   *-XBFPINRM   Count of ext'd BFP * 16 for rounding tests
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    22

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   891 ***********************************************************************
                                                   892 *                 ACTUAL results saved here
                                                   893 ***********************************************************************
                                                   894 *
                                                   895 *               Locations for ACTUAL results
                                                   896 *
                                                   897 *
                              00001000  00000000   898 SINTOUT  EQU   BFPCVTTF+X'1000'    Integer-64 values from short BFP
                                                   899 *                                  ..8 pairs used, room for 32
                              00001200  00000000   900 SINTFLGS EQU   BFPCVTTF+X'1200'    FPCR flags and DXC from short BFP
                                                   901 *                                  ..8 pairs used,room for 32
                              00001300  00000000   902 SINTRMO  EQU   BFPCVTTF+X'1300'    Short rounding mode test results
                                                   903 *                                  ..10 sets used, room for 16
                              00001800  00000000   904 SINTRMOF EQU   BFPCVTTF+X'1800'    Short rounding mode FPCR contents
                                                   905 *                                  ..10 sets used, room for 16
                                                   906 *
                              00002000  00000000   907 LINTOUT  EQU   BFPCVTTF+X'2000'    Integer-64 values from long BFP
                                                   908 *                                  ..8 pairs used, room for 32
                              00002200  00000000   909 LINTFLGS EQU   BFPCVTTF+X'2200'    FPCR flags and DXC from long BFP
                                                   910 *                                  ..8 pairs used,room for 32
                              00002300  00000000   911 LINTRMO  EQU   BFPCVTTF+X'2300'    Long rounding mode test results
                                                   912 *                                  ..10 sets used, room for 16
                              00002800  00000000   913 LINTRMOF EQU   BFPCVTTF+X'2800'    Long rounding mode FPCR contents
                                                   914 *                                  ..10 sets used, room for 16
                                                   915 *
                              00003000  00000000   916 XINTOUT  EQU   BFPCVTTF+X'3000'    Integer-64 values from extended BFP
                                                   917 *                                  ..8 pairs used, room for 32
                              00003200  00000000   918 XINTFLGS EQU   BFPCVTTF+X'3200'    FPCR flags and DXC from extended BFP
                                                   919 *                                  ..8 pairs used, room for 32
                              00003300  00000000   920 XINTRMO  EQU   BFPCVTTF+X'3300'    Extended rounding mode test results
                                                   921 *                                  ..10 sets used, room for 16
                              00003800  00000000   922 XINTRMOF EQU   BFPCVTTF+X'3800'    Extended rndg mode FPCR contents
                                                   923 *                                  ..10 sets used, room for 16
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    23

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                   925 ***********************************************************************
                                                   926 *                    EXPECTED results
                                                   927 ***********************************************************************
                                                   928 *
00000B40                      00000B40  00005000   929          ORG   BFPCVTTF+X'5000'   (past end of actual results)
                                                   930 *
                              00005000  00000001   931 SINTOUT_GOOD EQU *
00005000  C3C7C5C2 D9409985                        932  DC CL48'CGEBR result pair 1'
00005030  00000000 00000001                        933  DC XL16'00000000000000010000000000000001'
00005040  C3C7C5C2 D9409985                        934  DC CL48'CGEBR result pair 2'
00005070  00000000 00000002                        935  DC XL16'00000000000000020000000000000002'
00005080  C3C7C5C2 D9409985                        936  DC CL48'CGEBR result pair 3'
000050B0  00000000 00000004                        937  DC XL16'00000000000000040000000000000004'
000050C0  C3C7C5C2 D9409985                        938  DC CL48'CGEBR result pair 4'
000050F0  FFFFFFFF FFFFFFFE                        939  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFE'
00005100  C3C7C5C2 D9409985                        940  DC CL48'CGEBR result pair 5'
00005130  80000000 00000000                        941  DC XL16'80000000000000000000000000000000'
00005140  C3C7C5C2 D9409985                        942  DC CL48'CGEBR result pair 6'
00005170  80000000 00000000                        943  DC XL16'80000000000000000000000000000000'
00005180  C3C7C5C2 D9409985                        944  DC CL48'CGEBR result pair 7'
000051B0  7FFFFFFF FFFFFFFF                        945  DC XL16'7FFFFFFFFFFFFFFF0000000000000000'
000051C0  C3C7C5C2 D9409985                        946  DC CL48'CGEBR result pair 8'
000051F0  80000000 00000000                        947  DC XL16'80000000000000000000000000000000'
00005200  C3C7C5C2 D9409985                        948  DC CL48'CGEBR result pair 9'
00005230  7FFFFF80 00000000                        949  DC XL16'7FFFFF80000000007FFFFF8000000000'
                              00000009  00000001   950 SINTOUT_NUM EQU (*-SINTOUT_GOOD)/64
                                                   951 *
                                                   952 *
                              00005240  00000001   953 SINTFLGS_GOOD EQU *
00005240  C3C7C5C2 D940C6D7                        954  DC CL48'CGEBR FPCR pairs 1-2'
00005270  00000002 F8000002                        955  DC XL16'00000002F800000200000002F8000002'
00005280  C3C7C5C2 D940C6D7                        956  DC CL48'CGEBR FPCR pairs 3-4'
000052B0  00000002 F8000002                        957  DC XL16'00000002F800000200000001F8000001'
000052C0  C3C7C5C2 D940C6D7                        958  DC CL48'CGEBR FPCR pairs 5-6'
000052F0  00880003 F8008000                        959  DC XL16'00880003F800800000880003F8008000'
00005300  C3C7C5C2 D940C6D7                        960  DC CL48'CGEBR FPCR pairs 7-8'
00005330  00880003 F8008000                        961  DC XL16'00880003F800800000880003F8008000'
00005340  C3C7C5C2 D940C6D7                        962  DC CL48'CGEBR FPCR pair 9'
00005370  00000002 F8000002                        963  DC XL16'00000002F80000020000000000000000'
                              00000005  00000001   964 SINTFLGS_NUM EQU (*-SINTFLGS_GOOD)/64
                                                   965 *
                                                   966 *
                              00005380  00000001   967 SINTRMO_GOOD EQU *
00005380  C3C7C5C2 D9C14060                        968  DC CL48'CGEBRA -9.5 FPCR modes 1, 2'
000053B0  FFFFFFFF FFFFFFF7                        969  DC XL16'FFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF7'
000053C0  C3C7C5C2 D9C14060                        970  DC CL48'CGEBRA -9.5 FPCR modes 3, 7'
000053F0  FFFFFFFF FFFFFFF6                        971  DC XL16'FFFFFFFFFFFFFFF6FFFFFFFFFFFFFFF7'
00005400  C3C7C5C2 D9C14060                        972  DC CL48'CGEBRA -9.5 M3 modes 1, 3'
00005430  FFFFFFFF FFFFFFF6                        973  DC XL16'FFFFFFFFFFFFFFF6FFFFFFFFFFFFFFF7'
00005440  C3C7C5C2 D9C14060                        974  DC CL48'CGEBRA -9.5 M3 modes 4, 5'
00005470  FFFFFFFF FFFFFFF6                        975  DC XL16'FFFFFFFFFFFFFFF6FFFFFFFFFFFFFFF7'
00005480  C3C7C5C2 D9C14060                        976  DC CL48'CGEBRA -9.5 M3 modes 6, 7'
000054B0  FFFFFFFF FFFFFFF7                        977  DC XL16'FFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF6'
000054C0  C3C7C5C2 D9C14060                        978  DC CL48'CGEBRA -5.5 FPCR modes 1, 2'
000054F0  FFFFFFFF FFFFFFFB                        979  DC XL16'FFFFFFFFFFFFFFFBFFFFFFFFFFFFFFFB'
00005500  C3C7C5C2 D9C14060                        980  DC CL48'CGEBRA -5.5 FPCR modes 3, 7'
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    24

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00005530  FFFFFFFF FFFFFFFA                        981  DC XL16'FFFFFFFFFFFFFFFAFFFFFFFFFFFFFFFB'
00005540  C3C7C5C2 D9C14060                        982  DC CL48'CGEBRA -5.5 M3 modes 1, 3'
00005570  FFFFFFFF FFFFFFFA                        983  DC XL16'FFFFFFFFFFFFFFFAFFFFFFFFFFFFFFFB'
00005580  C3C7C5C2 D9C14060                        984  DC CL48'CGEBRA -5.5 M3 modes 4, 5'
000055B0  FFFFFFFF FFFFFFFA                        985  DC XL16'FFFFFFFFFFFFFFFAFFFFFFFFFFFFFFFB'
000055C0  C3C7C5C2 D9C14060                        986  DC CL48'CGEBRA -5.5 M3 modes 6, 7'
000055F0  FFFFFFFF FFFFFFFB                        987  DC XL16'FFFFFFFFFFFFFFFBFFFFFFFFFFFFFFFA'
00005600  C3C7C5C2 D9C14060                        988  DC CL48'CGEBRA -2.5 FPCR modes 1, 2'
00005630  FFFFFFFF FFFFFFFE                        989  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFE'
00005640  C3C7C5C2 D9C14060                        990  DC CL48'CGEBRA -2.5 FPCR modes 3, 7'
00005670  FFFFFFFF FFFFFFFD                        991  DC XL16'FFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFD'
00005680  C3C7C5C2 D9C14060                        992  DC CL48'CGEBRA -2.5 M3 modes 1, 3'
000056B0  FFFFFFFF FFFFFFFD                        993  DC XL16'FFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFD'
000056C0  C3C7C5C2 D9C14060                        994  DC CL48'CGEBRA -2.5 M3 modes 4, 5'
000056F0  FFFFFFFF FFFFFFFE                        995  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFE'
00005700  C3C7C5C2 D9C14060                        996  DC CL48'CGEBRA -2.5 M3 modes 6, 7'
00005730  FFFFFFFF FFFFFFFE                        997  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFD'
00005740  C3C7C5C2 D9C14060                        998  DC CL48'CGEBRA -1.5 FPCR modes 1, 2'
00005770  FFFFFFFF FFFFFFFF                        999  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
00005780  C3C7C5C2 D9C14060                       1000  DC CL48'CGEBRA -1.5 FPCR modes 3, 7'
000057B0  FFFFFFFF FFFFFFFE                       1001  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF'
000057C0  C3C7C5C2 D9C14060                       1002  DC CL48'CGEBRA -1.5 M3 modes 1, 3'
000057F0  FFFFFFFF FFFFFFFE                       1003  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF'
00005800  C3C7C5C2 D9C14060                       1004  DC CL48'CGEBRA -1.5 M3 modes 4, 5'
00005830  FFFFFFFF FFFFFFFE                       1005  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF'
00005840  C3C7C5C2 D9C14060                       1006  DC CL48'CGEBRA -1.5 M3 modes 6, 7'
00005870  FFFFFFFF FFFFFFFF                       1007  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE'
00005880  C3C7C5C2 D9C14060                       1008  DC CL48'CGEBRA -0.5 FPCR modes 1, 2'
000058B0  00000000 00000000                       1009  DC XL16'00000000000000000000000000000000'
000058C0  C3C7C5C2 D9C14060                       1010  DC CL48'CGEBRA -0.5 FPCR modes 3, 7'
000058F0  FFFFFFFF FFFFFFFF                       1011  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
00005900  C3C7C5C2 D9C14060                       1012  DC CL48'CGEBRA -0.5 M3 modes 1, 3'
00005930  FFFFFFFF FFFFFFFF                       1013  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
00005940  C3C7C5C2 D9C14060                       1014  DC CL48'CGEBRA -0.5 M3 modes 4, 5'
00005970  00000000 00000000                       1015  DC XL16'00000000000000000000000000000000'
00005980  C3C7C5C2 D9C14060                       1016  DC CL48'CGEBRA -0.5 M3 modes 6, 7'
000059B0  00000000 00000000                       1017  DC XL16'0000000000000000FFFFFFFFFFFFFFFF'
000059C0  C3C7C5C2 D9C140F0                       1018  DC CL48'CGEBRA 0.5 FPCR modes 1, 2'
000059F0  00000000 00000000                       1019  DC XL16'00000000000000000000000000000001'
00005A00  C3C7C5C2 D9C140F0                       1020  DC CL48'CGEBRA 0.5 FPCR modes 3, 7'
00005A30  00000000 00000000                       1021  DC XL16'00000000000000000000000000000001'
00005A40  C3C7C5C2 D9C140F0                       1022  DC CL48'CGEBRA 0.5 M3 modes 1, 3'
00005A70  00000000 00000001                       1023  DC XL16'00000000000000010000000000000001'
00005A80  C3C7C5C2 D9C140F0                       1024  DC CL48'CGEBRA 0.5 M3 modes 4, 5'
00005AB0  00000000 00000000                       1025  DC XL16'00000000000000000000000000000000'
00005AC0  C3C7C5C2 D9C140F0                       1026  DC CL48'CGEBRA 0.5 M3 modes 6, 7'
00005AF0  00000000 00000001                       1027  DC XL16'00000000000000010000000000000000'
00005B00  C3C7C5C2 D9C140F1                       1028  DC CL48'CGEBRA 1.5 FPCR modes 1, 2'
00005B30  00000000 00000001                       1029  DC XL16'00000000000000010000000000000002'
00005B40  C3C7C5C2 D9C140F1                       1030  DC CL48'CGEBRA 1.5 FPCR modes 3, 7'
00005B70  00000000 00000001                       1031  DC XL16'00000000000000010000000000000001'
00005B80  C3C7C5C2 D9C140F1                       1032  DC CL48'CGEBRA 1.5 M3 modes 1, 3'
00005BB0  00000000 00000002                       1033  DC XL16'00000000000000020000000000000001'
00005BC0  C3C7C5C2 D9C140F1                       1034  DC CL48'CGEBRA 1.5 M3 modes 4, 5'
00005BF0  00000000 00000002                       1035  DC XL16'00000000000000020000000000000001'
00005C00  C3C7C5C2 D9C140F1                       1036  DC CL48'CGEBRA 1.5 M3 modes 6, 7'
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    25

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00005C30  00000000 00000002                       1037  DC XL16'00000000000000020000000000000001'
00005C40  C3C7C5C2 D9C140F2                       1038  DC CL48'CGEBRA 2.5 FPCR modes 1, 2'
00005C70  00000000 00000002                       1039  DC XL16'00000000000000020000000000000003'
00005C80  C3C7C5C2 D9C140F2                       1040  DC CL48'CGEBRA 2.5 FPCR modes 3, 7'
00005CB0  00000000 00000002                       1041  DC XL16'00000000000000020000000000000003'
00005CC0  C3C7C5C2 D9C140F2                       1042  DC CL48'CGEBRA 2.5 M3 modes 1, 3'
00005CF0  00000000 00000003                       1043  DC XL16'00000000000000030000000000000003'
00005D00  C3C7C5C2 D9C140F2                       1044  DC CL48'CGEBRA 2.5 M3 modes 4, 5'
00005D30  00000000 00000002                       1045  DC XL16'00000000000000020000000000000002'
00005D40  C3C7C5C2 D9C140F2                       1046  DC CL48'CGEBRA 2.5 M3 modes 6, 7'
00005D70  00000000 00000003                       1047  DC XL16'00000000000000030000000000000002'
00005D80  C3C7C5C2 D9C140F5                       1048  DC CL48'CGEBRA 5.5 FPCR modes 1, 2'
00005DB0  00000000 00000005                       1049  DC XL16'00000000000000050000000000000006'
00005DC0  C3C7C5C2 D9C140F5                       1050  DC CL48'CGEBRA 5.5 FPCR modes 3, 7'
00005DF0  00000000 00000005                       1051  DC XL16'00000000000000050000000000000005'
00005E00  C3C7C5C2 D9C140F5                       1052  DC CL48'CGEBRA 5.5 M3 modes 1, 3'
00005E30  00000000 00000006                       1053  DC XL16'00000000000000060000000000000005'
00005E40  C3C7C5C2 D9C140F5                       1054  DC CL48'CGEBRA 5.5 M3 modes 4, 5'
00005E70  00000000 00000006                       1055  DC XL16'00000000000000060000000000000005'
00005E80  C3C7C5C2 D9C140F5                       1056  DC CL48'CGEBRA 5.5 M3 modes 6, 7'
00005EB0  00000000 00000006                       1057  DC XL16'00000000000000060000000000000005'
00005EC0  C3C7C5C2 D9C140F9                       1058  DC CL48'CGEBRA 9.5 FPCR modes 1, 2'
00005EF0  00000000 00000009                       1059  DC XL16'0000000000000009000000000000000A'
00005F00  C3C7C5C2 D9C140F9                       1060  DC CL48'CGEBRA 9.5 FPCR modes 3, 7'
00005F30  00000000 00000009                       1061  DC XL16'00000000000000090000000000000009'
00005F40  C3C7C5C2 D9C140F9                       1062  DC CL48'CGEBRA 9.5 M3 modes 1, 3'
00005F70  00000000 0000000A                       1063  DC XL16'000000000000000A0000000000000009'
00005F80  C3C7C5C2 D9C140F9                       1064  DC CL48'CGEBRA 9.5 M3 modes 4, 5'
00005FB0  00000000 0000000A                       1065  DC XL16'000000000000000A0000000000000009'
00005FC0  C3C7C5C2 D9C140F9                       1066  DC CL48'CGEBRA 9.5 M3 modes 6, 7'
00005FF0  00000000 0000000A                       1067  DC XL16'000000000000000A0000000000000009'
00006000  C3C7C5C2 D9C1404E                       1068  DC CL48'CGEBRA +0.75 FPCR modes 1, 2'
00006030  00000000 00000000                       1069  DC XL16'00000000000000000000000000000001'
00006040  C3C7C5C2 D9C1404E                       1070  DC CL48'CGEBRA +0.75 FPCR modes 3, 7'
00006070  00000000 00000000                       1071  DC XL16'00000000000000000000000000000001'
00006080  C3C7C5C2 D9C1404E                       1072  DC CL48'CGEBRA +0.75 M3 modes 1, 3'
000060B0  00000000 00000001                       1073  DC XL16'00000000000000010000000000000001'
000060C0  C3C7C5C2 D9C1404E                       1074  DC CL48'CGEBRA +0.75 M3 modes 4, 5'
000060F0  00000000 00000001                       1075  DC XL16'00000000000000010000000000000000'
00006100  C3C7C5C2 D9C1404E                       1076  DC CL48'CGEBRA +0.75 M3 modes 6, 7'
00006130  00000000 00000001                       1077  DC XL16'00000000000000010000000000000000'
00006140  C3C7C5C2 D9C1404E                       1078  DC CL48'CGEBRA +0.25 FPCR modes 1, 2'
00006170  00000000 00000000                       1079  DC XL16'00000000000000000000000000000001'
00006180  C3C7C5C2 D9C1404E                       1080  DC CL48'CGEBRA +0.25 FPCR modes 3, 7'
000061B0  00000000 00000000                       1081  DC XL16'00000000000000000000000000000001'
000061C0  C3C7C5C2 D9C1404E                       1082  DC CL48'CGEBRA +0.25 M3 modes 1, 3'
000061F0  00000000 00000000                       1083  DC XL16'00000000000000000000000000000001'
00006200  C3C7C5C2 D9C1404E                       1084  DC CL48'CGEBRA +0.25 M3 modes 4, 5'
00006230  00000000 00000000                       1085  DC XL16'00000000000000000000000000000000'
00006240  C3C7C5C2 D9C1404E                       1086  DC CL48'CGEBRA +0.25 M3 modes 6, 7'
00006270  00000000 00000001                       1087  DC XL16'00000000000000010000000000000000'
00006280  C3C7C5C2 D9C14060                       1088  DC CL48'CGEBRA -0.75 FPCR modes 1, 2'
000062B0  00000000 00000000                       1089  DC XL16'00000000000000000000000000000000'
000062C0  C3C7C5C2 D9C14060                       1090  DC CL48'CGEBRA -0.75 FPCR modes 3, 7'
000062F0  FFFFFFFF FFFFFFFF                       1091  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
00006300  C3C7C5C2 D9C14060                       1092  DC CL48'CGEBRA -0.75 M3 modes 1, 3'
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    26

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00006330  FFFFFFFF FFFFFFFF                       1093  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
00006340  C3C7C5C2 D9C14060                       1094  DC CL48'CGEBRA -0.75 M3 modes 4, 5'
00006370  FFFFFFFF FFFFFFFF                       1095  DC XL16'FFFFFFFFFFFFFFFF0000000000000000'
00006380  C3C7C5C2 D9C14060                       1096  DC CL48'CGEBRA -0.75 M3 modes 6, 7'
000063B0  00000000 00000000                       1097  DC XL16'0000000000000000FFFFFFFFFFFFFFFF'
000063C0  C3C7C5C2 D9C14060                       1098  DC CL48'CGEBRA -0.25 FPCR modes 1, 2'
000063F0  00000000 00000000                       1099  DC XL16'00000000000000000000000000000000'
00006400  C3C7C5C2 D9C14060                       1100  DC CL48'CGEBRA -0.25 FPCR modes 3, 7'
00006430  FFFFFFFF FFFFFFFF                       1101  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
00006440  C3C7C5C2 D9C14060                       1102  DC CL48'CGEBRA -0.25 M3 modes 1, 3'
00006470  00000000 00000000                       1103  DC XL16'0000000000000000FFFFFFFFFFFFFFFF'
00006480  C3C7C5C2 D9C14060                       1104  DC CL48'CGEBRA -0.25 M3 modes 4, 5'
000064B0  00000000 00000000                       1105  DC XL16'00000000000000000000000000000000'
000064C0  C3C7C5C2 D9C14060                       1106  DC CL48'CGEBRA -0.25 M3 modes 6, 7'
000064F0  00000000 00000000                       1107  DC XL16'0000000000000000FFFFFFFFFFFFFFFF'
                              00000046  00000001  1108 SINTRMO_NUM EQU (*-SINTRMO_GOOD)/64
                                                  1109 *
                                                  1110 *
                              00006500  00000001  1111 SINTRMOF_GOOD EQU *
00006500  C3C7C5C2 D9C14060                       1112  DC CL48'CGEBRA -9.5 FPCR modes 1-3, 7 FPCR'
00006530  00000001 00000001                       1113  DC XL16'00000001000000010000000100000001'
00006540  C3C7C5C2 D9C14060                       1114  DC CL48'CGEBRA -9.5 M3 modes 1, 3-5 FPCR'
00006570  00080001 00080001                       1115  DC XL16'00080001000800010008000100080001'
00006580  C3C7C5C2 D9C14060                       1116  DC CL48'CGEBRA -9.5 M3 modes 6-7 FPCR'
000065B0  00080001 00080001                       1117  DC XL16'00080001000800010000000000000000'
000065C0  C3C7C5C2 D9C14060                       1118  DC CL48'CGEBRA -5.5 FPCR modes 1-3, 7 FPCR'
000065F0  00000001 00000001                       1119  DC XL16'00000001000000010000000100000001'
00006600  C3C7C5C2 D9C14060                       1120  DC CL48'CGEBRA -5.5 M3 modes 1, 3-5 FPCR'
00006630  00080001 00080001                       1121  DC XL16'00080001000800010008000100080001'
00006640  C3C7C5C2 D9C14060                       1122  DC CL48'CGEBRA -5.5 M3 modes 6-7 FPCR'
00006670  00080001 00080001                       1123  DC XL16'00080001000800010000000000000000'
00006680  C3C7C5C2 D9C14060                       1124  DC CL48'CGEBRA -2.5 FPCR modes 1-3, 7 FPCR'
000066B0  00000001 00000001                       1125  DC XL16'00000001000000010000000100000001'
000066C0  C3C7C5C2 D9C14060                       1126  DC CL48'CGEBRA -2.5 M3 modes 1, 3-5 FPCR'
000066F0  00080001 00080001                       1127  DC XL16'00080001000800010008000100080001'
00006700  C3C7C5C2 D9C14060                       1128  DC CL48'CGEBRA -2.5 M3 modes 6-7 FPCR'
00006730  00080001 00080001                       1129  DC XL16'00080001000800010000000000000000'
00006740  C3C7C5C2 D9C14060                       1130  DC CL48'CGEBRA -1.5 FPCR modes 1-3, 7 FPCR'
00006770  00000001 00000001                       1131  DC XL16'00000001000000010000000100000001'
00006780  C3C7C5C2 D9C14060                       1132  DC CL48'CGEBRA -1.5 M3 modes 1, 3-5 FPCR'
000067B0  00080001 00080001                       1133  DC XL16'00080001000800010008000100080001'
000067C0  C3C7C5C2 D9C14060                       1134  DC CL48'CGEBRA -1.5 M3 modes 6-7 FPCR'
000067F0  00080001 00080001                       1135  DC XL16'00080001000800010000000000000000'
00006800  C3C7C5C2 D9C14060                       1136  DC CL48'CGEBRA -0.5 FPCR modes 1-3, 7 FPCR'
00006830  00000001 00000001                       1137  DC XL16'00000001000000010000000100000001'
00006840  C3C7C5C2 D9C14060                       1138  DC CL48'CGEBRA -0.5 M3 modes 1, 3-5 FPCR'
00006870  00080001 00080001                       1139  DC XL16'00080001000800010008000100080001'
00006880  C3C7C5C2 D9C14060                       1140  DC CL48'CGEBRA -0.5 M3 modes 6-7 FPCR'
000068B0  00080001 00080001                       1141  DC XL16'00080001000800010000000000000000'
000068C0  C3C7C5C2 D9C1404E                       1142  DC CL48'CGEBRA +0.5 FPCR modes 1-3, 7 FPCR'
000068F0  00000002 00000002                       1143  DC XL16'00000002000000020000000200000002'
00006900  C3C7C5C2 D9C1404E                       1144  DC CL48'CGEBRA +0.5 M3 modes 1, 3-5 FPCR'
00006930  00080002 00080002                       1145  DC XL16'00080002000800020008000200080002'
00006940  C3C7C5C2 D9C1404E                       1146  DC CL48'CGEBRA +0.5 M3 modes 6-7 FPCR'
00006970  00080002 00080002                       1147  DC XL16'00080002000800020000000000000000'
00006980  C3C7C5C2 D9C1404E                       1148  DC CL48'CGEBRA +1.5 FPCR modes 1-3, 7 FPCR'
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    27

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

000069B0  00000002 00000002                       1149  DC XL16'00000002000000020000000200000002'
000069C0  C3C7C5C2 D9C1404E                       1150  DC CL48'CGEBRA +1.5 M3 modes 1, 3-5 FPCR'
000069F0  00080002 00080002                       1151  DC XL16'00080002000800020008000200080002'
00006A00  C3C7C5C2 D9C1404E                       1152  DC CL48'CGEBRA +1.5 M3 modes 6-7 FPCR'
00006A30  00080002 00080002                       1153  DC XL16'00080002000800020000000000000000'
00006A40  C3C7C5C2 D9C1404E                       1154  DC CL48'CGEBRA +2.5 FPCR modes 1-3, 7 FPCR'
00006A70  00000002 00000002                       1155  DC XL16'00000002000000020000000200000002'
00006A80  C3C7C5C2 D9C1404E                       1156  DC CL48'CGEBRA +2.5 M3 modes 1, 3-5 FPCR'
00006AB0  00080002 00080002                       1157  DC XL16'00080002000800020008000200080002'
00006AC0  C3C7C5C2 D9C1404E                       1158  DC CL48'CGEBRA +2.5 M3 modes 6-7 FPCR'
00006AF0  00080002 00080002                       1159  DC XL16'00080002000800020000000000000000'
00006B00  C3C7C5C2 D9C1404E                       1160  DC CL48'CGEBRA +5.5 FPCR modes 1-3, 7 FPCR'
00006B30  00000002 00000002                       1161  DC XL16'00000002000000020000000200000002'
00006B40  C3C7C5C2 D9C1404E                       1162  DC CL48'CGEBRA +5.5 M3 modes 1, 3-5 FPCR'
00006B70  00080002 00080002                       1163  DC XL16'00080002000800020008000200080002'
00006B80  C3C7C5C2 D9C1404E                       1164  DC CL48'CGEBRA +5.5 M3 modes 6-7 FPCR'
00006BB0  00080002 00080002                       1165  DC XL16'00080002000800020000000000000000'
00006BC0  C3C7C5C2 D9C1404E                       1166  DC CL48'CGEBRA +9.5 FPCR modes 1-3, 7 FPCR'
00006BF0  00000002 00000002                       1167  DC XL16'00000002000000020000000200000002'
00006C00  C3C7C5C2 D9C1404E                       1168  DC CL48'CGEBRA +9.5 M3 modes 1, 3-5 FPCR'
00006C30  00080002 00080002                       1169  DC XL16'00080002000800020008000200080002'
00006C40  C3C7C5C2 D9C1404E                       1170  DC CL48'CGEBRA +9.5 M3 modes 6-7 FPCR'
00006C70  00080002 00080002                       1171  DC XL16'00080002000800020000000000000000'
00006C80  C3C7C5C2 D9C1404E                       1172  DC CL48'CGEBRA +0.75 FPCR modes 1-3, 7 FPCR'
00006CB0  00000002 00000002                       1173  DC XL16'00000002000000020000000200000002'
00006CC0  C3C7C5C2 D9C1404E                       1174  DC CL48'CGEBRA +0.75 M3 modes 1, 3-5 FPCR'
00006CF0  00080002 00080002                       1175  DC XL16'00080002000800020008000200080002'
00006D00  C3C7C5C2 D9C1404E                       1176  DC CL48'CGEBRA +0.75 M3 modes 6-7 FPCR'
00006D30  00080002 00080002                       1177  DC XL16'00080002000800020000000000000000'
00006D40  C3C7C5C2 D9C1404E                       1178  DC CL48'CGEBRA +0.25 FPCR modes 1-3, 7 FPCR'
00006D70  00000002 00000002                       1179  DC XL16'00000002000000020000000200000002'
00006D80  C3C7C5C2 D9C1404E                       1180  DC CL48'CGEBRA +0.25 M3 modes 1, 3-5 FPCR'
00006DB0  00080002 00080002                       1181  DC XL16'00080002000800020008000200080002'
00006DC0  C3C7C5C2 D9C1404E                       1182  DC CL48'CGEBRA +0.25 M3 modes 6-7 FPCR'
00006DF0  00080002 00080002                       1183  DC XL16'00080002000800020000000000000000'
00006E00  C3C7C5C2 D9C14060                       1184  DC CL48'CGEBRA -0.75 FPCR modes 1-3, 7 FPCR'
00006E30  00000001 00000001                       1185  DC XL16'00000001000000010000000100000001'
00006E40  C3C7C5C2 D9C14060                       1186  DC CL48'CGEBRA -0.75 M3 modes 1, 3-5 FPCR'
00006E70  00080001 00080001                       1187  DC XL16'00080001000800010008000100080001'
00006E80  C3C7C5C2 D9C14060                       1188  DC CL48'CGEBRA -0.75 M3 modes 6-7 FPCR'
00006EB0  00080001 00080001                       1189  DC XL16'00080001000800010000000000000000'
00006EC0  C3C7C5C2 D9C14060                       1190  DC CL48'CGEBRA -0.25 FPCR modes 1-3, 7 FPCR'
00006EF0  00000001 00000001                       1191  DC XL16'00000001000000010000000100000001'
00006F00  C3C7C5C2 D9C14060                       1192  DC CL48'CGEBRA -0.25 M3 modes 1, 3-5 FPCR'
00006F30  00080001 00080001                       1193  DC XL16'00080001000800010008000100080001'
00006F40  C3C7C5C2 D9C14060                       1194  DC CL48'CGEBRA -0.25 M3 modes 6-7 FPCR'
00006F70  00080001 00080001                       1195  DC XL16'00080001000800010000000000000000'
                              0000002A  00000001  1196 SINTRMOF_NUM EQU (*-SINTRMOF_GOOD)/64
                                                  1197 *
                                                  1198 *
                              00006F80  00000001  1199 LINTOUT_GOOD EQU *
00006F80  C3C7C4C2 D9409985                       1200  DC CL48'CGDBR result pair 1'
00006FB0  00000000 00000001                       1201  DC XL16'00000000000000010000000000000001'
00006FC0  C3C7C4C2 D9409985                       1202  DC CL48'CGDBR result pair 2'
00006FF0  00000000 00000002                       1203  DC XL16'00000000000000020000000000000002'
00007000  C3C7C4C2 D9409985                       1204  DC CL48'CGDBR result pair 3'
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    28

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00007030  00000000 00000004                       1205  DC XL16'00000000000000040000000000000004'
00007040  C3C7C4C2 D9409985                       1206  DC CL48'CGDBR result pair 4'
00007070  FFFFFFFF FFFFFFFE                       1207  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFE'
00007080  C3C7C4C2 D9409985                       1208  DC CL48'CGDBR result pair 5'
000070B0  80000000 00000000                       1209  DC XL16'80000000000000000000000000000000'
000070C0  C3C7C4C2 D9409985                       1210  DC CL48'CGDBR result pair 6'
000070F0  80000000 00000000                       1211  DC XL16'80000000000000000000000000000000'
00007100  C3C7C4C2 D9409985                       1212  DC CL48'CGDBR result pair 7'
00007130  7FFFFFFF FFFFFFFF                       1213  DC XL16'7FFFFFFFFFFFFFFF0000000000000000'
00007140  C3C7C4C2 D9409985                       1214  DC CL48'CGDBR result pair 8'
00007170  80000000 00000000                       1215  DC XL16'80000000000000000000000000000000'
00007180  C3C7C4C2 D9409985                       1216  DC CL48'CGDBR result pair 8'
000071B0  7FFFFFFF FFFFFC00                       1217  DC XL16'7FFFFFFFFFFFFC007FFFFFFFFFFFFC00'
                              00000009  00000001  1218 LINTOUT_NUM EQU (*-LINTOUT_GOOD)/64
                                                  1219 *
                                                  1220 *
                              000071C0  00000001  1221 LINTFLGS_GOOD EQU *
000071C0  C3C7C4C2 D940C6D7                       1222  DC CL48'CGDBR FPCR pairs 1-2'
000071F0  00000002 F8000002                       1223  DC XL16'00000002F800000200000002F8000002'
00007200  C3C7C4C2 D940C6D7                       1224  DC CL48'CGDBR FPCR pairs 3-4'
00007230  00000002 F8000002                       1225  DC XL16'00000002F800000200000001F8000001'
00007240  C3C7C4C2 D940C6D7                       1226  DC CL48'CGDBR FPCR pairs 5-6'
00007270  00880003 F8008000                       1227  DC XL16'00880003F800800000880003F8008000'
00007280  C3C7C4C2 D940C6D7                       1228  DC CL48'CGDBR FPCR pairs 7-8'
000072B0  00880003 F8008000                       1229  DC XL16'00880003F800800000880003F8008000'
000072C0  C3C7C4C2 D940C6D7                       1230  DC CL48'CGDBR FPCR pair 9'
000072F0  00000002 F8000002                       1231  DC XL16'00000002F80000020000000000000000'
                              00000005  00000001  1232 LINTFLGS_NUM EQU (*-LINTFLGS_GOOD)/64
                                                  1233 *
                                                  1234 *
                              00007300  00000001  1235 LINTRMO_GOOD EQU *
00007300  C3C7C4C2 D9C14060                       1236  DC CL48'CGDBRA -9.5 FPCR modes 1, 2'
00007330  FFFFFFFF FFFFFFF7                       1237  DC XL16'FFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF7'
00007340  C3C7C4C2 D9C14060                       1238  DC CL48'CGDBRA -9.5 FPCR modes 3, 7'
00007370  FFFFFFFF FFFFFFF6                       1239  DC XL16'FFFFFFFFFFFFFFF6FFFFFFFFFFFFFFF7'
00007380  C3C7C4C2 D9C14060                       1240  DC CL48'CGDBRA -9.5 M3 modes 1, 3'
000073B0  FFFFFFFF FFFFFFF6                       1241  DC XL16'FFFFFFFFFFFFFFF6FFFFFFFFFFFFFFF7'
000073C0  C3C7C4C2 D9C14060                       1242  DC CL48'CGDBRA -9.5 M3 modes 4, 5'
000073F0  FFFFFFFF FFFFFFF6                       1243  DC XL16'FFFFFFFFFFFFFFF6FFFFFFFFFFFFFFF7'
00007400  C3C7C4C2 D9C14060                       1244  DC CL48'CGDBRA -9.5 M3 modes 6, 7'
00007430  FFFFFFFF FFFFFFF7                       1245  DC XL16'FFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF6'
00007440  C3C7C4C2 D9C14060                       1246  DC CL48'CGDBRA -5.5 FPCR modes 1, 2'
00007470  FFFFFFFF FFFFFFFB                       1247  DC XL16'FFFFFFFFFFFFFFFBFFFFFFFFFFFFFFFB'
00007480  C3C7C4C2 D9C14060                       1248  DC CL48'CGDBRA -5.5 FPCR modes 3, 7'
000074B0  FFFFFFFF FFFFFFFA                       1249  DC XL16'FFFFFFFFFFFFFFFAFFFFFFFFFFFFFFFB'
000074C0  C3C7C4C2 D9C14060                       1250  DC CL48'CGDBRA -5.5 M3 modes 1, 3'
000074F0  FFFFFFFF FFFFFFFA                       1251  DC XL16'FFFFFFFFFFFFFFFAFFFFFFFFFFFFFFFB'
00007500  C3C7C4C2 D9C14060                       1252  DC CL48'CGDBRA -5.5 M3 modes 4, 5'
00007530  FFFFFFFF FFFFFFFA                       1253  DC XL16'FFFFFFFFFFFFFFFAFFFFFFFFFFFFFFFB'
00007540  C3C7C4C2 D9C14060                       1254  DC CL48'CGDBRA -5.5 M3 modes 6, 7'
00007570  FFFFFFFF FFFFFFFB                       1255  DC XL16'FFFFFFFFFFFFFFFBFFFFFFFFFFFFFFFA'
00007580  C3C7C4C2 D9C14060                       1256  DC CL48'CGDBRA -2.5 FPCR modes 1, 2'
000075B0  FFFFFFFF FFFFFFFE                       1257  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFE'
000075C0  C3C7C4C2 D9C14060                       1258  DC CL48'CGDBRA -2.5 FPCR modes 3, 7'
000075F0  FFFFFFFF FFFFFFFD                       1259  DC XL16'FFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFD'
00007600  C3C7C4C2 D9C14060                       1260  DC CL48'CGDBRA -2.5 M3 modes 1, 3'
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    29

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00007630  FFFFFFFF FFFFFFFD                       1261  DC XL16'FFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFD'
00007640  C3C7C4C2 D9C14060                       1262  DC CL48'CGDBRA -2.5 M3 modes 4, 5'
00007670  FFFFFFFF FFFFFFFE                       1263  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFE'
00007680  C3C7C4C2 D9C14060                       1264  DC CL48'CGDBRA -2.5 M3 modes 6, 7'
000076B0  FFFFFFFF FFFFFFFE                       1265  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFD'
000076C0  C3C7C4C2 D9C14060                       1266  DC CL48'CGDBRA -1.5 FPCR modes 1, 2'
000076F0  FFFFFFFF FFFFFFFF                       1267  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
00007700  C3C7C4C2 D9C14060                       1268  DC CL48'CGDBRA -1.5 FPCR modes 3, 7'
00007730  FFFFFFFF FFFFFFFE                       1269  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF'
00007740  C3C7C4C2 D9C14060                       1270  DC CL48'CGDBRA -1.5 M3 modes 1, 3'
00007770  FFFFFFFF FFFFFFFE                       1271  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF'
00007780  C3C7C4C2 D9C14060                       1272  DC CL48'CGDBRA -1.5 M3 modes 4, 5'
000077B0  FFFFFFFF FFFFFFFE                       1273  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF'
000077C0  C3C7C4C2 D9C14060                       1274  DC CL48'CGDBRA -1.5 M3 modes 6, 7'
000077F0  FFFFFFFF FFFFFFFF                       1275  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE'
00007800  C3C7C4C2 D9C14060                       1276  DC CL48'CGDBRA -0.5 FPCR modes 1, 2'
00007830  00000000 00000000                       1277  DC XL16'00000000000000000000000000000000'
00007840  C3C7C4C2 D9C14060                       1278  DC CL48'CGDBRA -0.5 FPCR modes 3, 7'
00007870  FFFFFFFF FFFFFFFF                       1279  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
00007880  C3C7C4C2 D9C14060                       1280  DC CL48'CGDBRA -0.5 M3 modes 1, 3'
000078B0  FFFFFFFF FFFFFFFF                       1281  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
000078C0  C3C7C4C2 D9C14060                       1282  DC CL48'CGDBRA -0.5 M3 modes 4, 5'
000078F0  00000000 00000000                       1283  DC XL16'00000000000000000000000000000000'
00007900  C3C7C4C2 D9C14060                       1284  DC CL48'CGDBRA -0.5 M3 modes 6, 7'
00007930  00000000 00000000                       1285  DC XL16'0000000000000000FFFFFFFFFFFFFFFF'
00007940  C3C7C4C2 D9C140F0                       1286  DC CL48'CGDBRA 0.5 FPCR modes 1, 2'
00007970  00000000 00000000                       1287  DC XL16'00000000000000000000000000000001'
00007980  C3C7C4C2 D9C140F0                       1288  DC CL48'CGDBRA 0.5 FPCR modes 3, 7'
000079B0  00000000 00000000                       1289  DC XL16'00000000000000000000000000000001'
000079C0  C3C7C4C2 D9C140F0                       1290  DC CL48'CGDBRA 0.5 M3 modes 1, 3'
000079F0  00000000 00000001                       1291  DC XL16'00000000000000010000000000000001'
00007A00  C3C7C4C2 D9C140F0                       1292  DC CL48'CGDBRA 0.5 M3 modes 4, 5'
00007A30  00000000 00000000                       1293  DC XL16'00000000000000000000000000000000'
00007A40  C3C7C4C2 D9C140F0                       1294  DC CL48'CGDBRA 0.5 M3 modes 6, 7'
00007A70  00000000 00000001                       1295  DC XL16'00000000000000010000000000000000'
00007A80  C3C7C4C2 D9C140F1                       1296  DC CL48'CGDBRA 1.5 FPCR modes 1, 2'
00007AB0  00000000 00000001                       1297  DC XL16'00000000000000010000000000000002'
00007AC0  C3C7C4C2 D9C140F1                       1298  DC CL48'CGDBRA 1.5 FPCR modes 3, 7'
00007AF0  00000000 00000001                       1299  DC XL16'00000000000000010000000000000001'
00007B00  C3C7C4C2 D9C140F1                       1300  DC CL48'CGDBRA 1.5 M3 modes 1, 3'
00007B30  00000000 00000002                       1301  DC XL16'00000000000000020000000000000001'
00007B40  C3C7C4C2 D9C140F1                       1302  DC CL48'CGDBRA 1.5 M3 modes 4, 5'
00007B70  00000000 00000002                       1303  DC XL16'00000000000000020000000000000001'
00007B80  C3C7C4C2 D9C140F1                       1304  DC CL48'CGDBRA 1.5 M3 modes 6, 7'
00007BB0  00000000 00000002                       1305  DC XL16'00000000000000020000000000000001'
00007BC0  C3C7C4C2 D9C140F2                       1306  DC CL48'CGDBRA 2.5 FPCR modes 1, 2'
00007BF0  00000000 00000002                       1307  DC XL16'00000000000000020000000000000003'
00007C00  C3C7C4C2 D9C140F2                       1308  DC CL48'CGDBRA 2.5 FPCR modes 3, 7'
00007C30  00000000 00000002                       1309  DC XL16'00000000000000020000000000000003'
00007C40  C3C7C4C2 D9C140F2                       1310  DC CL48'CGDBRA 2.5 M3 modes 1, 3'
00007C70  00000000 00000003                       1311  DC XL16'00000000000000030000000000000003'
00007C80  C3C7C4C2 D9C140F2                       1312  DC CL48'CGDBRA 2.5 M3 modes 4, 5'
00007CB0  00000000 00000002                       1313  DC XL16'00000000000000020000000000000002'
00007CC0  C3C7C4C2 D9C140F2                       1314  DC CL48'CGDBRA 2.5 M3 modes 6, 7'
00007CF0  00000000 00000003                       1315  DC XL16'00000000000000030000000000000002'
00007D00  C3C7C4C2 D9C140F5                       1316  DC CL48'CGDBRA 5.5 FPCR modes 1, 2'
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    30

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00007D30  00000000 00000005                       1317  DC XL16'00000000000000050000000000000006'
00007D40  C3C7C4C2 D9C140F5                       1318  DC CL48'CGDBRA 5.5 FPCR modes 3, 7'
00007D70  00000000 00000005                       1319  DC XL16'00000000000000050000000000000005'
00007D80  C3C7C4C2 D9C140F5                       1320  DC CL48'CGDBRA 5.5 M3 modes 1, 3'
00007DB0  00000000 00000006                       1321  DC XL16'00000000000000060000000000000005'
00007DC0  C3C7C4C2 D9C140F5                       1322  DC CL48'CGDBRA 5.5 M3 modes 4, 5'
00007DF0  00000000 00000006                       1323  DC XL16'00000000000000060000000000000005'
00007E00  C3C7C4C2 D9C140F5                       1324  DC CL48'CGDBRA 5.5 M3 modes 6, 7'
00007E30  00000000 00000006                       1325  DC XL16'00000000000000060000000000000005'
00007E40  C3C7C4C2 D9C140F9                       1326  DC CL48'CGDBRA 9.5 FPCR modes 1, 2'
00007E70  00000000 00000009                       1327  DC XL16'0000000000000009000000000000000A'
00007E80  C3C7C4C2 D9C140F9                       1328  DC CL48'CGDBRA 9.5 FPCR modes 3, 7'
00007EB0  00000000 00000009                       1329  DC XL16'00000000000000090000000000000009'
00007EC0  C3C7C4C2 D9C140F9                       1330  DC CL48'CGDBRA 9.5 M3 modes 1, 3'
00007EF0  00000000 0000000A                       1331  DC XL16'000000000000000A0000000000000009'
00007F00  C3C7C4C2 D9C140F9                       1332  DC CL48'CGDBRA 9.5 M3 modes 4, 5'
00007F30  00000000 0000000A                       1333  DC XL16'000000000000000A0000000000000009'
00007F40  C3C7C4C2 D9C140F9                       1334  DC CL48'CGDBRA 9.5 M3 modes 6, 7'
00007F70  00000000 0000000A                       1335  DC XL16'000000000000000A0000000000000009'
00007F80  C3C7C4C2 D9C1404E                       1336  DC CL48'CGDBRA +0.75 FPCR modes 1, 2'
00007FB0  00000000 00000000                       1337  DC XL16'00000000000000000000000000000001'
00007FC0  C3C7C4C2 D9C1404E                       1338  DC CL48'CGDBRA +0.75 FPCR modes 3, 7'
00007FF0  00000000 00000000                       1339  DC XL16'00000000000000000000000000000001'
00008000  C3C7C4C2 D9C1404E                       1340  DC CL48'CGDBRA +0.75 M3 modes 1, 3'
00008030  00000000 00000001                       1341  DC XL16'00000000000000010000000000000001'
00008040  C3C7C4C2 D9C1404E                       1342  DC CL48'CGDBRA +0.75 M3 modes 4, 5'
00008070  00000000 00000001                       1343  DC XL16'00000000000000010000000000000000'
00008080  C3C7C4C2 D9C1404E                       1344  DC CL48'CGDBRA +0.75 M3 modes 6, 7'
000080B0  00000000 00000001                       1345  DC XL16'00000000000000010000000000000000'
000080C0  C3C7C4C2 D9C1404E                       1346  DC CL48'CGDBRA +0.25 FPCR modes 1, 2'
000080F0  00000000 00000000                       1347  DC XL16'00000000000000000000000000000001'
00008100  C3C7C4C2 D9C1404E                       1348  DC CL48'CGDBRA +0.25 FPCR modes 3, 7'
00008130  00000000 00000000                       1349  DC XL16'00000000000000000000000000000001'
00008140  C3C7C4C2 D9C1404E                       1350  DC CL48'CGDBRA +0.25 M3 modes 1, 3'
00008170  00000000 00000000                       1351  DC XL16'00000000000000000000000000000001'
00008180  C3C7C4C2 D9C1404E                       1352  DC CL48'CGDBRA +0.25 M3 modes 4, 5'
000081B0  00000000 00000000                       1353  DC XL16'00000000000000000000000000000000'
000081C0  C3C7C4C2 D9C1404E                       1354  DC CL48'CGDBRA +0.25 M3 modes 6, 7'
000081F0  00000000 00000001                       1355  DC XL16'00000000000000010000000000000000'
00008200  C3C7C4C2 D9C14060                       1356  DC CL48'CGDBRA -0.75 FPCR modes 1, 2'
00008230  00000000 00000000                       1357  DC XL16'00000000000000000000000000000000'
00008240  C3C7C4C2 D9C14060                       1358  DC CL48'CGDBRA -0.75 FPCR modes 3, 7'
00008270  FFFFFFFF FFFFFFFF                       1359  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
00008280  C3C7C4C2 D9C14060                       1360  DC CL48'CGDBRA -0.75 M3 modes 1, 3'
000082B0  FFFFFFFF FFFFFFFF                       1361  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
000082C0  C3C7C4C2 D9C14060                       1362  DC CL48'CGDBRA -0.75 M3 modes 4, 5'
000082F0  FFFFFFFF FFFFFFFF                       1363  DC XL16'FFFFFFFFFFFFFFFF0000000000000000'
00008300  C3C7C4C2 D9C14060                       1364  DC CL48'CGDBRA -0.75 M3 modes 6, 7'
00008330  00000000 00000000                       1365  DC XL16'0000000000000000FFFFFFFFFFFFFFFF'
00008340  C3C7C4C2 D9C14060                       1366  DC CL48'CGDBRA -0.25 FPCR modes 1, 2'
00008370  00000000 00000000                       1367  DC XL16'00000000000000000000000000000000'
00008380  C3C7C4C2 D9C14060                       1368  DC CL48'CGDBRA -0.25 FPCR modes 3, 7'
000083B0  FFFFFFFF FFFFFFFF                       1369  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
000083C0  C3C7C4C2 D9C14060                       1370  DC CL48'CGDBRA -0.25 M3 modes 1, 3'
000083F0  00000000 00000000                       1371  DC XL16'0000000000000000FFFFFFFFFFFFFFFF'
00008400  C3C7C4C2 D9C14060                       1372  DC CL48'CGDBRA -0.25 M3 modes 4, 5'
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    31

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00008430  00000000 00000000                       1373  DC XL16'00000000000000000000000000000000'
00008440  C3C7C4C2 D9C14060                       1374  DC CL48'CGDBRA -0.25 M3 modes 6, 7'
00008470  00000000 00000000                       1375  DC XL16'0000000000000000FFFFFFFFFFFFFFFF'
                              00000046  00000001  1376 LINTRMO_NUM EQU (*-LINTRMO_GOOD)/64
                                                  1377 *
                                                  1378 *
                              00008480  00000001  1379 LINTRMOF_GOOD EQU *
00008480  C3C7C4C2 D9C14060                       1380  DC CL48'CGDBRA -9.5 FPCR modes 1-3, 7 FPCR'
000084B0  00000001 00000001                       1381  DC XL16'00000001000000010000000100000001'
000084C0  C3C7C4C2 D9C14060                       1382  DC CL48'CGDBRA -9.5 M3 modes 1, 3-5 FPCR'
000084F0  00080001 00080001                       1383  DC XL16'00080001000800010008000100080001'
00008500  C3C7C4C2 D9C14060                       1384  DC CL48'CGDBRA -9.5 M3 modes 6-7 FPCR'
00008530  00080001 00080001                       1385  DC XL16'00080001000800010000000000000000'
00008540  C3C7C4C2 D9C14060                       1386  DC CL48'CGDBRA -5.5 FPCR modes 1-3, 7 FPCR'
00008570  00000001 00000001                       1387  DC XL16'00000001000000010000000100000001'
00008580  C3C7C4C2 D9C14060                       1388  DC CL48'CGDBRA -5.5 M3 modes 1, 3-5 FPCR'
000085B0  00080001 00080001                       1389  DC XL16'00080001000800010008000100080001'
000085C0  C3C7C4C2 D9C14060                       1390  DC CL48'CGDBRA -5.5 M3 modes 6-7 FPCR'
000085F0  00080001 00080001                       1391  DC XL16'00080001000800010000000000000000'
00008600  C3C7C4C2 D9C14060                       1392  DC CL48'CGDBRA -2.5 FPCR modes 1-3, 7 FPCR'
00008630  00000001 00000001                       1393  DC XL16'00000001000000010000000100000001'
00008640  C3C7C4C2 D9C14060                       1394  DC CL48'CGDBRA -2.5 M3 modes 1, 3-5 FPCR'
00008670  00080001 00080001                       1395  DC XL16'00080001000800010008000100080001'
00008680  C3C7C4C2 D9C14060                       1396  DC CL48'CGDBRA -2.5 M3 modes 6-7 FPCR'
000086B0  00080001 00080001                       1397  DC XL16'00080001000800010000000000000000'
000086C0  C3C7C4C2 D9C14060                       1398  DC CL48'CGDBRA -1.5 FPCR modes 1-3, 7 FPCR'
000086F0  00000001 00000001                       1399  DC XL16'00000001000000010000000100000001'
00008700  C3C7C4C2 D9C14060                       1400  DC CL48'CGDBRA -1.5 M3 modes 1, 3-5 FPCR'
00008730  00080001 00080001                       1401  DC XL16'00080001000800010008000100080001'
00008740  C3C7C4C2 D9C14060                       1402  DC CL48'CGDBRA -1.5 M3 modes 6-7 FPCR'
00008770  00080001 00080001                       1403  DC XL16'00080001000800010000000000000000'
00008780  C3C7C4C2 D9C14060                       1404  DC CL48'CGDBRA -0.5 FPCR modes 1-3, 7 FPCR'
000087B0  00000001 00000001                       1405  DC XL16'00000001000000010000000100000001'
000087C0  C3C7C4C2 D9C14060                       1406  DC CL48'CGDBRA -0.5 M3 modes 1, 3-5 FPCR'
000087F0  00080001 00080001                       1407  DC XL16'00080001000800010008000100080001'
00008800  C3C7C4C2 D9C14060                       1408  DC CL48'CGDBRA -0.5 M3 modes 6-7 FPCR'
00008830  00080001 00080001                       1409  DC XL16'00080001000800010000000000000000'
00008840  C3C7C4C2 D9C1404E                       1410  DC CL48'CGDBRA +0.5 FPCR modes 1-3, 7 FPCR'
00008870  00000002 00000002                       1411  DC XL16'00000002000000020000000200000002'
00008880  C3C7C4C2 D9C1404E                       1412  DC CL48'CGDBRA +0.5 M3 modes 1, 3-5 FPCR'
000088B0  00080002 00080002                       1413  DC XL16'00080002000800020008000200080002'
000088C0  C3C7C4C2 D9C1404E                       1414  DC CL48'CGDBRA +0.5 M3 modes 6-7 FPCR'
000088F0  00080002 00080002                       1415  DC XL16'00080002000800020000000000000000'
00008900  C3C7C4C2 D9C1404E                       1416  DC CL48'CGDBRA +1.5 FPCR modes 1-3, 7 FPCR'
00008930  00000002 00000002                       1417  DC XL16'00000002000000020000000200000002'
00008940  C3C7C4C2 D9C1404E                       1418  DC CL48'CGDBRA +1.5 M3 modes 1, 3-5 FPCR'
00008970  00080002 00080002                       1419  DC XL16'00080002000800020008000200080002'
00008980  C3C7C4C2 D9C1404E                       1420  DC CL48'CGDBRA +1.5 M3 modes 6-7 FPCR'
000089B0  00080002 00080002                       1421  DC XL16'00080002000800020000000000000000'
000089C0  C3C7C4C2 D9C1404E                       1422  DC CL48'CGDBRA +2.5 FPCR modes 1-3, 7 FPCR'
000089F0  00000002 00000002                       1423  DC XL16'00000002000000020000000200000002'
00008A00  C3C7C4C2 D9C1404E                       1424  DC CL48'CGDBRA +2.5 M3 modes 1, 3-5 FPCR'
00008A30  00080002 00080002                       1425  DC XL16'00080002000800020008000200080002'
00008A40  C3C7C4C2 D9C1404E                       1426  DC CL48'CGDBRA +2.5 M3 modes 6-7 FPCR'
00008A70  00080002 00080002                       1427  DC XL16'00080002000800020000000000000000'
00008A80  C3C7C4C2 D9C1404E                       1428  DC CL48'CGDBRA +5.5 FPCR modes 1-3, 7 FPCR'
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    32

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00008AB0  00000002 00000002                       1429  DC XL16'00000002000000020000000200000002'
00008AC0  C3C7C4C2 D9C1404E                       1430  DC CL48'CGDBRA +5.5 M3 modes 1, 3-5 FPCR'
00008AF0  00080002 00080002                       1431  DC XL16'00080002000800020008000200080002'
00008B00  C3C7C4C2 D9C1404E                       1432  DC CL48'CGDBRA +5.5 M3 modes 6-7 FPCR'
00008B30  00080002 00080002                       1433  DC XL16'00080002000800020000000000000000'
00008B40  C3C7C4C2 D9C1404E                       1434  DC CL48'CGDBRA +9.5 FPCR modes 1-3, 7 FPCR'
00008B70  00000002 00000002                       1435  DC XL16'00000002000000020000000200000002'
00008B80  C3C7C4C2 D9C1404E                       1436  DC CL48'CGDBRA +9.5 M3 modes 1, 3-5 FPCR'
00008BB0  00080002 00080002                       1437  DC XL16'00080002000800020008000200080002'
00008BC0  C3C7C4C2 D9C1404E                       1438  DC CL48'CGDBRA +9.5 M3 modes 6-7 FPCR'
00008BF0  00080002 00080002                       1439  DC XL16'00080002000800020000000000000000'
00008C00  C3C7C4C2 D9C1404E                       1440  DC CL48'CGDBRA +0.75 FPCR modes 1-3, 7 FPCR'
00008C30  00000002 00000002                       1441  DC XL16'00000002000000020000000200000002'
00008C40  C3C7C4C2 D9C1404E                       1442  DC CL48'CGDBRA +0.75 M3 modes 1, 3-5 FPCR'
00008C70  00080002 00080002                       1443  DC XL16'00080002000800020008000200080002'
00008C80  C3C7C4C2 D9C1404E                       1444  DC CL48'CGDBRA +0.75 M3 modes 6-7 FPCR'
00008CB0  00080002 00080002                       1445  DC XL16'00080002000800020000000000000000'
00008CC0  C3C7C4C2 D9C1404E                       1446  DC CL48'CGDBRA +0.25 FPCR modes 1-3, 7 FPCR'
00008CF0  00000002 00000002                       1447  DC XL16'00000002000000020000000200000002'
00008D00  C3C7C4C2 D9C1404E                       1448  DC CL48'CGDBRA +0.25 M3 modes 1, 3-5 FPCR'
00008D30  00080002 00080002                       1449  DC XL16'00080002000800020008000200080002'
00008D40  C3C7C4C2 D9C1404E                       1450  DC CL48'CGDBRA +0.25 M3 modes 6-7 FPCR'
00008D70  00080002 00080002                       1451  DC XL16'00080002000800020000000000000000'
00008D80  C3C7C4C2 D9C14060                       1452  DC CL48'CGDBRA -0.75 FPCR modes 1-3, 7 FPCR'
00008DB0  00000001 00000001                       1453  DC XL16'00000001000000010000000100000001'
00008DC0  C3C7C4C2 D9C14060                       1454  DC CL48'CGDBRA -0.75 M3 modes 1, 3-5 FPCR'
00008DF0  00080001 00080001                       1455  DC XL16'00080001000800010008000100080001'
00008E00  C3C7C4C2 D9C14060                       1456  DC CL48'CGDBRA -0.75 M3 modes 6-7 FPCR'
00008E30  00080001 00080001                       1457  DC XL16'00080001000800010000000000000000'
00008E40  C3C7C4C2 D9C14060                       1458  DC CL48'CGDBRA -0.25 FPCR modes 1-3, 7 FPCR'
00008E70  00000001 00000001                       1459  DC XL16'00000001000000010000000100000001'
00008E80  C3C7C4C2 D9C14060                       1460  DC CL48'CGDBRA -0.25 M3 modes 1, 3-5 FPCR'
00008EB0  00080001 00080001                       1461  DC XL16'00080001000800010008000100080001'
00008EC0  C3C7C4C2 D9C14060                       1462  DC CL48'CGDBRA -0.25 M3 modes 6-7 FPCR'
00008EF0  00080001 00080001                       1463  DC XL16'00080001000800010000000000000000'
                              0000002A  00000001  1464 LINTRMOF_NUM EQU (*-LINTRMOF_GOOD)/64
                                                  1465 *
                                                  1466 *
                              00008F00  00000001  1467 XINTOUT_GOOD EQU *
00008F00  C3C7E7C2 D9409985                       1468  DC CL48'CGXBR result pair 1'
00008F30  00000000 00000001                       1469  DC XL16'00000000000000010000000000000001'
00008F40  C3C7E7C2 D9409985                       1470  DC CL48'CGXBR result pair 2'
00008F70  00000000 00000002                       1471  DC XL16'00000000000000020000000000000002'
00008F80  C3C7E7C2 D9409985                       1472  DC CL48'CGXBR result pair 3'
00008FB0  00000000 00000004                       1473  DC XL16'00000000000000040000000000000004'
00008FC0  C3C7E7C2 D9409985                       1474  DC CL48'CGXBR result pair 4'
00008FF0  FFFFFFFF FFFFFFFE                       1475  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFE'
00009000  C3C7E7C2 D9409985                       1476  DC CL48'CGXBR result pair 5'
00009030  80000000 00000000                       1477  DC XL16'80000000000000000000000000000000'
00009040  C3C7E7C2 D9409985                       1478  DC CL48'CGXBR result pair 6'
00009070  80000000 00000000                       1479  DC XL16'80000000000000000000000000000000'
00009080  C3C7E7C2 D9409985                       1480  DC CL48'CGXBR result pair 7'
000090B0  7FFFFFFF FFFFFFFF                       1481  DC XL16'7FFFFFFFFFFFFFFF0000000000000000'
000090C0  C3C7E7C2 D9409985                       1482  DC CL48'CGXBR result pair 8'
000090F0  80000000 00000000                       1483  DC XL16'80000000000000000000000000000000'
00009100  C3C7E7C2 D9409985                       1484  DC CL48'CGXBR result pair 9'
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    33

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00009130  7FFFFFFF FFFFFFFF                       1485  DC XL16'7FFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF'
                              00000009  00000001  1486 XINTOUT_NUM EQU (*-XINTOUT_GOOD)/64
                                                  1487 *
                                                  1488 *
                              00009140  00000001  1489 XINTFLGS_GOOD EQU *
00009140  C3C7E7C2 D940C6D7                       1490  DC CL48'CGXBR FPCR pairs 1-2'
00009170  00000002 F8000002                       1491  DC XL16'00000002F800000200000002F8000002'
00009180  C3C7E7C2 D940C6D7                       1492  DC CL48'CGXBR FPCR pairs 3-4'
000091B0  00000002 F8000002                       1493  DC XL16'00000002F800000200000001F8000001'
000091C0  C3C7E7C2 D940C6D7                       1494  DC CL48'CGXBR FPCR pairs 5-6'
000091F0  00880003 F8008000                       1495  DC XL16'00880003F800800000880003F8008000'
00009200  C3C7E7C2 D940C6D7                       1496  DC CL48'CGXBR FPCR pairs 7-8'
00009230  00880003 F8008000                       1497  DC XL16'00880003F800800000880003F8008000'
00009240  C3C7E7C2 D940C6D7                       1498  DC CL48'CGXBR FPCR pair 9'
00009270  00000002 F8000002                       1499  DC XL16'00000002F80000020000000000000000'
                              00000005  00000001  1500 XINTFLGS_NUM EQU (*-XINTFLGS_GOOD)/64
                                                  1501 *
                                                  1502 *
                              00009280  00000001  1503 XINTRMO_GOOD EQU *
00009280  C3C7E7C2 D9C14060                       1504  DC CL48'CGXBRA -9.5 FPCR modes 1, 2'
000092B0  FFFFFFFF FFFFFFF7                       1505  DC XL16'FFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF7'
000092C0  C3C7E7C2 D9C14060                       1506  DC CL48'CGXBRA -9.5 FPCR modes 3, 7'
000092F0  FFFFFFFF FFFFFFF6                       1507  DC XL16'FFFFFFFFFFFFFFF6FFFFFFFFFFFFFFF7'
00009300  C3C7E7C2 D9C14060                       1508  DC CL48'CGXBRA -9.5 M3 modes 1, 3'
00009330  FFFFFFFF FFFFFFF6                       1509  DC XL16'FFFFFFFFFFFFFFF6FFFFFFFFFFFFFFF7'
00009340  C3C7E7C2 D9C14060                       1510  DC CL48'CGXBRA -9.5 M3 modes 4, 5'
00009370  FFFFFFFF FFFFFFF6                       1511  DC XL16'FFFFFFFFFFFFFFF6FFFFFFFFFFFFFFF7'
00009380  C3C7E7C2 D9C14060                       1512  DC CL48'CGXBRA -9.5 M3 modes 6, 7'
000093B0  FFFFFFFF FFFFFFF7                       1513  DC XL16'FFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF6'
000093C0  C3C7E7C2 D9C14060                       1514  DC CL48'CGXBRA -5.5 FPCR modes 1, 2'
000093F0  FFFFFFFF FFFFFFFB                       1515  DC XL16'FFFFFFFFFFFFFFFBFFFFFFFFFFFFFFFB'
00009400  C3C7E7C2 D9C14060                       1516  DC CL48'CGXBRA -5.5 FPCR modes 3, 7'
00009430  FFFFFFFF FFFFFFFA                       1517  DC XL16'FFFFFFFFFFFFFFFAFFFFFFFFFFFFFFFB'
00009440  C3C7E7C2 D9C14060                       1518  DC CL48'CGXBRA -5.5 M3 modes 1, 3'
00009470  FFFFFFFF FFFFFFFA                       1519  DC XL16'FFFFFFFFFFFFFFFAFFFFFFFFFFFFFFFB'
00009480  C3C7E7C2 D9C14060                       1520  DC CL48'CGXBRA -5.5 M3 modes 4, 5'
000094B0  FFFFFFFF FFFFFFFA                       1521  DC XL16'FFFFFFFFFFFFFFFAFFFFFFFFFFFFFFFB'
000094C0  C3C7E7C2 D9C14060                       1522  DC CL48'CGXBRA -5.5 M3 modes 6, 7'
000094F0  FFFFFFFF FFFFFFFB                       1523  DC XL16'FFFFFFFFFFFFFFFBFFFFFFFFFFFFFFFA'
00009500  C3C7E7C2 D9C14060                       1524  DC CL48'CGXBRA -2.5 FPCR modes 1, 2'
00009530  FFFFFFFF FFFFFFFE                       1525  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFE'
00009540  C3C7E7C2 D9C14060                       1526  DC CL48'CGXBRA -2.5 FPCR modes 3, 7'
00009570  FFFFFFFF FFFFFFFD                       1527  DC XL16'FFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFD'
00009580  C3C7E7C2 D9C14060                       1528  DC CL48'CGXBRA -2.5 M3 modes 1, 3'
000095B0  FFFFFFFF FFFFFFFD                       1529  DC XL16'FFFFFFFFFFFFFFFDFFFFFFFFFFFFFFFD'
000095C0  C3C7E7C2 D9C14060                       1530  DC CL48'CGXBRA -2.5 M3 modes 4, 5'
000095F0  FFFFFFFF FFFFFFFE                       1531  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFE'
00009600  C3C7E7C2 D9C14060                       1532  DC CL48'CGXBRA -2.5 M3 modes 6, 7'
00009630  FFFFFFFF FFFFFFFE                       1533  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFD'
00009640  C3C7E7C2 D9C14060                       1534  DC CL48'CGXBRA -1.5 FPCR modes 1, 2'
00009670  FFFFFFFF FFFFFFFF                       1535  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
00009680  C3C7E7C2 D9C14060                       1536  DC CL48'CGXBRA -1.5 FPCR modes 3, 7'
000096B0  FFFFFFFF FFFFFFFE                       1537  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF'
000096C0  C3C7E7C2 D9C14060                       1538  DC CL48'CGXBRA -1.5 M3 modes 1, 3'
000096F0  FFFFFFFF FFFFFFFE                       1539  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF'
00009700  C3C7E7C2 D9C14060                       1540  DC CL48'CGXBRA -1.5 M3 modes 4, 5'
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    34

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00009730  FFFFFFFF FFFFFFFE                       1541  DC XL16'FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF'
00009740  C3C7E7C2 D9C14060                       1542  DC CL48'CGXBRA -1.5 M3 modes 6, 7'
00009770  FFFFFFFF FFFFFFFF                       1543  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE'
00009780  C3C7E7C2 D9C14060                       1544  DC CL48'CGXBRA -0.5 FPCR modes 1, 2'
000097B0  00000000 00000000                       1545  DC XL16'00000000000000000000000000000000'
000097C0  C3C7E7C2 D9C14060                       1546  DC CL48'CGXBRA -0.5 FPCR modes 3, 7'
000097F0  FFFFFFFF FFFFFFFF                       1547  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
00009800  C3C7E7C2 D9C14060                       1548  DC CL48'CGXBRA -0.5 M3 modes 1, 3'
00009830  FFFFFFFF FFFFFFFF                       1549  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
00009840  C3C7E7C2 D9C14060                       1550  DC CL48'CGXBRA -0.5 M3 modes 4, 5'
00009870  00000000 00000000                       1551  DC XL16'00000000000000000000000000000000'
00009880  C3C7E7C2 D9C14060                       1552  DC CL48'CGXBRA -0.5 M3 modes 6, 7'
000098B0  00000000 00000000                       1553  DC XL16'0000000000000000FFFFFFFFFFFFFFFF'
000098C0  C3C7E7C2 D9C1404E                       1554  DC CL48'CGXBRA +0.5 FPCR modes 1, 2'
000098F0  00000000 00000000                       1555  DC XL16'00000000000000000000000000000001'
00009900  C3C7E7C2 D9C1404E                       1556  DC CL48'CGXBRA +0.5 FPCR modes 3, 7'
00009930  00000000 00000000                       1557  DC XL16'00000000000000000000000000000001'
00009940  C3C7E7C2 D9C1404E                       1558  DC CL48'CGXBRA +0.5 M3 modes 1, 3'
00009970  00000000 00000001                       1559  DC XL16'00000000000000010000000000000001'
00009980  C3C7E7C2 D9C1404E                       1560  DC CL48'CGXBRA +0.5 M3 modes 4, 5'
000099B0  00000000 00000000                       1561  DC XL16'00000000000000000000000000000000'
000099C0  C3C7E7C2 D9C1404E                       1562  DC CL48'CGXBRA +0.5 M3 modes 6, 7'
000099F0  00000000 00000001                       1563  DC XL16'00000000000000010000000000000000'
00009A00  C3C7E7C2 D9C1404E                       1564  DC CL48'CGXBRA +1.5 FPCR modes 1, 2'
00009A30  00000000 00000001                       1565  DC XL16'00000000000000010000000000000002'
00009A40  C3C7E7C2 D9C1404E                       1566  DC CL48'CGXBRA +1.5 FPCR modes 3, 7'
00009A70  00000000 00000001                       1567  DC XL16'00000000000000010000000000000001'
00009A80  C3C7E7C2 D9C1404E                       1568  DC CL48'CGXBRA +1.5 M3 modes 1, 3'
00009AB0  00000000 00000002                       1569  DC XL16'00000000000000020000000000000001'
00009AC0  C3C7E7C2 D9C1404E                       1570  DC CL48'CGXBRA +1.5 M3 modes 4, 5'
00009AF0  00000000 00000002                       1571  DC XL16'00000000000000020000000000000001'
00009B00  C3C7E7C2 D9C1404E                       1572  DC CL48'CGXBRA +1.5 M3 modes 6, 7'
00009B30  00000000 00000002                       1573  DC XL16'00000000000000020000000000000001'
00009B40  C3C7E7C2 D9C1404E                       1574  DC CL48'CGXBRA +2.5 FPCR modes 1, 2'
00009B70  00000000 00000002                       1575  DC XL16'00000000000000020000000000000003'
00009B80  C3C7E7C2 D9C1404E                       1576  DC CL48'CGXBRA +2.5 FPCR modes 3, 7'
00009BB0  00000000 00000002                       1577  DC XL16'00000000000000020000000000000003'
00009BC0  C3C7E7C2 D9C1404E                       1578  DC CL48'CGXBRA +2.5 M3 modes 1, 3'
00009BF0  00000000 00000003                       1579  DC XL16'00000000000000030000000000000003'
00009C00  C3C7E7C2 D9C1404E                       1580  DC CL48'CGXBRA +2.5 M3 modes 4, 5'
00009C30  00000000 00000002                       1581  DC XL16'00000000000000020000000000000002'
00009C40  C3C7E7C2 D9C1404E                       1582  DC CL48'CGXBRA +2.5 M3 modes 6, 7'
00009C70  00000000 00000003                       1583  DC XL16'00000000000000030000000000000002'
00009C80  C3C7E7C2 D9C1404E                       1584  DC CL48'CGXBRA +5.5 FPCR modes 1, 2'
00009CB0  00000000 00000005                       1585  DC XL16'00000000000000050000000000000006'
00009CC0  C3C7E7C2 D9C1404E                       1586  DC CL48'CGXBRA +5.5 FPCR modes 3, 7'
00009CF0  00000000 00000005                       1587  DC XL16'00000000000000050000000000000005'
00009D00  C3C7E7C2 D9C1404E                       1588  DC CL48'CGXBRA +5.5 M3 modes 1, 3'
00009D30  00000000 00000006                       1589  DC XL16'00000000000000060000000000000005'
00009D40  C3C7E7C2 D9C1404E                       1590  DC CL48'CGXBRA +5.5 M3 modes 4, 5'
00009D70  00000000 00000006                       1591  DC XL16'00000000000000060000000000000005'
00009D80  C3C7E7C2 D9C1404E                       1592  DC CL48'CGXBRA +5.5 M3 modes 6, 7'
00009DB0  00000000 00000006                       1593  DC XL16'00000000000000060000000000000005'
00009DC0  C3C7E7C2 D9C1404E                       1594  DC CL48'CGXBRA +9.5 FPCR modes 1, 2'
00009DF0  00000000 00000009                       1595  DC XL16'0000000000000009000000000000000A'
00009E00  C3C7E7C2 D9C1404E                       1596  DC CL48'CGXBRA +9.5 FPCR modes 3, 7'
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    35

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

00009E30  00000000 00000009                       1597  DC XL16'00000000000000090000000000000009'
00009E40  C3C7E7C2 D9C1404E                       1598  DC CL48'CGXBRA +9.5 M3 modes 1, 3'
00009E70  00000000 0000000A                       1599  DC XL16'000000000000000A0000000000000009'
00009E80  C3C7E7C2 D9C1404E                       1600  DC CL48'CGXBRA +9.5 M3 modes 4, 5'
00009EB0  00000000 0000000A                       1601  DC XL16'000000000000000A0000000000000009'
00009EC0  C3C7E7C2 D9C1404E                       1602  DC CL48'CGXBRA +9.5 M3 modes 6, 7'
00009EF0  00000000 0000000A                       1603  DC XL16'000000000000000A0000000000000009'
00009F00  C3C7E7C2 D9C1404E                       1604  DC CL48'CGXBRA +0.75 FPCR modes 1, 2'
00009F30  00000000 00000000                       1605  DC XL16'00000000000000000000000000000001'
00009F40  C3C7E7C2 D9C1404E                       1606  DC CL48'CGXBRA +0.75 FPCR modes 3, 7'
00009F70  00000000 00000000                       1607  DC XL16'00000000000000000000000000000001'
00009F80  C3C7E7C2 D9C1404E                       1608  DC CL48'CGXBRA +0.75 M3 modes 1, 3'
00009FB0  00000000 00000001                       1609  DC XL16'00000000000000010000000000000001'
00009FC0  C3C7E7C2 D9C1404E                       1610  DC CL48'CGXBRA +0.75 M3 modes 4, 5'
00009FF0  00000000 00000001                       1611  DC XL16'00000000000000010000000000000000'
0000A000  C3C7E7C2 D9C1404E                       1612  DC CL48'CGXBRA +0.75 M3 modes 6, 7'
0000A030  00000000 00000001                       1613  DC XL16'00000000000000010000000000000000'
0000A040  C3C7E7C2 D9C1404E                       1614  DC CL48'CGXBRA +0.25 FPCR modes 1, 2'
0000A070  00000000 00000000                       1615  DC XL16'00000000000000000000000000000001'
0000A080  C3C7E7C2 D9C1404E                       1616  DC CL48'CGXBRA +0.25 FPCR modes 3, 7'
0000A0B0  00000000 00000000                       1617  DC XL16'00000000000000000000000000000001'
0000A0C0  C3C7E7C2 D9C1404E                       1618  DC CL48'CGXBRA +0.25 M3 modes 1, 3'
0000A0F0  00000000 00000000                       1619  DC XL16'00000000000000000000000000000001'
0000A100  C3C7E7C2 D9C1404E                       1620  DC CL48'CGXBRA +0.25 M3 modes 4, 5'
0000A130  00000000 00000000                       1621  DC XL16'00000000000000000000000000000000'
0000A140  C3C7E7C2 D9C1404E                       1622  DC CL48'CGXBRA +0.25 M3 modes 6, 7'
0000A170  00000000 00000001                       1623  DC XL16'00000000000000010000000000000000'
0000A180  C3C7E7C2 D9C14060                       1624  DC CL48'CGXBRA -0.75 FPCR modes 1, 2'
0000A1B0  00000000 00000000                       1625  DC XL16'00000000000000000000000000000000'
0000A1C0  C3C7E7C2 D9C14060                       1626  DC CL48'CGXBRA -0.75 FPCR modes 3, 7'
0000A1F0  FFFFFFFF FFFFFFFF                       1627  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
0000A200  C3C7E7C2 D9C14060                       1628  DC CL48'CGXBRA -0.75 M3 modes 1, 3'
0000A230  FFFFFFFF FFFFFFFF                       1629  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
0000A240  C3C7E7C2 D9C14060                       1630  DC CL48'CGXBRA -0.75 M3 modes 4, 5'
0000A270  FFFFFFFF FFFFFFFF                       1631  DC XL16'FFFFFFFFFFFFFFFF0000000000000000'
0000A280  C3C7E7C2 D9C14060                       1632  DC CL48'CGXBRA -0.75 M3 modes 6, 7'
0000A2B0  00000000 00000000                       1633  DC XL16'0000000000000000FFFFFFFFFFFFFFFF'
0000A2C0  C3C7E7C2 D9C14060                       1634  DC CL48'CGXBRA -0.25 FPCR modes 1, 2'
0000A2F0  00000000 00000000                       1635  DC XL16'00000000000000000000000000000000'
0000A300  C3C7E7C2 D9C14060                       1636  DC CL48'CGXBRA -0.25 FPCR modes 3, 7'
0000A330  FFFFFFFF FFFFFFFF                       1637  DC XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
0000A340  C3C7E7C2 D9C14060                       1638  DC CL48'CGXBRA -0.25 M3 modes 1, 3'
0000A370  00000000 00000000                       1639  DC XL16'0000000000000000FFFFFFFFFFFFFFFF'
0000A380  C3C7E7C2 D9C14060                       1640  DC CL48'CGXBRA -0.25 M3 modes 4, 5'
0000A3B0  00000000 00000000                       1641  DC XL16'00000000000000000000000000000000'
0000A3C0  C3C7E7C2 D9C14060                       1642  DC CL48'CGXBRA -0.25 M3 modes 6, 7'
0000A3F0  00000000 00000000                       1643  DC XL16'0000000000000000FFFFFFFFFFFFFFFF'
0000A400  C3C7E7C2 D9C14094                       1644  DC CL48'CGXBRA maxint64+5 FPCR modes 1, 2'
0000A430  7FFFFFFF FFFFFFFF                       1645  DC XL16'7FFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF'
0000A440  C3C7E7C2 D9C14094                       1646  DC CL48'CGXBRA maxint64+5 FPCR modes 3, 7'
0000A470  7FFFFFFF FFFFFFFF                       1647  DC XL16'7FFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF'
0000A480  C3C7E7C2 D9C14094                       1648  DC CL48'CGXBRA maxint64+5 M3 modes 1, 3'
0000A4B0  7FFFFFFF FFFFFFFF                       1649  DC XL16'7FFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF'
0000A4C0  C3C7E7C2 D9C14094                       1650  DC CL48'CGXBRA maxint64+5 M3 modes 4, 5'
0000A4F0  7FFFFFFF FFFFFFFF                       1651  DC XL16'7FFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF'
0000A500  C3C7E7C2 D9C14094                       1652  DC CL48'CGXBRA maxint64+5 M3 modes 6, 7'
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    36

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000A530  7FFFFFFF FFFFFFFF                       1653  DC XL16'7FFFFFFFFFFFFFFF7FFFFFFFFFFFFFFF'
                              0000004B  00000001  1654 XINTRMO_NUM EQU (*-XINTRMO_GOOD)/64
                                                  1655 *
                                                  1656 *
                              0000A540  00000001  1657 XINTRMOF_GOOD EQU *
0000A540  C3C7E7C2 D9C14060                       1658  DC CL48'CGXBRA -9.5 FPCR modes 1-3, 7 FPCR'
0000A570  00000001 00000001                       1659  DC XL16'00000001000000010000000100000001'
0000A580  C3C7E7C2 D9C14060                       1660  DC CL48'CGXBRA -9.5 M3 modes 1, 3-5 FPCR'
0000A5B0  00080001 00080001                       1661  DC XL16'00080001000800010008000100080001'
0000A5C0  C3C7E7C2 D9C14060                       1662  DC CL48'CGXBRA -9.5 M3 modes 6-7 FPCR'
0000A5F0  00080001 00080001                       1663  DC XL16'00080001000800010000000000000000'
0000A600  C3C7E7C2 D9C14060                       1664  DC CL48'CGXBRA -5.5 FPCR modes 1-3, 7 FPCR'
0000A630  00000001 00000001                       1665  DC XL16'00000001000000010000000100000001'
0000A640  C3C7E7C2 D9C14060                       1666  DC CL48'CGXBRA -5.5 M3 modes 1, 3-5 FPCR'
0000A670  00080001 00080001                       1667  DC XL16'00080001000800010008000100080001'
0000A680  C3C7E7C2 D9C14060                       1668  DC CL48'CGXBRA -5.5 M3 modes 6-7 FPCR'
0000A6B0  00080001 00080001                       1669  DC XL16'00080001000800010000000000000000'
0000A6C0  C3C7E7C2 D9C14060                       1670  DC CL48'CGXBRA -2.5 FPCR modes 1-3, 7 FPCR'
0000A6F0  00000001 00000001                       1671  DC XL16'00000001000000010000000100000001'
0000A700  C3C7E7C2 D9C14060                       1672  DC CL48'CGXBRA -2.5 M3 modes 1, 3-5 FPCR'
0000A730  00080001 00080001                       1673  DC XL16'00080001000800010008000100080001'
0000A740  C3C7E7C2 D9C14060                       1674  DC CL48'CGXBRA -2.5 M3 modes 6-7 FPCR'
0000A770  00080001 00080001                       1675  DC XL16'00080001000800010000000000000000'
0000A780  C3C7E7C2 D9C14060                       1676  DC CL48'CGXBRA -1.5 FPCR modes 1-3, 7 FPCR'
0000A7B0  00000001 00000001                       1677  DC XL16'00000001000000010000000100000001'
0000A7C0  C3C7E7C2 D9C14060                       1678  DC CL48'CGXBRA -1.5 M3 modes 1, 3-5 FPCR'
0000A7F0  00080001 00080001                       1679  DC XL16'00080001000800010008000100080001'
0000A800  C3C7E7C2 D9C14060                       1680  DC CL48'CGXBRA -1.5 M3 modes 6-7 FPCR'
0000A830  00080001 00080001                       1681  DC XL16'00080001000800010000000000000000'
0000A840  C3C7E7C2 D9C14060                       1682  DC CL48'CGXBRA -0.5 FPCR modes 1-3, 7 FPCR'
0000A870  00000001 00000001                       1683  DC XL16'00000001000000010000000100000001'
0000A880  C3C7E7C2 D9C14060                       1684  DC CL48'CGXBRA -0.5 M3 modes 1, 3-5 FPCR'
0000A8B0  00080001 00080001                       1685  DC XL16'00080001000800010008000100080001'
0000A8C0  C3C7E7C2 D9C14060                       1686  DC CL48'CGXBRA -0.5 M3 modes 6-7 FPCR'
0000A8F0  00080001 00080001                       1687  DC XL16'00080001000800010000000000000000'
0000A900  C3C7E7C2 D9C1404E                       1688  DC CL48'CGXBRA +0.5 FPCR modes 1-3, 7 FPCR'
0000A930  00000002 00000002                       1689  DC XL16'00000002000000020000000200000002'
0000A940  C3C7E7C2 D9C1404E                       1690  DC CL48'CGXBRA +0.5 M3 modes 1, 3-5 FPCR'
0000A970  00080002 00080002                       1691  DC XL16'00080002000800020008000200080002'
0000A980  C3C7E7C2 D9C1404E                       1692  DC CL48'CGXBRA +0.5 M3 modes 6-7 FPCR'
0000A9B0  00080002 00080002                       1693  DC XL16'00080002000800020000000000000000'
0000A9C0  C3C7E7C2 D9C1404E                       1694  DC CL48'CGXBRA +1.5 FPCR modes 1-3, 7 FPCR'
0000A9F0  00000002 00000002                       1695  DC XL16'00000002000000020000000200000002'
0000AA00  C3C7E7C2 D9C1404E                       1696  DC CL48'CGXBRA +1.5 M3 modes 1, 3-5 FPCR'
0000AA30  00080002 00080002                       1697  DC XL16'00080002000800020008000200080002'
0000AA40  C3C7E7C2 D9C1404E                       1698  DC CL48'CGXBRA +1.5 M3 modes 6-7 FPCR'
0000AA70  00080002 00080002                       1699  DC XL16'00080002000800020000000000000000'
0000AA80  C3C7E7C2 D9C1404E                       1700  DC CL48'CGXBRA +2.5 FPCR modes 1-3, 7 FPCR'
0000AAB0  00000002 00000002                       1701  DC XL16'00000002000000020000000200000002'
0000AAC0  C3C7E7C2 D9C1404E                       1702  DC CL48'CGXBRA +2.5 M3 modes 1, 3-5 FPCR'
0000AAF0  00080002 00080002                       1703  DC XL16'00080002000800020008000200080002'
0000AB00  C3C7E7C2 D9C1404E                       1704  DC CL48'CGXBRA +2.5 M3 modes 6-7 FPCR'
0000AB30  00080002 00080002                       1705  DC XL16'00080002000800020000000000000000'
0000AB40  C3C7E7C2 D9C1404E                       1706  DC CL48'CGXBRA +5.5 FPCR modes 1-3, 7 FPCR'
0000AB70  00000002 00000002                       1707  DC XL16'00000002000000020000000200000002'
0000AB80  C3C7E7C2 D9C1404E                       1708  DC CL48'CGXBRA +5.5 M3 modes 1, 3-5 FPCR'
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    37

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000ABB0  00080002 00080002                       1709  DC XL16'00080002000800020008000200080002'
0000ABC0  C3C7E7C2 D9C1404E                       1710  DC CL48'CGXBRA +5.5 M3 modes 6-7 FPCR'
0000ABF0  00080002 00080002                       1711  DC XL16'00080002000800020000000000000000'
0000AC00  C3C7E7C2 D9C1404E                       1712  DC CL48'CGXBRA +9.5 FPCR modes 1-3, 7 FPCR'
0000AC30  00000002 00000002                       1713  DC XL16'00000002000000020000000200000002'
0000AC40  C3C7E7C2 D9C1404E                       1714  DC CL48'CGXBRA +9.5 M3 modes 1, 3-5 FPCR'
0000AC70  00080002 00080002                       1715  DC XL16'00080002000800020008000200080002'
0000AC80  C3C7E7C2 D9C1404E                       1716  DC CL48'CGXBRA +9.5 M3 modes 6-7 FPCR'
0000ACB0  00080002 00080002                       1717  DC XL16'00080002000800020000000000000000'
0000ACC0  C3C7C4C2 D9C1404E                       1718  DC CL48'CGDBRA +0.75 FPCR modes 1-3, 7 FPCR'
0000ACF0  00000002 00000002                       1719  DC XL16'00000002000000020000000200000002'
0000AD00  C3C7C4C2 D9C1404E                       1720  DC CL48'CGDBRA +0.75 M3 modes 1, 3-5 FPCR'
0000AD30  00080002 00080002                       1721  DC XL16'00080002000800020008000200080002'
0000AD40  C3C7C4C2 D9C1404E                       1722  DC CL48'CGDBRA +0.75 M3 modes 6-7 FPCR'
0000AD70  00080002 00080002                       1723  DC XL16'00080002000800020000000000000000'
0000AD80  C3C7C4C2 D9C1404E                       1724  DC CL48'CGDBRA +0.25 FPCR modes 1-3, 7 FPCR'
0000ADB0  00000002 00000002                       1725  DC XL16'00000002000000020000000200000002'
0000ADC0  C3C7C4C2 D9C1404E                       1726  DC CL48'CGDBRA +0.25 M3 modes 1, 3-5 FPCR'
0000ADF0  00080002 00080002                       1727  DC XL16'00080002000800020008000200080002'
0000AE00  C3C7C4C2 D9C1404E                       1728  DC CL48'CGDBRA +0.25 M3 modes 6-7 FPCR'
0000AE30  00080002 00080002                       1729  DC XL16'00080002000800020000000000000000'
0000AE40  C3C7C4C2 D9C14060                       1730  DC CL48'CGDBRA -0.75 FPCR modes 1-3, 7 FPCR'
0000AE70  00000001 00000001                       1731  DC XL16'00000001000000010000000100000001'
0000AE80  C3C7C4C2 D9C14060                       1732  DC CL48'CGDBRA -0.75 M3 modes 1, 3-5 FPCR'
0000AEB0  00080001 00080001                       1733  DC XL16'00080001000800010008000100080001'
0000AEC0  C3C7C4C2 D9C14060                       1734  DC CL48'CGDBRA -0.75 M3 modes 6-7 FPCR'
0000AEF0  00080001 00080001                       1735  DC XL16'00080001000800010000000000000000'
0000AF00  C3C7C4C2 D9C14060                       1736  DC CL48'CGDBRA -0.25 FPCR modes 1-3, 7 FPCR'
0000AF30  00000001 00000001                       1737  DC XL16'00000001000000010000000100000001'
0000AF40  C3C7C4C2 D9C14060                       1738  DC CL48'CGDBRA -0.25 M3 modes 1, 3-5 FPCR'
0000AF70  00080001 00080001                       1739  DC XL16'00080001000800010008000100080001'
0000AF80  C3C7C4C2 D9C14060                       1740  DC CL48'CGDBRA -0.25 M3 modes 6-7 FPCR'
0000AFB0  00080001 00080001                       1741  DC XL16'00080001000800010000000000000000'
0000AFC0  C3C7C4C2 D9C14094                       1742  DC CL48'CGDBRA maxint64+5 FPCR modes 1-3, 7 FPCR'
0000AFF0  00000002 00800003                       1743  DC XL16'00000002008000030000000200000002'
0000B000  C3C7C4C2 D9C14094                       1744  DC CL48'CGDBRA maxint64+5 M3 modes 1, 3-5 FPCR'
0000B030  00880003 00080002                       1745  DC XL16'00880003000800020088000300080002'
0000B040  C3C7C4C2 D9C14094                       1746  DC CL48'CGDBRA maxint64+5 M3 modes 6-7 FPCR'
0000B070  00880003 00080002                       1747  DC XL16'00880003000800020000000000000000'
                              0000002D  00000001  1748 XINTRMOF_NUM EQU (*-XINTRMOF_GOOD)/64
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    38

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000B080                                          1750 HELPERS  DS    0H       (R12 base of helper subroutines)

                                                  1752 ***********************************************************************
                                                  1753 *               REPORT UNEXPECTED PROGRAM CHECK
                                                  1754 ***********************************************************************

0000B080                                          1756 PGMCK    DS    0H
0000B080  F342 C072 F08E      0000B0F2  0000008E  1757          UNPK  PROGCODE(L'PROGCODE+1),PCINTCD(L'PCINTCD+1)
0000B086  926B C076                     0000B0F6  1758          MVI   PGMCOMMA,C','
0000B08A  DC03 C072 C178      0000B0F2  0000B1F8  1759          TR    PROGCODE,HEXTRTAB

0000B090  F384 C07C F150      0000B0FC  00000150  1761          UNPK  PGMPSW+(0*9)(9),PCOLDPSW+(0*4)(5)
0000B096  9240 C084                     0000B104  1762          MVI   PGMPSW+(0*9)+8,C' '
0000B09A  DC07 C07C C178      0000B0FC  0000B1F8  1763          TR    PGMPSW+(0*9)(8),HEXTRTAB

0000B0A0  F384 C085 F154      0000B105  00000154  1765          UNPK  PGMPSW+(1*9)(9),PCOLDPSW+(1*4)(5)
0000B0A6  9240 C08D                     0000B10D  1766          MVI   PGMPSW+(1*9)+8,C' '
0000B0AA  DC07 C085 C178      0000B105  0000B1F8  1767          TR    PGMPSW+(1*9)(8),HEXTRTAB

0000B0B0  F384 C08E F158      0000B10E  00000158  1769          UNPK  PGMPSW+(2*9)(9),PCOLDPSW+(2*4)(5)
0000B0B6  9240 C096                     0000B116  1770          MVI   PGMPSW+(2*9)+8,C' '
0000B0BA  DC07 C08E C178      0000B10E  0000B1F8  1771          TR    PGMPSW+(2*9)(8),HEXTRTAB

0000B0C0  F384 C097 F15C      0000B117  0000015C  1773          UNPK  PGMPSW+(3*9)(9),PCOLDPSW+(3*4)(5)
0000B0C6  9240 C09F                     0000B11F  1774          MVI   PGMPSW+(3*9)+8,C' '
0000B0CA  DC07 C097 C178      0000B117  0000B1F8  1775          TR    PGMPSW+(3*9)(8),HEXTRTAB

0000B0D0  4100 0042                     00000042  1777          LA    R0,L'PROGMSG     R0 <== length of message
0000B0D4  4110 C05E                     0000B0DE  1778          LA    R1,PROGMSG       R1 --> the message text itself
0000B0D8  4520 C27A                     0000B2FA  1779          BAL   R2,MSG           Go display this message
                                                  1780
0000B0DC  07FD                                    1781          BR    R13              Return to caller




0000B0DE                                          1783 PROGMSG  DS   0CL66
0000B0DE  D7D9D6C7 D9C1D440                       1784          DC    CL20'PROGRAM CHECK! CODE '
0000B0F2  88888888                                1785 PROGCODE DC    CL4'hhhh'
0000B0F6  6B                                      1786 PGMCOMMA DC    CL1','
0000B0F7  40D7E2E6 40                             1787          DC    CL5' PSW '
0000B0FC  88888888 88888888                       1788 PGMPSW   DC    CL36'hhhhhhhh hhhhhhhh hhhhhhhh hhhhhhhh '
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    39

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1790 ***********************************************************************
                                                  1791 *                    VERIFICATION ROUTINE
                                                  1792 ***********************************************************************

0000B120                                          1794 VERISUB  DS    0H
                                                  1795 *
                                                  1796 **       Loop through the VERIFY TABLE...
                                                  1797 *

0000B120  4110 C32C                     0000B3AC  1799          LA    R1,VERIFTAB      R1 --> Verify table
0000B124  4120 000C                     0000000C  1800          LA    R2,VERIFLEN      R2 <== Number of entries
0000B128  0D30                                    1801          BASR  R3,0             Set top of loop

0000B12A  9846 1000                     00000000  1803          LM    R4,R6,0(R1)      Load verify table values
0000B12E  4D70 C0C2                     0000B142  1804          BAS   R7,VERIFY        Verify results
0000B132  4110 100C                     0000000C  1805          LA    R1,12(,R1)       Next verify table entry
0000B136  0623                                    1806          BCTR  R2,R3            Loop through verify table

0000B138  9500 C278                     0000B2F8  1808          CLI   FAILFLAG,X'00'   Did all tests verify okay?
0000B13C  078D                                    1809          BER   R13              Yes, return to caller
0000B13E  47F0 F238                     00000238  1810          B     FAIL             No, load FAILURE disabled wait PSW






                                                  1812 *
                                                  1813 **       Loop through the ACTUAL / EXPECTED results...
                                                  1814 *

0000B142  0D80                                    1816 VERIFY   BASR  R8,0             Set top of loop

0000B144  D50F 4000 5030      00000000  00000030  1818          CLC   0(16,R4),48(R5)  Actual results == Expected results?
0000B14A  4770 C0DA                     0000B15A  1819          BNE   VERIFAIL         No, show failure
0000B14E  4140 4010                     00000010  1820 VERINEXT LA    R4,16(,R4)       Next actual result
0000B152  4150 5040                     00000040  1821          LA    R5,64(,R5)       Next expected result
0000B156  0668                                    1822          BCTR  R6,R8            Loop through results

0000B158  07F7                                    1824          BR    R7               Return to caller
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    40

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1826 ***********************************************************************
                                                  1827 *                    Report the failure...
                                                  1828 ***********************************************************************

0000B15A  9005 C250                     0000B2D0  1830 VERIFAIL STM   R0,R5,SAVER0R5   Save registers
0000B15E  92FF C278                     0000B2F8  1831          MVI   FAILFLAG,X'FF'   Remember verification failure
                                                  1832 *
                                                  1833 **       First, show them the description...
                                                  1834 *
0000B162  D22F C1E0 5000      0000B260  00000000  1835          MVC   FAILDESC,0(R5)   Save results/test description
0000B168  4100 0044                     00000044  1836          LA    R0,L'FAILMSG1    R0 <== length of message
0000B16C  4110 C1CC                     0000B24C  1837          LA    R1,FAILMSG1      R1 --> the message text itself
0000B170  4520 C27A                     0000B2FA  1838          BAL   R2,MSG           Go display this message
                                                  1839 *
                                                  1840 **       Save address of actual and expected results
                                                  1841 *
0000B174  5040 C24C                     0000B2CC  1842          ST    R4,AACTUAL       Save A(actual results)
0000B178  4150 5030                     00000030  1843          LA    R5,48(,R5)       R5 ==> expected results
0000B17C  5050 C248                     0000B2C8  1844          ST    R5,AEXPECT       Save A(expected results)
                                                  1845 *
                                                  1846 **       Format and show them the EXPECTED ("Want") results...
                                                  1847 *
0000B180  D205 C210 C3C0      0000B290  0000B440  1848          MVC   WANTGOT,=CL6'Want: '
0000B186  F384 C216 C248      0000B296  0000B2C8  1849          UNPK  FAILADR(L'FAILADR+1),AEXPECT(L'AEXPECT+1)
0000B18C  9240 C21E                     0000B29E  1850          MVI   BLANKEQ,C' '
0000B190  DC07 C216 C178      0000B296  0000B1F8  1851          TR    FAILADR,HEXTRTAB

0000B196  F384 C221 5000      0000B2A1  00000000  1853          UNPK  FAILVALS+(0*9)(9),(0*4)(5,R5)
0000B19C  9240 C229                     0000B2A9  1854          MVI   FAILVALS+(0*9)+8,C' '
0000B1A0  DC07 C221 C178      0000B2A1  0000B1F8  1855          TR    FAILVALS+(0*9)(8),HEXTRTAB

0000B1A6  F384 C22A 5004      0000B2AA  00000004  1857          UNPK  FAILVALS+(1*9)(9),(1*4)(5,R5)
0000B1AC  9240 C232                     0000B2B2  1858          MVI   FAILVALS+(1*9)+8,C' '
0000B1B0  DC07 C22A C178      0000B2AA  0000B1F8  1859          TR    FAILVALS+(1*9)(8),HEXTRTAB

0000B1B6  F384 C233 5008      0000B2B3  00000008  1861          UNPK  FAILVALS+(2*9)(9),(2*4)(5,R5)
0000B1BC  9240 C23B                     0000B2BB  1862          MVI   FAILVALS+(2*9)+8,C' '
0000B1C0  DC07 C233 C178      0000B2B3  0000B1F8  1863          TR    FAILVALS+(2*9)(8),HEXTRTAB

0000B1C6  F384 C23C 500C      0000B2BC  0000000C  1865          UNPK  FAILVALS+(3*9)(9),(3*4)(5,R5)
0000B1CC  9240 C244                     0000B2C4  1866          MVI   FAILVALS+(3*9)+8,C' '
0000B1D0  DC07 C23C C178      0000B2BC  0000B1F8  1867          TR    FAILVALS+(3*9)(8),HEXTRTAB

0000B1D6  4100 0035                     00000035  1869          LA    R0,L'FAILMSG2    R0 <== length of message
0000B1DA  4110 C210                     0000B290  1870          LA    R1,FAILMSG2      R1 --> the message text itself
0000B1DE  4520 C27A                     0000B2FA  1871          BAL   R2,MSG           Go display this message
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    41

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1873 *
                                                  1874 **       Format and show them the ACTUAL ("Got") results...
                                                  1875 *
0000B1E2  D205 C210 C3C6      0000B290  0000B446  1876          MVC   WANTGOT,=CL6'Got:  '
0000B1E8  F384 C216 C24C      0000B296  0000B2CC  1877          UNPK  FAILADR(L'FAILADR+1),AACTUAL(L'AACTUAL+1)
0000B1EE  9240 C21E                     0000B29E  1878          MVI   BLANKEQ,C' '
0000B1F2  DC07 C216 C178      0000B296  0000B1F8  1879          TR    FAILADR,HEXTRTAB

0000B1F8  F384 C221 4000      0000B2A1  00000000  1881          UNPK  FAILVALS+(0*9)(9),(0*4)(5,R4)
0000B1FE  9240 C229                     0000B2A9  1882          MVI   FAILVALS+(0*9)+8,C' '
0000B202  DC07 C221 C178      0000B2A1  0000B1F8  1883          TR    FAILVALS+(0*9)(8),HEXTRTAB

0000B208  F384 C22A 4004      0000B2AA  00000004  1885          UNPK  FAILVALS+(1*9)(9),(1*4)(5,R4)
0000B20E  9240 C232                     0000B2B2  1886          MVI   FAILVALS+(1*9)+8,C' '
0000B212  DC07 C22A C178      0000B2AA  0000B1F8  1887          TR    FAILVALS+(1*9)(8),HEXTRTAB

0000B218  F384 C233 4008      0000B2B3  00000008  1889          UNPK  FAILVALS+(2*9)(9),(2*4)(5,R4)
0000B21E  9240 C23B                     0000B2BB  1890          MVI   FAILVALS+(2*9)+8,C' '
0000B222  DC07 C233 C178      0000B2B3  0000B1F8  1891          TR    FAILVALS+(2*9)(8),HEXTRTAB

0000B228  F384 C23C 400C      0000B2BC  0000000C  1893          UNPK  FAILVALS+(3*9)(9),(3*4)(5,R4)
0000B22E  9240 C244                     0000B2C4  1894          MVI   FAILVALS+(3*9)+8,C' '
0000B232  DC07 C23C C178      0000B2BC  0000B1F8  1895          TR    FAILVALS+(3*9)(8),HEXTRTAB

0000B238  4100 0035                     00000035  1897          LA    R0,L'FAILMSG2    R0 <== length of message
0000B23C  4110 C210                     0000B290  1898          LA    R1,FAILMSG2      R1 --> the message text itself
0000B240  4520 C27A                     0000B2FA  1899          BAL   R2,MSG           Go display this message

0000B244  9805 C250                     0000B2D0  1901          LM    R0,R5,SAVER0R5   Restore registers
0000B248  47F0 C0CE                     0000B14E  1902          B     VERINEXT         Continue with verification...



0000B24C                                          1904 FAILMSG1 DS   0CL68
0000B24C  C3D6D4D7 C1D9C9E2                       1905          DC    CL20'COMPARISON FAILURE! '
0000B260  4D8485A2 83998997                       1906 FAILDESC DC    CL48'(description)'


0000B290                                          1908 FAILMSG2 DS   0CL53
0000B290  40404040 4040                           1909 WANTGOT  DC    CL6' '           'Want: ' -or- 'Got:  '
0000B296  C1C1C1C1 C1C1C1C1                       1910 FAILADR  DC    CL8'AAAAAAAA'
0000B29E  407E40                                  1911 BLANKEQ  DC    CL3' = '
0000B2A1  88888888 88888888                       1912 FAILVALS DC    CL36'hhhhhhhh hhhhhhhh hhhhhhhh hhhhhhhh '


0000B2C8  00000000                                1914 AEXPECT  DC    F'0'             ==> Expected ("Want") results
0000B2CC  00000000                                1915 AACTUAL  DC    F'0'             ==> Actual ("Got") results
0000B2D0  00000000 00000000                       1916 SAVER0R5 DC    6F'0'            Registers R0 - R5 save area
0000B2E8  F0F1F2F3 F4F5F6F7                       1917 CHARHEX  DC    CL16'0123456789ABCDEF'
                              0000B1F8  00000010  1918 HEXTRTAB EQU   CHARHEX-X'F0'    Hexadecimal translation table
0000B2F8  00                                      1919 FAILFLAG DC    X'00'            FF = Fail, 00 = Success
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    42

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1921 ***********************************************************************
                                                  1922 *        Issue HERCULES MESSAGE pointed to by R1, length in R0
                                                  1923 ***********************************************************************

0000B2FA  4900 C3BC                     0000B43C  1925 MSG      CH    R0,=H'0'               Do we even HAVE a message?
0000B2FE  07D2                                    1926          BNHR  R2                     No, ignore

0000B300  9002 C2B0                     0000B330  1928          STM   R0,R2,MSGSAVE          Save registers

0000B304  4900 C3BE                     0000B43E  1930          CH    R0,=AL2(L'MSGMSG)      Message length within limits?
0000B308  47D0 C290                     0000B310  1931          BNH   MSGOK                  Yes, continue
0000B30C  4100 005F                     0000005F  1932          LA    R0,L'MSGMSG            No, set to maximum

0000B310  1820                                    1934 MSGOK    LR    R2,R0                  Copy length to work register
0000B312  0620                                    1935          BCTR  R2,0                   Minus-1 for execute
0000B314  4420 C2BC                     0000B33C  1936          EX    R2,MSGMVC              Copy message to O/P buffer

0000B318  4120 200A                     0000000A  1938          LA    R2,1+L'MSGCMD(,R2)     Calculate true command length
0000B31C  4110 C2C2                     0000B342  1939          LA    R1,MSGCMD              Point to true command

0000B320  83120008                                1941          DC    X'83',X'12',X'0008'    Issue Hercules Diagnose X'008'
0000B324  4780 C2AA                     0000B32A  1942          BZ    MSGRET                 Return if successful
0000B328  0000                                    1943          DC    H'0'                   CRASH for debugging purposes

0000B32A  9802 C2B0                     0000B330  1945 MSGRET   LM    R0,R2,MSGSAVE          Restore registers
0000B32E  07F2                                    1946          BR    R2                     Return to caller






0000B330  00000000 00000000                       1948 MSGSAVE  DC    3F'0'                  Registers save area
0000B33C  D200 C2CB 1000      0000B34B  00000000  1949 MSGMVC   MVC   MSGMSG(0),0(R1)        Executed instruction


0000B342  D4E2C7D5 D6C8405C                       1951 MSGCMD   DC    C'MSGNOH * '           *** HERCULES MESSAGE COMMAND ***
0000B34B  40404040 40404040                       1952 MSGMSG   DC    CL95' '                The message text to be displayed
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    43

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  1954 ***********************************************************************
                                                  1955 *                         VERIFY TABLE
                                                  1956 ***********************************************************************
                                                  1957 *
                                                  1958 *        A(actual results), A(expected results), A(#of results)
                                                  1959 *
                                                  1960 ***********************************************************************

0000B3AC                                          1962 VERIFTAB DC    0F'0'
0000B3AC  00001000                                1963          DC    A(SINTOUT)
0000B3B0  00005000                                1964          DC    A(SINTOUT_GOOD)
0000B3B4  00000009                                1965          DC    A(SINTOUT_NUM)
                                                  1966 *
0000B3B8  00001200                                1967          DC    A(SINTFLGS)
0000B3BC  00005240                                1968          DC    A(SINTFLGS_GOOD)
0000B3C0  00000005                                1969          DC    A(SINTFLGS_NUM)
                                                  1970 *
0000B3C4  00001300                                1971          DC    A(SINTRMO)
0000B3C8  00005380                                1972          DC    A(SINTRMO_GOOD)
0000B3CC  00000046                                1973          DC    A(SINTRMO_NUM)
                                                  1974 *
0000B3D0  00001800                                1975          DC    A(SINTRMOF)
0000B3D4  00006500                                1976          DC    A(SINTRMOF_GOOD)
0000B3D8  0000002A                                1977          DC    A(SINTRMOF_NUM)
                                                  1978 *
0000B3DC  00002000                                1979          DC    A(LINTOUT)
0000B3E0  00006F80                                1980          DC    A(LINTOUT_GOOD)
0000B3E4  00000009                                1981          DC    A(LINTOUT_NUM)
                                                  1982 *
0000B3E8  00002200                                1983          DC    A(LINTFLGS)
0000B3EC  000071C0                                1984          DC    A(LINTFLGS_GOOD)
0000B3F0  00000005                                1985          DC    A(LINTFLGS_NUM)
                                                  1986 *
0000B3F4  00002300                                1987          DC    A(LINTRMO)
0000B3F8  00007300                                1988          DC    A(LINTRMO_GOOD)
0000B3FC  00000046                                1989          DC    A(LINTRMO_NUM)
                                                  1990 *
0000B400  00002800                                1991          DC    A(LINTRMOF)
0000B404  00008480                                1992          DC    A(LINTRMOF_GOOD)
0000B408  0000002A                                1993          DC    A(LINTRMOF_NUM)
                                                  1994 *
0000B40C  00003000                                1995          DC    A(XINTOUT)
0000B410  00008F00                                1996          DC    A(XINTOUT_GOOD)
0000B414  00000009                                1997          DC    A(XINTOUT_NUM)
                                                  1998 *
0000B418  00003200                                1999          DC    A(XINTFLGS)
0000B41C  00009140                                2000          DC    A(XINTFLGS_GOOD)
0000B420  00000005                                2001          DC    A(XINTFLGS_NUM)
                                                  2002 *
0000B424  00003300                                2003          DC    A(XINTRMO)
0000B428  00009280                                2004          DC    A(XINTRMO_GOOD)
0000B42C  0000004B                                2005          DC    A(XINTRMO_NUM)
                                                  2006 *
0000B430  00003800                                2007          DC    A(XINTRMOF)
0000B434  0000A540                                2008          DC    A(XINTRMOF_GOOD)
0000B438  0000002D                                2009          DC    A(XINTRMOF_NUM)
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    44

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

                                                  2010 *
                              0000000C  00000001  2011 VERIFLEN EQU   (*-VERIFTAB)/12    #of entries in verify table
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    45

  LOC        OBJECT CODE       ADDR1     ADDR2    STMT

0000B43C                                          2013          END
0000B43C  0000                                    2014                =H'0'
0000B43E  005F                                    2015                =AL2(L'MSGMSG)
0000B440  E68195A3 7A40                           2016                =CL6'Want: '
0000B446  C796A37A 4040                           2017                =CL6'Got:  '
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    46

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

AACTUAL             F    00B2CC       4  1915  1842  1877
AEXPECT             F    00B2C8       4  1914  1844  1849
AHELPERS            A    00027C       4   198   188   235
BFPCVTTF            J    000000   46156   115   165   168   170   173   181   898   900   902   904   907   909   911   913   916
                                                918   920   922   929
BLANKEQ             C    00B29E       3  1911  1850  1878
CGDBR               I    00051E       4   456   220
CGDBRA              I    000582       4   506   222
CGEBR               I    00035C       4   297   213
CGEBRA              I    0003C0       4   347   215
CGXBR               I    0006E0       4   617   227
CGXBRA              I    000748       4   668   229
CHARHEX             C    00B2E8      16  1917  1918
CTLR0               F    0002F0       4   245   206   207   208
EXTDS               F    00031C       4   267   226
FAIL                I    000238       4   196  1810
FAILADR             C    00B296       8  1910  1849  1851  1877  1879
FAILDESC            C    00B260      48  1906  1835
FAILFLAG            X    00B2F8       1  1919  1808  1831
FAILMSG1            C    00B24C      68  1904  1836  1837
FAILMSG2            C    00B290      53  1908  1869  1870  1897  1898
FAILPSW             X    0002E0       8   243   196
FAILVALS            C    00B2A1      36  1912  1853  1854  1855  1857  1858  1859  1861  1862  1863  1865  1866  1867  1881  1882
                                               1883  1885  1886  1887  1889  1890  1891  1893  1894  1895
FPCREGNT            X    0002F4       4   246   304   357   366   375   384   393   401   409   417   425   433   463   518   527
                                                536   545   554   562   570   578   586   594   625   679   688   697   706   715
                                                723   731   739   747   755
FPCREGTR            X    0002F8       4   247   312   471   633
FPR0                U    000000       1   135
FPR1                U    000001       1   136
FPR10               U    00000A       1   145   624   675
FPR11               U    00000B       1   146
FPR12               U    00000C       1   147
FPR13               U    00000D       1   148
FPR14               U    00000E       1   149
FPR15               U    00000F       1   150
FPR2                U    000002       1   137
FPR3                U    000003       1   138
FPR4                U    000004       1   139
FPR5                U    000005       1   140
FPR6                U    000006       1   141
FPR7                U    000007       1   142
FPR8                U    000008       1   143   303   305   315   353   359   368   377   386   394   402   410   418   426   434
                                                462   464   474   512   520   529   538   547   555   563   571   579   587   595
                                                623   626   636   674   681   690   699   708   716   724   732   740   748   756
FPR9                U    000009       1   144
GOODPSW             X    0002D0       8   242   239
HELPERS             H    00B080       2  1750   153   198
HEXTRTAB            U    00B1F8      16  1918  1759  1763  1767  1771  1775  1851  1855  1859  1863  1867  1879  1883  1887  1891
                                               1895
IMAGE               1    000000   46156     0
LBFPCT              U    000048       1   832   262
LBFPIN              F    000908       4   818   832   263
LBFPINRM            F    000950       4   836   851   279
LBFPRMCT            U    000070       1   851   278
LINTFLGS            U    002200       0   909   265  1983
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    47

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

LINTFLGS_GOOD       U    0071C0       1  1221  1232  1984
LINTFLGS_NUM        U    000005       1  1232  1985
LINTOUT             U    002000       0   907   264  1979
LINTOUT_GOOD        U    006F80       1  1199  1218  1980
LINTOUT_NUM         U    000009       1  1218  1981
LINTRMO             U    002300       0   911   280  1987
LINTRMOF            U    002800       0   913   281  1991
LINTRMOF_GOOD       U    008480       1  1379  1464  1992
LINTRMOF_NUM        U    00002A       1  1464  1993
LINTRMO_GOOD        U    007300       1  1235  1376  1988
LINTRMO_NUM         U    000046       1  1376  1989
LONGS               F    00030C       4   261   219
MSG                 I    00B2FA       4  1925  1779  1838  1871  1899
MSGCMD              C    00B342       9  1951  1938  1939
MSGMSG              C    00B34B      95  1952  1932  1949  1930
MSGMVC              I    00B33C       6  1949  1936
MSGOK               I    00B310       2  1934  1931
MSGRET              I    00B32A       4  1945  1942
MSGSAVE             F    00B330       4  1948  1928  1945
PCINTCD             H    00008E       2   166   183  1757
PCNOTDTA            I    00020C       4   187   184
PCOLDPSW            U    000150       0   168   185  1761  1765  1769  1773
PGMCK               H    00B080       2  1756   189
PGMCOMMA            C    00B0F6       1  1786  1758
PGMPSW              C    00B0FC      36  1788  1761  1762  1763  1765  1766  1767  1769  1770  1771  1773  1774  1775
PROGCHK             H    000200       2   182   174
PROGCODE            C    00B0F2       4  1785  1757  1759
PROGMSG             C    00B0DE      66  1783  1777  1778
PROGPSW             D    000228       8   195   194
R0                  U    000000       1   116   187   190   206   208  1777  1830  1836  1869  1897  1901  1925  1928  1930  1932
                                               1934  1945
R1                  U    000001       1   117   305   306   308   309   310   313   314   315   316   318   319   320   359   360
                                                362   363   364   368   369   371   372   373   377   378   380   381   382   386
                                                387   389   390   391   394   395   397   398   399   402   403   405   406   407
                                                410   411   413   414   415   418   419   421   422   423   426   427   429   430
                                                431   434   435   437   438   439   464   465   467   468   469   472   473   474
                                                475   477   478   479   520   521   523   524   525   529   530   532   533   534
                                                538   539   541   542   543   547   548   550   551   552   555   556   558   559
                                                560   563   564   566   567   568   571   572   574   575   576   579   580   582
                                                583   584   587   588   590   591   592   595   596   598   599   600   626   627
                                                629   630   631   634   635   636   637   639   640   641   681   682   684   685
                                                686   690   691   693   694   695   699   700   702   703   704   708   709   711
                                                712   713   716   717   719   720   721   724   725   727   728   729   732   733
                                                735   736   737   740   741   743   744   745   748   749   751   752   753   756
                                                757   759   760   761  1778  1799  1803  1805  1837  1870  1898  1939  1949
R10                 U    00000A       1   126   212   214   219   221   226   228   297   298   347   348   456   457   506   507
                                                617   618   668   669
R11                 U    00000B       1   127
R12                 U    00000C       1   128   153   188   235   301   325   351   444   460   484   510   605   621   646   672
                                                766
R13                 U    00000D       1   129   189   213   215   220   222   227   229   236   300   326   350   445   459   485
                                                509   606   620   647   671   767  1781  1809
R14                 U    00000E       1   130   192   193   237   238
R15                 U    00000F       1   131   152   187   190
R2                  U    000002       1   118   297   299   325   347   349   444   456   458   484   506   508   605   617   619
                                                646   668   670   766  1779  1800  1806  1838  1871  1899  1926  1928  1934  1935
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    48

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

                                               1936  1938  1945  1946
R3                  U    000003       1   119   297   303   322   347   353   441   456   462   481   506   512   602   617   623
                                                624   643   668   674   675   763  1801  1806
R4                  U    000004       1   120  1803  1818  1820  1842  1881  1885  1889  1893
R5                  U    000005       1   121  1818  1821  1830  1835  1843  1844  1853  1857  1861  1865  1901
R6                  U    000006       1   122  1803  1822
R7                  U    000007       1   123   298   306   316   323   348   360   369   378   387   395   403   411   419   427
                                                435   442   457   465   475   482   507   521   530   539   548   556   564   572
                                                580   588   596   603   618   627   637   644   669   682   691   700   709   717
                                                725   733   741   749   757   764  1804  1824
R8                  U    000008       1   124   298   307   310   317   320   324   348   361   364   370   373   379   382   388
                                                391   396   399   404   407   412   415   420   423   428   431   436   439   443
                                                457   466   469   476   479   483   507   522   525   531   534   540   543   549
                                                552   557   560   565   568   573   576   581   584   589   592   597   600   604
                                                618   628   631   638   641   645   669   683   686   692   695   701   704   710
                                                713   718   721   726   729   734   737   742   745   750   753   758   761   765
                                               1816  1822
R9                  U    000009       1   125
RMEXTDS             A    00034C       4   283   228
RMLONGS             A    00033C       4   278   221
RMSHORTS            A    00032C       4   273   214
SAVER0R5            F    00B2D0       4  1916  1830  1901
SAVEREGS            F    00023C       4   197   187   190
SBFPCT              U    000024       1   795   256
SBFPIN              F    0008AC       4   781   795   257
SBFPINRM            F    0008D0       4   799   814   274
SBFPRMCT            U    000038       1   814   273
SHORTS              F    0002FC       4   255   212
SINTFLGS            U    001200       0   900   259  1967
SINTFLGS_GOOD       U    005240       1   953   964  1968
SINTFLGS_NUM        U    000005       1   964  1969
SINTOUT             U    001000       0   898   258  1963
SINTOUT_GOOD        U    005000       1   931   950  1964
SINTOUT_NUM         U    000009       1   950  1965
SINTRMO             U    001300       0   902   275  1971
SINTRMOF            U    001800       0   904   276  1975
SINTRMOF_GOOD       U    006500       1  1111  1196  1976
SINTRMOF_NUM        U    00002A       1  1196  1977
SINTRMO_GOOD        U    005380       1   967  1108  1972
SINTRMO_NUM         U    000046       1  1108  1973
START               I    000280       4   206   171
VERIFAIL            I    00B15A       4  1830  1819
VERIFLEN            U    00000C       1  2011  1800
VERIFTAB            F    00B3AC       4  1962  2011  1799
VERIFY              I    00B142       2  1816  1804
VERINEXT            I    00B14E       4  1820  1902
VERISUB             H    00B120       2  1794   236
WANTGOT             C    00B290       6  1909  1848  1876
XBFPCT              U    000090       1   867   268
XBFPIN              D    0009C0       8   855   867   269
XBFPINRM            D    000A50       8   871   889   284
XBFPRMCT            U    0000F0       1   889   283
XINTFLGS            U    003200       0   918   271  1999
XINTFLGS_GOOD       U    009140       1  1489  1500  2000
XINTFLGS_NUM        U    000005       1  1500  2001
XINTOUT             U    003000       0   916   270  1995
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    49

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

XINTOUT_GOOD        U    008F00       1  1467  1486  1996
XINTOUT_NUM         U    000009       1  1486  1997
XINTRMO             U    003300       0   920   285  2003
XINTRMOF            U    003800       0   922   286  2007
XINTRMOF_GOOD       U    00A540       1  1657  1748  2008
XINTRMOF_NUM        U    00002D       1  1748  2009
XINTRMO_GOOD        U    009280       1  1503  1654  2004
XINTRMO_NUM         U    00004B       1  1654  2005
=AL2(L'MSGMSG)      R    00B43E       2  2015  1930
=CL6'Got:  '        C    00B446       6  2017  1876
=CL6'Want: '        C    00B440       6  2016  1848
=H'0'               H    00B43C       2  2014  1925
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    50

MACRO  DEFN  REFERENCES

No defined macros
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    51

   DESC     SYMBOL    SIZE     POS        ADDR

Entry: 0

Image      IMAGE     46156  0000-B44B  0000-B44B
  Region             46156  0000-B44B  0000-B44B
    CSECT  BFPCVTTF  46156  0000-B44B  0000-B44B
ASMA Ver. 0.2.1  bfp-007-cvttofix64: Test IEEE Convert To Fixed (int-64)                            17 Aug 2022 12:14:03  Page    52

   STMT                                                     FILE NAME

1     c:\Users\Fish\Documents\Visual Studio 2008\Projects\MyProjects\ASMA-0\bfp-007-cvttofix64\bfp-007-cvttofix64.asm


** NO ERRORS FOUND **

